Grammar

    0 $accept: program $end

    1 program: lst_declarations
    2        | %empty

    3 lst_declarations: declaration lst_declarations
    4                 | declaration

    5 declaration: func_declaration
    6            | var_declaration
    7            | error

    8 $@1: %empty

    9 func_declaration: unq_declaration $@1 '(' parameters ')' '{' block_commands '}'

   10 $@2: %empty

   11 $@3: %empty

   12 func_calling: ID '(' $@2 calling_parameters $@3 ')'

   13 var_declaration: unq_declaration ';'

   14 unq_declaration: type ID

   15 type: type_lst
   16     | type_number

   17 type_lst: type_number T_LIST

   18 type_number: T_INT
   19            | T_FLOAT

   20 parameters: lst_parameters
   21           | %empty

   22 lst_parameters: unq_declaration ',' lst_parameters
   23               | unq_declaration

   24 calling_parameters: lst_calling_parameters
   25                   | %empty

   26 lst_calling_parameters: operation ',' lst_calling_parameters
   27                       | operation

   28 block_commands: command block_commands
   29               | command

   30 command: var_declaration
   31        | init_variable
   32        | conditional_stmt
   33        | return_stmt
   34        | iteration
   35        | output
   36        | input

   37 $@4: %empty

   38 command: $@4 '{' block_commands '}'
   39        | operation ';'
   40        | error ';'
   41        | error

   42 init_variable: init_stmt ';'

   43 init_stmt: iden '=' operation

   44 conditional_stmt: IF_STMT '(' operation ')' command
   45                 | IF_STMT '(' operation ')' command ELSE_STMT command

   46 return_stmt: RETURN_STM operation ';'

   47 iteration: FOR_STMT '(' loop_condition ')' command

   48 loop_condition: update_stmt ';' stop_stmt ';' update_stmt

   49 update_stmt: init_stmt
   50            | %empty

   51 stop_stmt: operation
   52          | %empty

   53 output: OUTPUT_WRITE '(' operation ')' ';'
   54       | OUTPUT_WRITELN '(' operation ')' ';'
   55       | OUTPUT_WRITE '(' STRING ')' ';'
   56       | OUTPUT_WRITELN '(' STRING ')' ';'

   57 input: INPUT_READ '(' iden ')' ';'

   58 iden: ID

   59 operation: lst_binary
   60          | operation GREATER operation
   61          | operation GREATER_EQ operation
   62          | operation LESS operation
   63          | operation LESS_EQ operation
   64          | operation EQUAL operation
   65          | operation NOT_EQ operation
   66          | operation AND operation
   67          | operation OR operation

   68 lst_binary: lst_binary FILTER lst_binary
   69           | lst_binary MAP lst_binary
   70           | lst_binary ':' lst_binary
   71           | arith_binary

   72 arith_binary: arith_binary '+' term
   73             | arith_binary '-' term
   74             | term

   75 term: term '*' expression
   76     | term '/' expression
   77     | expression

   78 expression: func_calling
   79           | single_operation
   80           | const
   81           | iden
   82           | '(' operation ')'

   83 const: number
   84      | NIL_CNST

   85 number: NUM_INT
   86       | NUM_FLOAT

   87 single_operation: arith_single
   88                 | lst_single
   89                 | '!' expression

   90 arith_single: '+' expression
   91             | '-' expression

   92 lst_single: '%' expression
   93           | '?' expression


Terminals, with rules where they appear

    $end (0) 0
    '!' <token> (33) 89
    '%' <token> (37) 92
    '(' <token> (40) 9 12 44 45 47 53 54 55 56 57 82
    ')' <token> (41) 9 12 44 45 47 53 54 55 56 57 82
    '*' <token> (42) 75
    '+' <token> (43) 72 90
    ',' <token> (44) 22 26
    '-' <token> (45) 73 91
    '/' <token> (47) 76
    ':' <token> (58) 70
    ';' <token> (59) 13 39 40 42 46 48 53 54 55 56 57
    '=' <token> (61) 43
    '?' <token> (63) 93
    '{' <token> (123) 9 38
    '}' <token> (125) 9 38
    error (256) 7 40 41
    NUM_INT <token> (258) 85
    NUM_FLOAT <token> (259) 86
    STRING <token> (260) 55 56
    NIL_CNST <token> (261) 84
    ID <token> (262) 12 14 58
    RETURN_STM <token> (263) 46
    T_INT <token> (264) 18
    T_FLOAT <token> (265) 19
    T_LIST <token> (266) 17
    IF_STMT <token> (267) 44 45
    ELSE_STMT <token> (268) 45
    FOR_STMT <token> (269) 47
    OUTPUT_WRITE <token> (270) 53 55
    OUTPUT_WRITELN <token> (271) 54 56
    INPUT_READ <token> (272) 57
    AND <token> (273) 66
    OR <token> (274) 67
    GREATER <token> (275) 60
    GREATER_EQ <token> (276) 61
    LESS <token> (277) 62
    LESS_EQ <token> (278) 63
    EQUAL <token> (279) 64
    NOT_EQ <token> (280) 65
    FILTER <token> (281) 68
    MAP <token> (282) 69


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    program <node> (44)
        on left: 1 2
        on right: 0
    lst_declarations <node> (45)
        on left: 3 4
        on right: 1 3
    declaration <node> (46)
        on left: 5 6 7
        on right: 3 4
    func_declaration <node> (47)
        on left: 9
        on right: 5
    $@1 (48)
        on left: 8
        on right: 9
    func_calling <node> (49)
        on left: 12
        on right: 78
    $@2 (50)
        on left: 10
        on right: 12
    $@3 (51)
        on left: 11
        on right: 12
    var_declaration <node> (52)
        on left: 13
        on right: 6 30
    unq_declaration <node> (53)
        on left: 14
        on right: 9 13 22 23
    type <node> (54)
        on left: 15 16
        on right: 14
    type_lst <node> (55)
        on left: 17
        on right: 15
    type_number <node> (56)
        on left: 18 19
        on right: 16 17
    parameters <node> (57)
        on left: 20 21
        on right: 9
    lst_parameters <node> (58)
        on left: 22 23
        on right: 20 22
    calling_parameters <node> (59)
        on left: 24 25
        on right: 12
    lst_calling_parameters <node> (60)
        on left: 26 27
        on right: 24 26
    block_commands <node> (61)
        on left: 28 29
        on right: 9 28 38
    command <node> (62)
        on left: 30 31 32 33 34 35 36 38 39 40 41
        on right: 28 29 44 45 47
    $@4 (63)
        on left: 37
        on right: 38
    init_variable <node> (64)
        on left: 42
        on right: 31
    init_stmt <node> (65)
        on left: 43
        on right: 42 49
    conditional_stmt <node> (66)
        on left: 44 45
        on right: 32
    return_stmt <node> (67)
        on left: 46
        on right: 33
    iteration <node> (68)
        on left: 47
        on right: 34
    loop_condition <node> (69)
        on left: 48
        on right: 47
    update_stmt <node> (70)
        on left: 49 50
        on right: 48
    stop_stmt <node> (71)
        on left: 51 52
        on right: 48
    output <node> (72)
        on left: 53 54 55 56
        on right: 35
    input <node> (73)
        on left: 57
        on right: 36
    iden <node> (74)
        on left: 58
        on right: 43 57 81
    operation <node> (75)
        on left: 59 60 61 62 63 64 65 66 67
        on right: 26 27 39 43 44 45 46 51 53 54 60 61 62 63 64 65 66 67 82
    lst_binary <node> (76)
        on left: 68 69 70 71
        on right: 59 68 69 70
    arith_binary <node> (77)
        on left: 72 73 74
        on right: 71 72 73
    term <node> (78)
        on left: 75 76 77
        on right: 72 73 74 75 76
    expression <node> (79)
        on left: 78 79 80 81 82
        on right: 75 76 77 89 90 91 92 93
    const <node> (80)
        on left: 83 84
        on right: 80
    number <node> (81)
        on left: 85 86
        on right: 83
    single_operation <node> (82)
        on left: 87 88 89
        on right: 79
    arith_single <node> (83)
        on left: 90 91
        on right: 87
    lst_single <node> (84)
        on left: 92 93
        on right: 88


State 0

    0 $accept: • program $end

    error    shift, and go to state 1
    T_INT    shift, and go to state 2
    T_FLOAT  shift, and go to state 3

    $end  reduce using rule 2 (program)

    program           go to state 4
    lst_declarations  go to state 5
    declaration       go to state 6
    func_declaration  go to state 7
    var_declaration   go to state 8
    unq_declaration   go to state 9
    type              go to state 10
    type_lst          go to state 11
    type_number       go to state 12


State 1

    7 declaration: error •

    $end     reduce using rule 7 (declaration)
    error    reduce using rule 7 (declaration)
    T_INT    reduce using rule 7 (declaration)
    T_FLOAT  reduce using rule 7 (declaration)


State 2

   18 type_number: T_INT •

    ID      reduce using rule 18 (type_number)
    T_LIST  reduce using rule 18 (type_number)


State 3

   19 type_number: T_FLOAT •

    ID      reduce using rule 19 (type_number)
    T_LIST  reduce using rule 19 (type_number)


State 4

    0 $accept: program • $end

    $end  shift, and go to state 13


State 5

    1 program: lst_declarations •

    $end  reduce using rule 1 (program)


State 6

    3 lst_declarations: declaration • lst_declarations
    4                 | declaration •

    error    shift, and go to state 1
    T_INT    shift, and go to state 2
    T_FLOAT  shift, and go to state 3

    $end  reduce using rule 4 (lst_declarations)

    lst_declarations  go to state 14
    declaration       go to state 6
    func_declaration  go to state 7
    var_declaration   go to state 8
    unq_declaration   go to state 9
    type              go to state 10
    type_lst          go to state 11
    type_number       go to state 12


State 7

    5 declaration: func_declaration •

    $end     reduce using rule 5 (declaration)
    error    reduce using rule 5 (declaration)
    T_INT    reduce using rule 5 (declaration)
    T_FLOAT  reduce using rule 5 (declaration)


State 8

    6 declaration: var_declaration •

    $end     reduce using rule 6 (declaration)
    error    reduce using rule 6 (declaration)
    T_INT    reduce using rule 6 (declaration)
    T_FLOAT  reduce using rule 6 (declaration)


State 9

    9 func_declaration: unq_declaration • $@1 '(' parameters ')' '{' block_commands '}'
   13 var_declaration: unq_declaration • ';'

    ';'  shift, and go to state 15

    '('  reduce using rule 8 ($@1)

    $@1  go to state 16


State 10

   14 unq_declaration: type • ID

    ID  shift, and go to state 17


State 11

   15 type: type_lst •

    ID  reduce using rule 15 (type)


State 12

   16 type: type_number •
   17 type_lst: type_number • T_LIST

    T_LIST  shift, and go to state 18

    ID  reduce using rule 16 (type)


State 13

    0 $accept: program $end •

    $default  accept


State 14

    3 lst_declarations: declaration lst_declarations •

    $end  reduce using rule 3 (lst_declarations)


State 15

   13 var_declaration: unq_declaration ';' •

    $end     reduce using rule 13 (var_declaration)
    error    reduce using rule 13 (var_declaration)
    T_INT    reduce using rule 13 (var_declaration)
    T_FLOAT  reduce using rule 13 (var_declaration)


State 16

    9 func_declaration: unq_declaration $@1 • '(' parameters ')' '{' block_commands '}'

    '('  shift, and go to state 19


State 17

   14 unq_declaration: type ID •

    '('  reduce using rule 14 (unq_declaration)
    ';'  reduce using rule 14 (unq_declaration)


State 18

   17 type_lst: type_number T_LIST •

    ID  reduce using rule 17 (type_lst)


State 19

    9 func_declaration: unq_declaration $@1 '(' • parameters ')' '{' block_commands '}'

    T_INT    shift, and go to state 2
    T_FLOAT  shift, and go to state 3

    ')'  reduce using rule 21 (parameters)

    unq_declaration  go to state 20
    type             go to state 164
    type_lst         go to state 11
    type_number      go to state 12
    parameters       go to state 21
    lst_parameters   go to state 22


State 20

   22 lst_parameters: unq_declaration • ',' lst_parameters
   23               | unq_declaration •

    ','  shift, and go to state 23

    ')'  reduce using rule 23 (lst_parameters)


State 21

    9 func_declaration: unq_declaration $@1 '(' parameters • ')' '{' block_commands '}'

    ')'  shift, and go to state 24


State 22

   20 parameters: lst_parameters •

    ')'  reduce using rule 20 (parameters)


State 23

   22 lst_parameters: unq_declaration ',' • lst_parameters

    T_INT    shift, and go to state 2
    T_FLOAT  shift, and go to state 3

    unq_declaration  go to state 20
    type             go to state 164
    type_lst         go to state 11
    type_number      go to state 12
    lst_parameters   go to state 25


State 24

    9 func_declaration: unq_declaration $@1 '(' parameters ')' • '{' block_commands '}'

    '{'  shift, and go to state 26


State 25

   22 lst_parameters: unq_declaration ',' lst_parameters •

    ')'  reduce using rule 22 (lst_parameters)


State 26

    9 func_declaration: unq_declaration $@1 '(' parameters ')' '{' • block_commands '}'

    error           shift, and go to state 27
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 32
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 33
    FOR_STMT        shift, and go to state 34
    OUTPUT_WRITE    shift, and go to state 35
    OUTPUT_WRITELN  shift, and go to state 36
    INPUT_READ      shift, and go to state 37
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 37 ($@4)

    func_calling      go to state 44
    var_declaration   go to state 45
    unq_declaration   go to state 46
    type              go to state 165
    type_lst          go to state 11
    type_number       go to state 12
    block_commands    go to state 47
    command           go to state 48
    $@4               go to state 49
    init_variable     go to state 50
    init_stmt         go to state 51
    conditional_stmt  go to state 52
    return_stmt       go to state 53
    iteration         go to state 54
    output            go to state 55
    input             go to state 56
    iden              go to state 57
    operation         go to state 58
    lst_binary        go to state 59
    arith_binary      go to state 60
    term              go to state 61
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 27

   40 command: error • ';'
   41        | error •

    ';'  shift, and go to state 68

    error           reduce using rule 41 (command)
    NUM_INT         reduce using rule 41 (command)
    NUM_FLOAT       reduce using rule 41 (command)
    NIL_CNST        reduce using rule 41 (command)
    ID              reduce using rule 41 (command)
    RETURN_STM      reduce using rule 41 (command)
    T_INT           reduce using rule 41 (command)
    T_FLOAT         reduce using rule 41 (command)
    IF_STMT         reduce using rule 41 (command)
    FOR_STMT        reduce using rule 41 (command)
    OUTPUT_WRITE    reduce using rule 41 (command)
    OUTPUT_WRITELN  reduce using rule 41 (command)
    INPUT_READ      reduce using rule 41 (command)
    '('             reduce using rule 41 (command)
    '{'             reduce using rule 41 (command)
    '}'             reduce using rule 41 (command)
    '+'             reduce using rule 41 (command)
    '-'             reduce using rule 41 (command)
    '%'             reduce using rule 41 (command)
    '?'             reduce using rule 41 (command)
    '!'             reduce using rule 41 (command)


State 28

   85 number: NUM_INT •

    ';'         reduce using rule 85 (number)
    AND         reduce using rule 85 (number)
    OR          reduce using rule 85 (number)
    GREATER     reduce using rule 85 (number)
    GREATER_EQ  reduce using rule 85 (number)
    LESS        reduce using rule 85 (number)
    LESS_EQ     reduce using rule 85 (number)
    EQUAL       reduce using rule 85 (number)
    NOT_EQ      reduce using rule 85 (number)
    '+'         reduce using rule 85 (number)
    '-'         reduce using rule 85 (number)
    '*'         reduce using rule 85 (number)
    '/'         reduce using rule 85 (number)
    FILTER      reduce using rule 85 (number)
    MAP         reduce using rule 85 (number)
    ':'         reduce using rule 85 (number)


State 29

   86 number: NUM_FLOAT •

    ';'         reduce using rule 86 (number)
    AND         reduce using rule 86 (number)
    OR          reduce using rule 86 (number)
    GREATER     reduce using rule 86 (number)
    GREATER_EQ  reduce using rule 86 (number)
    LESS        reduce using rule 86 (number)
    LESS_EQ     reduce using rule 86 (number)
    EQUAL       reduce using rule 86 (number)
    NOT_EQ      reduce using rule 86 (number)
    '+'         reduce using rule 86 (number)
    '-'         reduce using rule 86 (number)
    '*'         reduce using rule 86 (number)
    '/'         reduce using rule 86 (number)
    FILTER      reduce using rule 86 (number)
    MAP         reduce using rule 86 (number)
    ':'         reduce using rule 86 (number)


State 30

   84 const: NIL_CNST •

    ';'         reduce using rule 84 (const)
    AND         reduce using rule 84 (const)
    OR          reduce using rule 84 (const)
    GREATER     reduce using rule 84 (const)
    GREATER_EQ  reduce using rule 84 (const)
    LESS        reduce using rule 84 (const)
    LESS_EQ     reduce using rule 84 (const)
    EQUAL       reduce using rule 84 (const)
    NOT_EQ      reduce using rule 84 (const)
    '+'         reduce using rule 84 (const)
    '-'         reduce using rule 84 (const)
    '*'         reduce using rule 84 (const)
    '/'         reduce using rule 84 (const)
    FILTER      reduce using rule 84 (const)
    MAP         reduce using rule 84 (const)
    ':'         reduce using rule 84 (const)


State 31

   12 func_calling: ID • '(' $@2 calling_parameters $@3 ')'
   58 iden: ID •

    '('  shift, and go to state 69

    ';'         reduce using rule 58 (iden)
    AND         reduce using rule 58 (iden)
    OR          reduce using rule 58 (iden)
    GREATER     reduce using rule 58 (iden)
    GREATER_EQ  reduce using rule 58 (iden)
    LESS        reduce using rule 58 (iden)
    LESS_EQ     reduce using rule 58 (iden)
    EQUAL       reduce using rule 58 (iden)
    NOT_EQ      reduce using rule 58 (iden)
    '+'         reduce using rule 58 (iden)
    '-'         reduce using rule 58 (iden)
    '*'         reduce using rule 58 (iden)
    '/'         reduce using rule 58 (iden)
    FILTER      reduce using rule 58 (iden)
    MAP         reduce using rule 58 (iden)
    ':'         reduce using rule 58 (iden)
    '='         reduce using rule 58 (iden)


State 32

   46 return_stmt: RETURN_STM • operation ';'

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 44
    iden              go to state 70
    operation         go to state 71
    lst_binary        go to state 59
    arith_binary      go to state 60
    term              go to state 61
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 33

   44 conditional_stmt: IF_STMT • '(' operation ')' command
   45                 | IF_STMT • '(' operation ')' command ELSE_STMT command

    '('  shift, and go to state 72


State 34

   47 iteration: FOR_STMT • '(' loop_condition ')' command

    '('  shift, and go to state 73


State 35

   53 output: OUTPUT_WRITE • '(' operation ')' ';'
   55       | OUTPUT_WRITE • '(' STRING ')' ';'

    '('  shift, and go to state 74


State 36

   54 output: OUTPUT_WRITELN • '(' operation ')' ';'
   56       | OUTPUT_WRITELN • '(' STRING ')' ';'

    '('  shift, and go to state 75


State 37

   57 input: INPUT_READ • '(' iden ')' ';'

    '('  shift, and go to state 76


State 38

   82 expression: '(' • operation ')'

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    operation         go to state 77
    lst_binary        go to state 179
    arith_binary      go to state 180
    term              go to state 181
    expression        go to state 182
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 39

   90 arith_single: '+' • expression

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 44
    iden              go to state 70
    expression        go to state 78
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 40

   91 arith_single: '-' • expression

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 44
    iden              go to state 70
    expression        go to state 79
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 41

   92 lst_single: '%' • expression

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 44
    iden              go to state 70
    expression        go to state 80
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 42

   93 lst_single: '?' • expression

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 44
    iden              go to state 70
    expression        go to state 81
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 43

   89 single_operation: '!' • expression

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 44
    iden              go to state 70
    expression        go to state 82
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 44

   78 expression: func_calling •

    ';'         reduce using rule 78 (expression)
    AND         reduce using rule 78 (expression)
    OR          reduce using rule 78 (expression)
    GREATER     reduce using rule 78 (expression)
    GREATER_EQ  reduce using rule 78 (expression)
    LESS        reduce using rule 78 (expression)
    LESS_EQ     reduce using rule 78 (expression)
    EQUAL       reduce using rule 78 (expression)
    NOT_EQ      reduce using rule 78 (expression)
    '+'         reduce using rule 78 (expression)
    '-'         reduce using rule 78 (expression)
    '*'         reduce using rule 78 (expression)
    '/'         reduce using rule 78 (expression)
    FILTER      reduce using rule 78 (expression)
    MAP         reduce using rule 78 (expression)
    ':'         reduce using rule 78 (expression)


State 45

   30 command: var_declaration •

    error           reduce using rule 30 (command)
    NUM_INT         reduce using rule 30 (command)
    NUM_FLOAT       reduce using rule 30 (command)
    NIL_CNST        reduce using rule 30 (command)
    ID              reduce using rule 30 (command)
    RETURN_STM      reduce using rule 30 (command)
    T_INT           reduce using rule 30 (command)
    T_FLOAT         reduce using rule 30 (command)
    IF_STMT         reduce using rule 30 (command)
    FOR_STMT        reduce using rule 30 (command)
    OUTPUT_WRITE    reduce using rule 30 (command)
    OUTPUT_WRITELN  reduce using rule 30 (command)
    INPUT_READ      reduce using rule 30 (command)
    '('             reduce using rule 30 (command)
    '{'             reduce using rule 30 (command)
    '}'             reduce using rule 30 (command)
    '+'             reduce using rule 30 (command)
    '-'             reduce using rule 30 (command)
    '%'             reduce using rule 30 (command)
    '?'             reduce using rule 30 (command)
    '!'             reduce using rule 30 (command)


State 46

   13 var_declaration: unq_declaration • ';'

    ';'  shift, and go to state 188


State 47

    9 func_declaration: unq_declaration $@1 '(' parameters ')' '{' block_commands • '}'

    '}'  shift, and go to state 83


State 48

   28 block_commands: command • block_commands
   29               | command •

    error           shift, and go to state 27
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 32
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 33
    FOR_STMT        shift, and go to state 34
    OUTPUT_WRITE    shift, and go to state 35
    OUTPUT_WRITELN  shift, and go to state 36
    INPUT_READ      shift, and go to state 37
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 37 ($@4)
    '}'  reduce using rule 29 (block_commands)

    func_calling      go to state 44
    var_declaration   go to state 45
    unq_declaration   go to state 46
    type              go to state 165
    type_lst          go to state 11
    type_number       go to state 12
    block_commands    go to state 84
    command           go to state 48
    $@4               go to state 49
    init_variable     go to state 50
    init_stmt         go to state 51
    conditional_stmt  go to state 52
    return_stmt       go to state 53
    iteration         go to state 54
    output            go to state 55
    input             go to state 56
    iden              go to state 57
    operation         go to state 58
    lst_binary        go to state 59
    arith_binary      go to state 60
    term              go to state 61
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 49

   38 command: $@4 • '{' block_commands '}'

    '{'  shift, and go to state 85


State 50

   31 command: init_variable •

    error           reduce using rule 31 (command)
    NUM_INT         reduce using rule 31 (command)
    NUM_FLOAT       reduce using rule 31 (command)
    NIL_CNST        reduce using rule 31 (command)
    ID              reduce using rule 31 (command)
    RETURN_STM      reduce using rule 31 (command)
    T_INT           reduce using rule 31 (command)
    T_FLOAT         reduce using rule 31 (command)
    IF_STMT         reduce using rule 31 (command)
    FOR_STMT        reduce using rule 31 (command)
    OUTPUT_WRITE    reduce using rule 31 (command)
    OUTPUT_WRITELN  reduce using rule 31 (command)
    INPUT_READ      reduce using rule 31 (command)
    '('             reduce using rule 31 (command)
    '{'             reduce using rule 31 (command)
    '}'             reduce using rule 31 (command)
    '+'             reduce using rule 31 (command)
    '-'             reduce using rule 31 (command)
    '%'             reduce using rule 31 (command)
    '?'             reduce using rule 31 (command)
    '!'             reduce using rule 31 (command)


State 51

   42 init_variable: init_stmt • ';'

    ';'  shift, and go to state 86


State 52

   32 command: conditional_stmt •

    error           reduce using rule 32 (command)
    NUM_INT         reduce using rule 32 (command)
    NUM_FLOAT       reduce using rule 32 (command)
    NIL_CNST        reduce using rule 32 (command)
    ID              reduce using rule 32 (command)
    RETURN_STM      reduce using rule 32 (command)
    T_INT           reduce using rule 32 (command)
    T_FLOAT         reduce using rule 32 (command)
    IF_STMT         reduce using rule 32 (command)
    FOR_STMT        reduce using rule 32 (command)
    OUTPUT_WRITE    reduce using rule 32 (command)
    OUTPUT_WRITELN  reduce using rule 32 (command)
    INPUT_READ      reduce using rule 32 (command)
    '('             reduce using rule 32 (command)
    '{'             reduce using rule 32 (command)
    '}'             reduce using rule 32 (command)
    '+'             reduce using rule 32 (command)
    '-'             reduce using rule 32 (command)
    '%'             reduce using rule 32 (command)
    '?'             reduce using rule 32 (command)
    '!'             reduce using rule 32 (command)


State 53

   33 command: return_stmt •

    error           reduce using rule 33 (command)
    NUM_INT         reduce using rule 33 (command)
    NUM_FLOAT       reduce using rule 33 (command)
    NIL_CNST        reduce using rule 33 (command)
    ID              reduce using rule 33 (command)
    RETURN_STM      reduce using rule 33 (command)
    T_INT           reduce using rule 33 (command)
    T_FLOAT         reduce using rule 33 (command)
    IF_STMT         reduce using rule 33 (command)
    FOR_STMT        reduce using rule 33 (command)
    OUTPUT_WRITE    reduce using rule 33 (command)
    OUTPUT_WRITELN  reduce using rule 33 (command)
    INPUT_READ      reduce using rule 33 (command)
    '('             reduce using rule 33 (command)
    '{'             reduce using rule 33 (command)
    '}'             reduce using rule 33 (command)
    '+'             reduce using rule 33 (command)
    '-'             reduce using rule 33 (command)
    '%'             reduce using rule 33 (command)
    '?'             reduce using rule 33 (command)
    '!'             reduce using rule 33 (command)


State 54

   34 command: iteration •

    error           reduce using rule 34 (command)
    NUM_INT         reduce using rule 34 (command)
    NUM_FLOAT       reduce using rule 34 (command)
    NIL_CNST        reduce using rule 34 (command)
    ID              reduce using rule 34 (command)
    RETURN_STM      reduce using rule 34 (command)
    T_INT           reduce using rule 34 (command)
    T_FLOAT         reduce using rule 34 (command)
    IF_STMT         reduce using rule 34 (command)
    FOR_STMT        reduce using rule 34 (command)
    OUTPUT_WRITE    reduce using rule 34 (command)
    OUTPUT_WRITELN  reduce using rule 34 (command)
    INPUT_READ      reduce using rule 34 (command)
    '('             reduce using rule 34 (command)
    '{'             reduce using rule 34 (command)
    '}'             reduce using rule 34 (command)
    '+'             reduce using rule 34 (command)
    '-'             reduce using rule 34 (command)
    '%'             reduce using rule 34 (command)
    '?'             reduce using rule 34 (command)
    '!'             reduce using rule 34 (command)


State 55

   35 command: output •

    error           reduce using rule 35 (command)
    NUM_INT         reduce using rule 35 (command)
    NUM_FLOAT       reduce using rule 35 (command)
    NIL_CNST        reduce using rule 35 (command)
    ID              reduce using rule 35 (command)
    RETURN_STM      reduce using rule 35 (command)
    T_INT           reduce using rule 35 (command)
    T_FLOAT         reduce using rule 35 (command)
    IF_STMT         reduce using rule 35 (command)
    FOR_STMT        reduce using rule 35 (command)
    OUTPUT_WRITE    reduce using rule 35 (command)
    OUTPUT_WRITELN  reduce using rule 35 (command)
    INPUT_READ      reduce using rule 35 (command)
    '('             reduce using rule 35 (command)
    '{'             reduce using rule 35 (command)
    '}'             reduce using rule 35 (command)
    '+'             reduce using rule 35 (command)
    '-'             reduce using rule 35 (command)
    '%'             reduce using rule 35 (command)
    '?'             reduce using rule 35 (command)
    '!'             reduce using rule 35 (command)


State 56

   36 command: input •

    error           reduce using rule 36 (command)
    NUM_INT         reduce using rule 36 (command)
    NUM_FLOAT       reduce using rule 36 (command)
    NIL_CNST        reduce using rule 36 (command)
    ID              reduce using rule 36 (command)
    RETURN_STM      reduce using rule 36 (command)
    T_INT           reduce using rule 36 (command)
    T_FLOAT         reduce using rule 36 (command)
    IF_STMT         reduce using rule 36 (command)
    FOR_STMT        reduce using rule 36 (command)
    OUTPUT_WRITE    reduce using rule 36 (command)
    OUTPUT_WRITELN  reduce using rule 36 (command)
    INPUT_READ      reduce using rule 36 (command)
    '('             reduce using rule 36 (command)
    '{'             reduce using rule 36 (command)
    '}'             reduce using rule 36 (command)
    '+'             reduce using rule 36 (command)
    '-'             reduce using rule 36 (command)
    '%'             reduce using rule 36 (command)
    '?'             reduce using rule 36 (command)
    '!'             reduce using rule 36 (command)


State 57

   43 init_stmt: iden • '=' operation
   81 expression: iden •

    '='  shift, and go to state 87

    ';'         reduce using rule 81 (expression)
    AND         reduce using rule 81 (expression)
    OR          reduce using rule 81 (expression)
    GREATER     reduce using rule 81 (expression)
    GREATER_EQ  reduce using rule 81 (expression)
    LESS        reduce using rule 81 (expression)
    LESS_EQ     reduce using rule 81 (expression)
    EQUAL       reduce using rule 81 (expression)
    NOT_EQ      reduce using rule 81 (expression)
    '+'         reduce using rule 81 (expression)
    '-'         reduce using rule 81 (expression)
    '*'         reduce using rule 81 (expression)
    '/'         reduce using rule 81 (expression)
    FILTER      reduce using rule 81 (expression)
    MAP         reduce using rule 81 (expression)
    ':'         reduce using rule 81 (expression)


State 58

   39 command: operation • ';'
   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    ';'         shift, and go to state 88
    AND         shift, and go to state 89
    OR          shift, and go to state 90
    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94
    EQUAL       shift, and go to state 95
    NOT_EQ      shift, and go to state 96


State 59

   59 operation: lst_binary •
   68 lst_binary: lst_binary • FILTER lst_binary
   69           | lst_binary • MAP lst_binary
   70           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 97
    MAP     shift, and go to state 98
    ':'     shift, and go to state 99

    ';'         reduce using rule 59 (operation)
    AND         reduce using rule 59 (operation)
    OR          reduce using rule 59 (operation)
    GREATER     reduce using rule 59 (operation)
    GREATER_EQ  reduce using rule 59 (operation)
    LESS        reduce using rule 59 (operation)
    LESS_EQ     reduce using rule 59 (operation)
    EQUAL       reduce using rule 59 (operation)
    NOT_EQ      reduce using rule 59 (operation)


State 60

   71 lst_binary: arith_binary •
   72 arith_binary: arith_binary • '+' term
   73             | arith_binary • '-' term

    '+'  shift, and go to state 100
    '-'  shift, and go to state 101

    ';'         reduce using rule 71 (lst_binary)
    AND         reduce using rule 71 (lst_binary)
    OR          reduce using rule 71 (lst_binary)
    GREATER     reduce using rule 71 (lst_binary)
    GREATER_EQ  reduce using rule 71 (lst_binary)
    LESS        reduce using rule 71 (lst_binary)
    LESS_EQ     reduce using rule 71 (lst_binary)
    EQUAL       reduce using rule 71 (lst_binary)
    NOT_EQ      reduce using rule 71 (lst_binary)
    FILTER      reduce using rule 71 (lst_binary)
    MAP         reduce using rule 71 (lst_binary)
    ':'         reduce using rule 71 (lst_binary)


State 61

   74 arith_binary: term •
   75 term: term • '*' expression
   76     | term • '/' expression

    '*'  shift, and go to state 102
    '/'  shift, and go to state 103

    ';'         reduce using rule 74 (arith_binary)
    AND         reduce using rule 74 (arith_binary)
    OR          reduce using rule 74 (arith_binary)
    GREATER     reduce using rule 74 (arith_binary)
    GREATER_EQ  reduce using rule 74 (arith_binary)
    LESS        reduce using rule 74 (arith_binary)
    LESS_EQ     reduce using rule 74 (arith_binary)
    EQUAL       reduce using rule 74 (arith_binary)
    NOT_EQ      reduce using rule 74 (arith_binary)
    '+'         reduce using rule 74 (arith_binary)
    '-'         reduce using rule 74 (arith_binary)
    FILTER      reduce using rule 74 (arith_binary)
    MAP         reduce using rule 74 (arith_binary)
    ':'         reduce using rule 74 (arith_binary)


State 62

   77 term: expression •

    ';'         reduce using rule 77 (term)
    AND         reduce using rule 77 (term)
    OR          reduce using rule 77 (term)
    GREATER     reduce using rule 77 (term)
    GREATER_EQ  reduce using rule 77 (term)
    LESS        reduce using rule 77 (term)
    LESS_EQ     reduce using rule 77 (term)
    EQUAL       reduce using rule 77 (term)
    NOT_EQ      reduce using rule 77 (term)
    '+'         reduce using rule 77 (term)
    '-'         reduce using rule 77 (term)
    '*'         reduce using rule 77 (term)
    '/'         reduce using rule 77 (term)
    FILTER      reduce using rule 77 (term)
    MAP         reduce using rule 77 (term)
    ':'         reduce using rule 77 (term)


State 63

   80 expression: const •

    ';'         reduce using rule 80 (expression)
    AND         reduce using rule 80 (expression)
    OR          reduce using rule 80 (expression)
    GREATER     reduce using rule 80 (expression)
    GREATER_EQ  reduce using rule 80 (expression)
    LESS        reduce using rule 80 (expression)
    LESS_EQ     reduce using rule 80 (expression)
    EQUAL       reduce using rule 80 (expression)
    NOT_EQ      reduce using rule 80 (expression)
    '+'         reduce using rule 80 (expression)
    '-'         reduce using rule 80 (expression)
    '*'         reduce using rule 80 (expression)
    '/'         reduce using rule 80 (expression)
    FILTER      reduce using rule 80 (expression)
    MAP         reduce using rule 80 (expression)
    ':'         reduce using rule 80 (expression)


State 64

   83 const: number •

    ';'         reduce using rule 83 (const)
    AND         reduce using rule 83 (const)
    OR          reduce using rule 83 (const)
    GREATER     reduce using rule 83 (const)
    GREATER_EQ  reduce using rule 83 (const)
    LESS        reduce using rule 83 (const)
    LESS_EQ     reduce using rule 83 (const)
    EQUAL       reduce using rule 83 (const)
    NOT_EQ      reduce using rule 83 (const)
    '+'         reduce using rule 83 (const)
    '-'         reduce using rule 83 (const)
    '*'         reduce using rule 83 (const)
    '/'         reduce using rule 83 (const)
    FILTER      reduce using rule 83 (const)
    MAP         reduce using rule 83 (const)
    ':'         reduce using rule 83 (const)


State 65

   79 expression: single_operation •

    ';'         reduce using rule 79 (expression)
    AND         reduce using rule 79 (expression)
    OR          reduce using rule 79 (expression)
    GREATER     reduce using rule 79 (expression)
    GREATER_EQ  reduce using rule 79 (expression)
    LESS        reduce using rule 79 (expression)
    LESS_EQ     reduce using rule 79 (expression)
    EQUAL       reduce using rule 79 (expression)
    NOT_EQ      reduce using rule 79 (expression)
    '+'         reduce using rule 79 (expression)
    '-'         reduce using rule 79 (expression)
    '*'         reduce using rule 79 (expression)
    '/'         reduce using rule 79 (expression)
    FILTER      reduce using rule 79 (expression)
    MAP         reduce using rule 79 (expression)
    ':'         reduce using rule 79 (expression)


State 66

   87 single_operation: arith_single •

    ';'         reduce using rule 87 (single_operation)
    AND         reduce using rule 87 (single_operation)
    OR          reduce using rule 87 (single_operation)
    GREATER     reduce using rule 87 (single_operation)
    GREATER_EQ  reduce using rule 87 (single_operation)
    LESS        reduce using rule 87 (single_operation)
    LESS_EQ     reduce using rule 87 (single_operation)
    EQUAL       reduce using rule 87 (single_operation)
    NOT_EQ      reduce using rule 87 (single_operation)
    '+'         reduce using rule 87 (single_operation)
    '-'         reduce using rule 87 (single_operation)
    '*'         reduce using rule 87 (single_operation)
    '/'         reduce using rule 87 (single_operation)
    FILTER      reduce using rule 87 (single_operation)
    MAP         reduce using rule 87 (single_operation)
    ':'         reduce using rule 87 (single_operation)


State 67

   88 single_operation: lst_single •

    ';'         reduce using rule 88 (single_operation)
    AND         reduce using rule 88 (single_operation)
    OR          reduce using rule 88 (single_operation)
    GREATER     reduce using rule 88 (single_operation)
    GREATER_EQ  reduce using rule 88 (single_operation)
    LESS        reduce using rule 88 (single_operation)
    LESS_EQ     reduce using rule 88 (single_operation)
    EQUAL       reduce using rule 88 (single_operation)
    NOT_EQ      reduce using rule 88 (single_operation)
    '+'         reduce using rule 88 (single_operation)
    '-'         reduce using rule 88 (single_operation)
    '*'         reduce using rule 88 (single_operation)
    '/'         reduce using rule 88 (single_operation)
    FILTER      reduce using rule 88 (single_operation)
    MAP         reduce using rule 88 (single_operation)
    ':'         reduce using rule 88 (single_operation)


State 68

   40 command: error ';' •

    error           reduce using rule 40 (command)
    NUM_INT         reduce using rule 40 (command)
    NUM_FLOAT       reduce using rule 40 (command)
    NIL_CNST        reduce using rule 40 (command)
    ID              reduce using rule 40 (command)
    RETURN_STM      reduce using rule 40 (command)
    T_INT           reduce using rule 40 (command)
    T_FLOAT         reduce using rule 40 (command)
    IF_STMT         reduce using rule 40 (command)
    FOR_STMT        reduce using rule 40 (command)
    OUTPUT_WRITE    reduce using rule 40 (command)
    OUTPUT_WRITELN  reduce using rule 40 (command)
    INPUT_READ      reduce using rule 40 (command)
    '('             reduce using rule 40 (command)
    '{'             reduce using rule 40 (command)
    '}'             reduce using rule 40 (command)
    '+'             reduce using rule 40 (command)
    '-'             reduce using rule 40 (command)
    '%'             reduce using rule 40 (command)
    '?'             reduce using rule 40 (command)
    '!'             reduce using rule 40 (command)


State 69

   12 func_calling: ID '(' • $@2 calling_parameters $@3 ')'

    NUM_INT    reduce using rule 10 ($@2)
    NUM_FLOAT  reduce using rule 10 ($@2)
    NIL_CNST   reduce using rule 10 ($@2)
    ID         reduce using rule 10 ($@2)
    '('        reduce using rule 10 ($@2)
    ')'        reduce using rule 10 ($@2)
    '+'        reduce using rule 10 ($@2)
    '-'        reduce using rule 10 ($@2)
    '%'        reduce using rule 10 ($@2)
    '?'        reduce using rule 10 ($@2)
    '!'        reduce using rule 10 ($@2)

    $@2  go to state 104


State 70

   81 expression: iden •

    ';'         reduce using rule 81 (expression)
    AND         reduce using rule 81 (expression)
    OR          reduce using rule 81 (expression)
    GREATER     reduce using rule 81 (expression)
    GREATER_EQ  reduce using rule 81 (expression)
    LESS        reduce using rule 81 (expression)
    LESS_EQ     reduce using rule 81 (expression)
    EQUAL       reduce using rule 81 (expression)
    NOT_EQ      reduce using rule 81 (expression)
    '+'         reduce using rule 81 (expression)
    '-'         reduce using rule 81 (expression)
    '*'         reduce using rule 81 (expression)
    '/'         reduce using rule 81 (expression)
    FILTER      reduce using rule 81 (expression)
    MAP         reduce using rule 81 (expression)
    ':'         reduce using rule 81 (expression)


State 71

   46 return_stmt: RETURN_STM operation • ';'
   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    ';'         shift, and go to state 105
    AND         shift, and go to state 89
    OR          shift, and go to state 90
    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94
    EQUAL       shift, and go to state 95
    NOT_EQ      shift, and go to state 96


State 72

   44 conditional_stmt: IF_STMT '(' • operation ')' command
   45                 | IF_STMT '(' • operation ')' command ELSE_STMT command

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    operation         go to state 106
    lst_binary        go to state 179
    arith_binary      go to state 180
    term              go to state 181
    expression        go to state 182
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 73

   47 iteration: FOR_STMT '(' • loop_condition ')' command

    ID  shift, and go to state 107

    ';'  reduce using rule 50 (update_stmt)

    init_stmt       go to state 108
    loop_condition  go to state 109
    update_stmt     go to state 110
    iden            go to state 111


State 74

   53 output: OUTPUT_WRITE '(' • operation ')' ';'
   55       | OUTPUT_WRITE '(' • STRING ')' ';'

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    STRING     shift, and go to state 112
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    operation         go to state 113
    lst_binary        go to state 179
    arith_binary      go to state 180
    term              go to state 181
    expression        go to state 182
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 75

   54 output: OUTPUT_WRITELN '(' • operation ')' ';'
   56       | OUTPUT_WRITELN '(' • STRING ')' ';'

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    STRING     shift, and go to state 114
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    operation         go to state 115
    lst_binary        go to state 179
    arith_binary      go to state 180
    term              go to state 181
    expression        go to state 182
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 76

   57 input: INPUT_READ '(' • iden ')' ';'

    ID  shift, and go to state 189

    iden  go to state 116


State 77

   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation
   82 expression: '(' operation • ')'

    ')'         shift, and go to state 117
    AND         shift, and go to state 190
    OR          shift, and go to state 191
    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195
    EQUAL       shift, and go to state 196
    NOT_EQ      shift, and go to state 197


State 78

   90 arith_single: '+' expression •

    ';'         reduce using rule 90 (arith_single)
    AND         reduce using rule 90 (arith_single)
    OR          reduce using rule 90 (arith_single)
    GREATER     reduce using rule 90 (arith_single)
    GREATER_EQ  reduce using rule 90 (arith_single)
    LESS        reduce using rule 90 (arith_single)
    LESS_EQ     reduce using rule 90 (arith_single)
    EQUAL       reduce using rule 90 (arith_single)
    NOT_EQ      reduce using rule 90 (arith_single)
    '+'         reduce using rule 90 (arith_single)
    '-'         reduce using rule 90 (arith_single)
    '*'         reduce using rule 90 (arith_single)
    '/'         reduce using rule 90 (arith_single)
    FILTER      reduce using rule 90 (arith_single)
    MAP         reduce using rule 90 (arith_single)
    ':'         reduce using rule 90 (arith_single)


State 79

   91 arith_single: '-' expression •

    ';'         reduce using rule 91 (arith_single)
    AND         reduce using rule 91 (arith_single)
    OR          reduce using rule 91 (arith_single)
    GREATER     reduce using rule 91 (arith_single)
    GREATER_EQ  reduce using rule 91 (arith_single)
    LESS        reduce using rule 91 (arith_single)
    LESS_EQ     reduce using rule 91 (arith_single)
    EQUAL       reduce using rule 91 (arith_single)
    NOT_EQ      reduce using rule 91 (arith_single)
    '+'         reduce using rule 91 (arith_single)
    '-'         reduce using rule 91 (arith_single)
    '*'         reduce using rule 91 (arith_single)
    '/'         reduce using rule 91 (arith_single)
    FILTER      reduce using rule 91 (arith_single)
    MAP         reduce using rule 91 (arith_single)
    ':'         reduce using rule 91 (arith_single)


State 80

   92 lst_single: '%' expression •

    ';'         reduce using rule 92 (lst_single)
    AND         reduce using rule 92 (lst_single)
    OR          reduce using rule 92 (lst_single)
    GREATER     reduce using rule 92 (lst_single)
    GREATER_EQ  reduce using rule 92 (lst_single)
    LESS        reduce using rule 92 (lst_single)
    LESS_EQ     reduce using rule 92 (lst_single)
    EQUAL       reduce using rule 92 (lst_single)
    NOT_EQ      reduce using rule 92 (lst_single)
    '+'         reduce using rule 92 (lst_single)
    '-'         reduce using rule 92 (lst_single)
    '*'         reduce using rule 92 (lst_single)
    '/'         reduce using rule 92 (lst_single)
    FILTER      reduce using rule 92 (lst_single)
    MAP         reduce using rule 92 (lst_single)
    ':'         reduce using rule 92 (lst_single)


State 81

   93 lst_single: '?' expression •

    ';'         reduce using rule 93 (lst_single)
    AND         reduce using rule 93 (lst_single)
    OR          reduce using rule 93 (lst_single)
    GREATER     reduce using rule 93 (lst_single)
    GREATER_EQ  reduce using rule 93 (lst_single)
    LESS        reduce using rule 93 (lst_single)
    LESS_EQ     reduce using rule 93 (lst_single)
    EQUAL       reduce using rule 93 (lst_single)
    NOT_EQ      reduce using rule 93 (lst_single)
    '+'         reduce using rule 93 (lst_single)
    '-'         reduce using rule 93 (lst_single)
    '*'         reduce using rule 93 (lst_single)
    '/'         reduce using rule 93 (lst_single)
    FILTER      reduce using rule 93 (lst_single)
    MAP         reduce using rule 93 (lst_single)
    ':'         reduce using rule 93 (lst_single)


State 82

   89 single_operation: '!' expression •

    ';'         reduce using rule 89 (single_operation)
    AND         reduce using rule 89 (single_operation)
    OR          reduce using rule 89 (single_operation)
    GREATER     reduce using rule 89 (single_operation)
    GREATER_EQ  reduce using rule 89 (single_operation)
    LESS        reduce using rule 89 (single_operation)
    LESS_EQ     reduce using rule 89 (single_operation)
    EQUAL       reduce using rule 89 (single_operation)
    NOT_EQ      reduce using rule 89 (single_operation)
    '+'         reduce using rule 89 (single_operation)
    '-'         reduce using rule 89 (single_operation)
    '*'         reduce using rule 89 (single_operation)
    '/'         reduce using rule 89 (single_operation)
    FILTER      reduce using rule 89 (single_operation)
    MAP         reduce using rule 89 (single_operation)
    ':'         reduce using rule 89 (single_operation)


State 83

    9 func_declaration: unq_declaration $@1 '(' parameters ')' '{' block_commands '}' •

    $end     reduce using rule 9 (func_declaration)
    error    reduce using rule 9 (func_declaration)
    T_INT    reduce using rule 9 (func_declaration)
    T_FLOAT  reduce using rule 9 (func_declaration)


State 84

   28 block_commands: command block_commands •

    '}'  reduce using rule 28 (block_commands)


State 85

   38 command: $@4 '{' • block_commands '}'

    error           shift, and go to state 27
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 32
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 33
    FOR_STMT        shift, and go to state 34
    OUTPUT_WRITE    shift, and go to state 35
    OUTPUT_WRITELN  shift, and go to state 36
    INPUT_READ      shift, and go to state 37
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 37 ($@4)

    func_calling      go to state 44
    var_declaration   go to state 45
    unq_declaration   go to state 46
    type              go to state 165
    type_lst          go to state 11
    type_number       go to state 12
    block_commands    go to state 118
    command           go to state 48
    $@4               go to state 49
    init_variable     go to state 50
    init_stmt         go to state 51
    conditional_stmt  go to state 52
    return_stmt       go to state 53
    iteration         go to state 54
    output            go to state 55
    input             go to state 56
    iden              go to state 57
    operation         go to state 58
    lst_binary        go to state 59
    arith_binary      go to state 60
    term              go to state 61
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 86

   42 init_variable: init_stmt ';' •

    error           reduce using rule 42 (init_variable)
    NUM_INT         reduce using rule 42 (init_variable)
    NUM_FLOAT       reduce using rule 42 (init_variable)
    NIL_CNST        reduce using rule 42 (init_variable)
    ID              reduce using rule 42 (init_variable)
    RETURN_STM      reduce using rule 42 (init_variable)
    T_INT           reduce using rule 42 (init_variable)
    T_FLOAT         reduce using rule 42 (init_variable)
    IF_STMT         reduce using rule 42 (init_variable)
    FOR_STMT        reduce using rule 42 (init_variable)
    OUTPUT_WRITE    reduce using rule 42 (init_variable)
    OUTPUT_WRITELN  reduce using rule 42 (init_variable)
    INPUT_READ      reduce using rule 42 (init_variable)
    '('             reduce using rule 42 (init_variable)
    '{'             reduce using rule 42 (init_variable)
    '}'             reduce using rule 42 (init_variable)
    '+'             reduce using rule 42 (init_variable)
    '-'             reduce using rule 42 (init_variable)
    '%'             reduce using rule 42 (init_variable)
    '?'             reduce using rule 42 (init_variable)
    '!'             reduce using rule 42 (init_variable)


State 87

   43 init_stmt: iden '=' • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 44
    iden              go to state 70
    operation         go to state 119
    lst_binary        go to state 59
    arith_binary      go to state 60
    term              go to state 61
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 88

   39 command: operation ';' •

    error           reduce using rule 39 (command)
    NUM_INT         reduce using rule 39 (command)
    NUM_FLOAT       reduce using rule 39 (command)
    NIL_CNST        reduce using rule 39 (command)
    ID              reduce using rule 39 (command)
    RETURN_STM      reduce using rule 39 (command)
    T_INT           reduce using rule 39 (command)
    T_FLOAT         reduce using rule 39 (command)
    IF_STMT         reduce using rule 39 (command)
    FOR_STMT        reduce using rule 39 (command)
    OUTPUT_WRITE    reduce using rule 39 (command)
    OUTPUT_WRITELN  reduce using rule 39 (command)
    INPUT_READ      reduce using rule 39 (command)
    '('             reduce using rule 39 (command)
    '{'             reduce using rule 39 (command)
    '}'             reduce using rule 39 (command)
    '+'             reduce using rule 39 (command)
    '-'             reduce using rule 39 (command)
    '%'             reduce using rule 39 (command)
    '?'             reduce using rule 39 (command)
    '!'             reduce using rule 39 (command)


State 89

   66 operation: operation AND • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 44
    iden              go to state 70
    operation         go to state 120
    lst_binary        go to state 59
    arith_binary      go to state 60
    term              go to state 61
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 90

   67 operation: operation OR • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 44
    iden              go to state 70
    operation         go to state 121
    lst_binary        go to state 59
    arith_binary      go to state 60
    term              go to state 61
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 91

   60 operation: operation GREATER • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 44
    iden              go to state 70
    operation         go to state 122
    lst_binary        go to state 59
    arith_binary      go to state 60
    term              go to state 61
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 92

   61 operation: operation GREATER_EQ • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 44
    iden              go to state 70
    operation         go to state 123
    lst_binary        go to state 59
    arith_binary      go to state 60
    term              go to state 61
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 93

   62 operation: operation LESS • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 44
    iden              go to state 70
    operation         go to state 124
    lst_binary        go to state 59
    arith_binary      go to state 60
    term              go to state 61
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 94

   63 operation: operation LESS_EQ • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 44
    iden              go to state 70
    operation         go to state 125
    lst_binary        go to state 59
    arith_binary      go to state 60
    term              go to state 61
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 95

   64 operation: operation EQUAL • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 44
    iden              go to state 70
    operation         go to state 126
    lst_binary        go to state 59
    arith_binary      go to state 60
    term              go to state 61
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 96

   65 operation: operation NOT_EQ • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 44
    iden              go to state 70
    operation         go to state 127
    lst_binary        go to state 59
    arith_binary      go to state 60
    term              go to state 61
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 97

   68 lst_binary: lst_binary FILTER • lst_binary

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 44
    iden              go to state 70
    lst_binary        go to state 128
    arith_binary      go to state 60
    term              go to state 61
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 98

   69 lst_binary: lst_binary MAP • lst_binary

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 44
    iden              go to state 70
    lst_binary        go to state 129
    arith_binary      go to state 60
    term              go to state 61
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 99

   70 lst_binary: lst_binary ':' • lst_binary

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 44
    iden              go to state 70
    lst_binary        go to state 130
    arith_binary      go to state 60
    term              go to state 61
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 100

   72 arith_binary: arith_binary '+' • term

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 44
    iden              go to state 70
    term              go to state 131
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 101

   73 arith_binary: arith_binary '-' • term

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 44
    iden              go to state 70
    term              go to state 132
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 102

   75 term: term '*' • expression

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 44
    iden              go to state 70
    expression        go to state 133
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 103

   76 term: term '/' • expression

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 44
    iden              go to state 70
    expression        go to state 134
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 104

   12 func_calling: ID '(' $@2 • calling_parameters $@3 ')'

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    ')'  reduce using rule 25 (calling_parameters)

    func_calling            go to state 208
    calling_parameters      go to state 135
    lst_calling_parameters  go to state 136
    iden                    go to state 209
    operation               go to state 137
    lst_binary              go to state 210
    arith_binary            go to state 211
    term                    go to state 212
    expression              go to state 213
    const                   go to state 214
    number                  go to state 215
    single_operation        go to state 216
    arith_single            go to state 217
    lst_single              go to state 218


State 105

   46 return_stmt: RETURN_STM operation ';' •

    error           reduce using rule 46 (return_stmt)
    NUM_INT         reduce using rule 46 (return_stmt)
    NUM_FLOAT       reduce using rule 46 (return_stmt)
    NIL_CNST        reduce using rule 46 (return_stmt)
    ID              reduce using rule 46 (return_stmt)
    RETURN_STM      reduce using rule 46 (return_stmt)
    T_INT           reduce using rule 46 (return_stmt)
    T_FLOAT         reduce using rule 46 (return_stmt)
    IF_STMT         reduce using rule 46 (return_stmt)
    FOR_STMT        reduce using rule 46 (return_stmt)
    OUTPUT_WRITE    reduce using rule 46 (return_stmt)
    OUTPUT_WRITELN  reduce using rule 46 (return_stmt)
    INPUT_READ      reduce using rule 46 (return_stmt)
    '('             reduce using rule 46 (return_stmt)
    '{'             reduce using rule 46 (return_stmt)
    '}'             reduce using rule 46 (return_stmt)
    '+'             reduce using rule 46 (return_stmt)
    '-'             reduce using rule 46 (return_stmt)
    '%'             reduce using rule 46 (return_stmt)
    '?'             reduce using rule 46 (return_stmt)
    '!'             reduce using rule 46 (return_stmt)


State 106

   44 conditional_stmt: IF_STMT '(' operation • ')' command
   45                 | IF_STMT '(' operation • ')' command ELSE_STMT command
   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    ')'         shift, and go to state 138
    AND         shift, and go to state 190
    OR          shift, and go to state 191
    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195
    EQUAL       shift, and go to state 196
    NOT_EQ      shift, and go to state 197


State 107

   58 iden: ID •

    '='  reduce using rule 58 (iden)


State 108

   49 update_stmt: init_stmt •

    ';'  reduce using rule 49 (update_stmt)


State 109

   47 iteration: FOR_STMT '(' loop_condition • ')' command

    ')'  shift, and go to state 139


State 110

   48 loop_condition: update_stmt • ';' stop_stmt ';' update_stmt

    ';'  shift, and go to state 140


State 111

   43 init_stmt: iden • '=' operation

    '='  shift, and go to state 87


State 112

   55 output: OUTPUT_WRITE '(' STRING • ')' ';'

    ')'  shift, and go to state 141


State 113

   53 output: OUTPUT_WRITE '(' operation • ')' ';'
   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    ')'         shift, and go to state 142
    AND         shift, and go to state 190
    OR          shift, and go to state 191
    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195
    EQUAL       shift, and go to state 196
    NOT_EQ      shift, and go to state 197


State 114

   56 output: OUTPUT_WRITELN '(' STRING • ')' ';'

    ')'  shift, and go to state 143


State 115

   54 output: OUTPUT_WRITELN '(' operation • ')' ';'
   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    ')'         shift, and go to state 144
    AND         shift, and go to state 190
    OR          shift, and go to state 191
    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195
    EQUAL       shift, and go to state 196
    NOT_EQ      shift, and go to state 197


State 116

   57 input: INPUT_READ '(' iden • ')' ';'

    ')'  shift, and go to state 145


State 117

   82 expression: '(' operation ')' •

    ';'         reduce using rule 82 (expression)
    AND         reduce using rule 82 (expression)
    OR          reduce using rule 82 (expression)
    GREATER     reduce using rule 82 (expression)
    GREATER_EQ  reduce using rule 82 (expression)
    LESS        reduce using rule 82 (expression)
    LESS_EQ     reduce using rule 82 (expression)
    EQUAL       reduce using rule 82 (expression)
    NOT_EQ      reduce using rule 82 (expression)
    '+'         reduce using rule 82 (expression)
    '-'         reduce using rule 82 (expression)
    '*'         reduce using rule 82 (expression)
    '/'         reduce using rule 82 (expression)
    FILTER      reduce using rule 82 (expression)
    MAP         reduce using rule 82 (expression)
    ':'         reduce using rule 82 (expression)


State 118

   38 command: $@4 '{' block_commands • '}'

    '}'  shift, and go to state 146


State 119

   43 init_stmt: iden '=' operation •
   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    AND         shift, and go to state 89
    OR          shift, and go to state 90
    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94
    EQUAL       shift, and go to state 95
    NOT_EQ      shift, and go to state 96

    ';'  reduce using rule 43 (init_stmt)


State 120

   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   66          | operation AND operation •
   67          | operation • OR operation

    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94
    EQUAL       shift, and go to state 95
    NOT_EQ      shift, and go to state 96

    ';'  reduce using rule 66 (operation)
    AND  reduce using rule 66 (operation)
    OR   reduce using rule 66 (operation)


State 121

   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation
   67          | operation OR operation •

    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94
    EQUAL       shift, and go to state 95
    NOT_EQ      shift, and go to state 96

    ';'  reduce using rule 67 (operation)
    AND  reduce using rule 67 (operation)
    OR   reduce using rule 67 (operation)


State 122

   60 operation: operation • GREATER operation
   60          | operation GREATER operation •
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    ';'         reduce using rule 60 (operation)
    AND         reduce using rule 60 (operation)
    OR          reduce using rule 60 (operation)
    GREATER     reduce using rule 60 (operation)
    GREATER_EQ  reduce using rule 60 (operation)
    LESS        reduce using rule 60 (operation)
    LESS_EQ     reduce using rule 60 (operation)
    EQUAL       reduce using rule 60 (operation)
    NOT_EQ      reduce using rule 60 (operation)


State 123

   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   61          | operation GREATER_EQ operation •
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    ';'         reduce using rule 61 (operation)
    AND         reduce using rule 61 (operation)
    OR          reduce using rule 61 (operation)
    GREATER     reduce using rule 61 (operation)
    GREATER_EQ  reduce using rule 61 (operation)
    LESS        reduce using rule 61 (operation)
    LESS_EQ     reduce using rule 61 (operation)
    EQUAL       reduce using rule 61 (operation)
    NOT_EQ      reduce using rule 61 (operation)


State 124

   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   62          | operation LESS operation •
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    ';'         reduce using rule 62 (operation)
    AND         reduce using rule 62 (operation)
    OR          reduce using rule 62 (operation)
    GREATER     reduce using rule 62 (operation)
    GREATER_EQ  reduce using rule 62 (operation)
    LESS        reduce using rule 62 (operation)
    LESS_EQ     reduce using rule 62 (operation)
    EQUAL       reduce using rule 62 (operation)
    NOT_EQ      reduce using rule 62 (operation)


State 125

   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   63          | operation LESS_EQ operation •
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    ';'         reduce using rule 63 (operation)
    AND         reduce using rule 63 (operation)
    OR          reduce using rule 63 (operation)
    GREATER     reduce using rule 63 (operation)
    GREATER_EQ  reduce using rule 63 (operation)
    LESS        reduce using rule 63 (operation)
    LESS_EQ     reduce using rule 63 (operation)
    EQUAL       reduce using rule 63 (operation)
    NOT_EQ      reduce using rule 63 (operation)


State 126

   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   64          | operation EQUAL operation •
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94

    ';'     reduce using rule 64 (operation)
    AND     reduce using rule 64 (operation)
    OR      reduce using rule 64 (operation)
    EQUAL   reduce using rule 64 (operation)
    NOT_EQ  reduce using rule 64 (operation)


State 127

   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   65          | operation NOT_EQ operation •
   66          | operation • AND operation
   67          | operation • OR operation

    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94

    ';'     reduce using rule 65 (operation)
    AND     reduce using rule 65 (operation)
    OR      reduce using rule 65 (operation)
    EQUAL   reduce using rule 65 (operation)
    NOT_EQ  reduce using rule 65 (operation)


State 128

   68 lst_binary: lst_binary • FILTER lst_binary
   68           | lst_binary FILTER lst_binary •
   69           | lst_binary • MAP lst_binary
   70           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 97
    MAP     shift, and go to state 98
    ':'     shift, and go to state 99

    ';'         reduce using rule 68 (lst_binary)
    AND         reduce using rule 68 (lst_binary)
    OR          reduce using rule 68 (lst_binary)
    GREATER     reduce using rule 68 (lst_binary)
    GREATER_EQ  reduce using rule 68 (lst_binary)
    LESS        reduce using rule 68 (lst_binary)
    LESS_EQ     reduce using rule 68 (lst_binary)
    EQUAL       reduce using rule 68 (lst_binary)
    NOT_EQ      reduce using rule 68 (lst_binary)


State 129

   68 lst_binary: lst_binary • FILTER lst_binary
   69           | lst_binary • MAP lst_binary
   69           | lst_binary MAP lst_binary •
   70           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 97
    MAP     shift, and go to state 98
    ':'     shift, and go to state 99

    ';'         reduce using rule 69 (lst_binary)
    AND         reduce using rule 69 (lst_binary)
    OR          reduce using rule 69 (lst_binary)
    GREATER     reduce using rule 69 (lst_binary)
    GREATER_EQ  reduce using rule 69 (lst_binary)
    LESS        reduce using rule 69 (lst_binary)
    LESS_EQ     reduce using rule 69 (lst_binary)
    EQUAL       reduce using rule 69 (lst_binary)
    NOT_EQ      reduce using rule 69 (lst_binary)


State 130

   68 lst_binary: lst_binary • FILTER lst_binary
   69           | lst_binary • MAP lst_binary
   70           | lst_binary • ':' lst_binary
   70           | lst_binary ':' lst_binary •

    FILTER  shift, and go to state 97
    MAP     shift, and go to state 98
    ':'     shift, and go to state 99

    ';'         reduce using rule 70 (lst_binary)
    AND         reduce using rule 70 (lst_binary)
    OR          reduce using rule 70 (lst_binary)
    GREATER     reduce using rule 70 (lst_binary)
    GREATER_EQ  reduce using rule 70 (lst_binary)
    LESS        reduce using rule 70 (lst_binary)
    LESS_EQ     reduce using rule 70 (lst_binary)
    EQUAL       reduce using rule 70 (lst_binary)
    NOT_EQ      reduce using rule 70 (lst_binary)


State 131

   72 arith_binary: arith_binary '+' term •
   75 term: term • '*' expression
   76     | term • '/' expression

    '*'  shift, and go to state 102
    '/'  shift, and go to state 103

    ';'         reduce using rule 72 (arith_binary)
    AND         reduce using rule 72 (arith_binary)
    OR          reduce using rule 72 (arith_binary)
    GREATER     reduce using rule 72 (arith_binary)
    GREATER_EQ  reduce using rule 72 (arith_binary)
    LESS        reduce using rule 72 (arith_binary)
    LESS_EQ     reduce using rule 72 (arith_binary)
    EQUAL       reduce using rule 72 (arith_binary)
    NOT_EQ      reduce using rule 72 (arith_binary)
    '+'         reduce using rule 72 (arith_binary)
    '-'         reduce using rule 72 (arith_binary)
    FILTER      reduce using rule 72 (arith_binary)
    MAP         reduce using rule 72 (arith_binary)
    ':'         reduce using rule 72 (arith_binary)


State 132

   73 arith_binary: arith_binary '-' term •
   75 term: term • '*' expression
   76     | term • '/' expression

    '*'  shift, and go to state 102
    '/'  shift, and go to state 103

    ';'         reduce using rule 73 (arith_binary)
    AND         reduce using rule 73 (arith_binary)
    OR          reduce using rule 73 (arith_binary)
    GREATER     reduce using rule 73 (arith_binary)
    GREATER_EQ  reduce using rule 73 (arith_binary)
    LESS        reduce using rule 73 (arith_binary)
    LESS_EQ     reduce using rule 73 (arith_binary)
    EQUAL       reduce using rule 73 (arith_binary)
    NOT_EQ      reduce using rule 73 (arith_binary)
    '+'         reduce using rule 73 (arith_binary)
    '-'         reduce using rule 73 (arith_binary)
    FILTER      reduce using rule 73 (arith_binary)
    MAP         reduce using rule 73 (arith_binary)
    ':'         reduce using rule 73 (arith_binary)


State 133

   75 term: term '*' expression •

    ';'         reduce using rule 75 (term)
    AND         reduce using rule 75 (term)
    OR          reduce using rule 75 (term)
    GREATER     reduce using rule 75 (term)
    GREATER_EQ  reduce using rule 75 (term)
    LESS        reduce using rule 75 (term)
    LESS_EQ     reduce using rule 75 (term)
    EQUAL       reduce using rule 75 (term)
    NOT_EQ      reduce using rule 75 (term)
    '+'         reduce using rule 75 (term)
    '-'         reduce using rule 75 (term)
    '*'         reduce using rule 75 (term)
    '/'         reduce using rule 75 (term)
    FILTER      reduce using rule 75 (term)
    MAP         reduce using rule 75 (term)
    ':'         reduce using rule 75 (term)


State 134

   76 term: term '/' expression •

    ';'         reduce using rule 76 (term)
    AND         reduce using rule 76 (term)
    OR          reduce using rule 76 (term)
    GREATER     reduce using rule 76 (term)
    GREATER_EQ  reduce using rule 76 (term)
    LESS        reduce using rule 76 (term)
    LESS_EQ     reduce using rule 76 (term)
    EQUAL       reduce using rule 76 (term)
    NOT_EQ      reduce using rule 76 (term)
    '+'         reduce using rule 76 (term)
    '-'         reduce using rule 76 (term)
    '*'         reduce using rule 76 (term)
    '/'         reduce using rule 76 (term)
    FILTER      reduce using rule 76 (term)
    MAP         reduce using rule 76 (term)
    ':'         reduce using rule 76 (term)


State 135

   12 func_calling: ID '(' $@2 calling_parameters • $@3 ')'

    ')'  reduce using rule 11 ($@3)

    $@3  go to state 147


State 136

   24 calling_parameters: lst_calling_parameters •

    ')'  reduce using rule 24 (calling_parameters)


State 137

   26 lst_calling_parameters: operation • ',' lst_calling_parameters
   27                       | operation •
   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    ','         shift, and go to state 148
    AND         shift, and go to state 219
    OR          shift, and go to state 220
    GREATER     shift, and go to state 221
    GREATER_EQ  shift, and go to state 222
    LESS        shift, and go to state 223
    LESS_EQ     shift, and go to state 224
    EQUAL       shift, and go to state 225
    NOT_EQ      shift, and go to state 226

    ')'  reduce using rule 27 (lst_calling_parameters)


State 138

   44 conditional_stmt: IF_STMT '(' operation ')' • command
   45                 | IF_STMT '(' operation ')' • command ELSE_STMT command

    error           shift, and go to state 227
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 228
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 229
    FOR_STMT        shift, and go to state 230
    OUTPUT_WRITE    shift, and go to state 231
    OUTPUT_WRITELN  shift, and go to state 232
    INPUT_READ      shift, and go to state 233
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 37 ($@4)

    func_calling      go to state 44
    var_declaration   go to state 234
    unq_declaration   go to state 235
    type              go to state 165
    type_lst          go to state 11
    type_number       go to state 12
    command           go to state 149
    $@4               go to state 236
    init_variable     go to state 237
    init_stmt         go to state 238
    conditional_stmt  go to state 239
    return_stmt       go to state 240
    iteration         go to state 241
    output            go to state 242
    input             go to state 243
    iden              go to state 57
    operation         go to state 244
    lst_binary        go to state 59
    arith_binary      go to state 60
    term              go to state 61
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 139

   47 iteration: FOR_STMT '(' loop_condition ')' • command

    error           shift, and go to state 27
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 32
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 33
    FOR_STMT        shift, and go to state 34
    OUTPUT_WRITE    shift, and go to state 35
    OUTPUT_WRITELN  shift, and go to state 36
    INPUT_READ      shift, and go to state 37
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 37 ($@4)

    func_calling      go to state 44
    var_declaration   go to state 45
    unq_declaration   go to state 46
    type              go to state 165
    type_lst          go to state 11
    type_number       go to state 12
    command           go to state 150
    $@4               go to state 49
    init_variable     go to state 50
    init_stmt         go to state 51
    conditional_stmt  go to state 52
    return_stmt       go to state 53
    iteration         go to state 54
    output            go to state 55
    input             go to state 56
    iden              go to state 57
    operation         go to state 58
    lst_binary        go to state 59
    arith_binary      go to state 60
    term              go to state 61
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 140

   48 loop_condition: update_stmt ';' • stop_stmt ';' update_stmt

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    ';'  reduce using rule 52 (stop_stmt)

    func_calling      go to state 44
    stop_stmt         go to state 151
    iden              go to state 70
    operation         go to state 152
    lst_binary        go to state 59
    arith_binary      go to state 60
    term              go to state 61
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 141

   55 output: OUTPUT_WRITE '(' STRING ')' • ';'

    ';'  shift, and go to state 153


State 142

   53 output: OUTPUT_WRITE '(' operation ')' • ';'

    ';'  shift, and go to state 154


State 143

   56 output: OUTPUT_WRITELN '(' STRING ')' • ';'

    ';'  shift, and go to state 155


State 144

   54 output: OUTPUT_WRITELN '(' operation ')' • ';'

    ';'  shift, and go to state 156


State 145

   57 input: INPUT_READ '(' iden ')' • ';'

    ';'  shift, and go to state 157


State 146

   38 command: $@4 '{' block_commands '}' •

    error           reduce using rule 38 (command)
    NUM_INT         reduce using rule 38 (command)
    NUM_FLOAT       reduce using rule 38 (command)
    NIL_CNST        reduce using rule 38 (command)
    ID              reduce using rule 38 (command)
    RETURN_STM      reduce using rule 38 (command)
    T_INT           reduce using rule 38 (command)
    T_FLOAT         reduce using rule 38 (command)
    IF_STMT         reduce using rule 38 (command)
    FOR_STMT        reduce using rule 38 (command)
    OUTPUT_WRITE    reduce using rule 38 (command)
    OUTPUT_WRITELN  reduce using rule 38 (command)
    INPUT_READ      reduce using rule 38 (command)
    '('             reduce using rule 38 (command)
    '{'             reduce using rule 38 (command)
    '}'             reduce using rule 38 (command)
    '+'             reduce using rule 38 (command)
    '-'             reduce using rule 38 (command)
    '%'             reduce using rule 38 (command)
    '?'             reduce using rule 38 (command)
    '!'             reduce using rule 38 (command)


State 147

   12 func_calling: ID '(' $@2 calling_parameters $@3 • ')'

    ')'  shift, and go to state 158


State 148

   26 lst_calling_parameters: operation ',' • lst_calling_parameters

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling            go to state 208
    lst_calling_parameters  go to state 159
    iden                    go to state 209
    operation               go to state 137
    lst_binary              go to state 210
    arith_binary            go to state 211
    term                    go to state 212
    expression              go to state 213
    const                   go to state 214
    number                  go to state 215
    single_operation        go to state 216
    arith_single            go to state 217
    lst_single              go to state 218


State 149

   44 conditional_stmt: IF_STMT '(' operation ')' command •
   45                 | IF_STMT '(' operation ')' command • ELSE_STMT command

    ELSE_STMT  shift, and go to state 160

    error           reduce using rule 44 (conditional_stmt)
    NUM_INT         reduce using rule 44 (conditional_stmt)
    NUM_FLOAT       reduce using rule 44 (conditional_stmt)
    NIL_CNST        reduce using rule 44 (conditional_stmt)
    ID              reduce using rule 44 (conditional_stmt)
    RETURN_STM      reduce using rule 44 (conditional_stmt)
    T_INT           reduce using rule 44 (conditional_stmt)
    T_FLOAT         reduce using rule 44 (conditional_stmt)
    IF_STMT         reduce using rule 44 (conditional_stmt)
    FOR_STMT        reduce using rule 44 (conditional_stmt)
    OUTPUT_WRITE    reduce using rule 44 (conditional_stmt)
    OUTPUT_WRITELN  reduce using rule 44 (conditional_stmt)
    INPUT_READ      reduce using rule 44 (conditional_stmt)
    '('             reduce using rule 44 (conditional_stmt)
    '{'             reduce using rule 44 (conditional_stmt)
    '}'             reduce using rule 44 (conditional_stmt)
    '+'             reduce using rule 44 (conditional_stmt)
    '-'             reduce using rule 44 (conditional_stmt)
    '%'             reduce using rule 44 (conditional_stmt)
    '?'             reduce using rule 44 (conditional_stmt)
    '!'             reduce using rule 44 (conditional_stmt)


State 150

   47 iteration: FOR_STMT '(' loop_condition ')' command •

    error           reduce using rule 47 (iteration)
    NUM_INT         reduce using rule 47 (iteration)
    NUM_FLOAT       reduce using rule 47 (iteration)
    NIL_CNST        reduce using rule 47 (iteration)
    ID              reduce using rule 47 (iteration)
    RETURN_STM      reduce using rule 47 (iteration)
    T_INT           reduce using rule 47 (iteration)
    T_FLOAT         reduce using rule 47 (iteration)
    IF_STMT         reduce using rule 47 (iteration)
    FOR_STMT        reduce using rule 47 (iteration)
    OUTPUT_WRITE    reduce using rule 47 (iteration)
    OUTPUT_WRITELN  reduce using rule 47 (iteration)
    INPUT_READ      reduce using rule 47 (iteration)
    '('             reduce using rule 47 (iteration)
    '{'             reduce using rule 47 (iteration)
    '}'             reduce using rule 47 (iteration)
    '+'             reduce using rule 47 (iteration)
    '-'             reduce using rule 47 (iteration)
    '%'             reduce using rule 47 (iteration)
    '?'             reduce using rule 47 (iteration)
    '!'             reduce using rule 47 (iteration)


State 151

   48 loop_condition: update_stmt ';' stop_stmt • ';' update_stmt

    ';'  shift, and go to state 161


State 152

   51 stop_stmt: operation •
   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    AND         shift, and go to state 89
    OR          shift, and go to state 90
    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94
    EQUAL       shift, and go to state 95
    NOT_EQ      shift, and go to state 96

    ';'  reduce using rule 51 (stop_stmt)


State 153

   55 output: OUTPUT_WRITE '(' STRING ')' ';' •

    error           reduce using rule 55 (output)
    NUM_INT         reduce using rule 55 (output)
    NUM_FLOAT       reduce using rule 55 (output)
    NIL_CNST        reduce using rule 55 (output)
    ID              reduce using rule 55 (output)
    RETURN_STM      reduce using rule 55 (output)
    T_INT           reduce using rule 55 (output)
    T_FLOAT         reduce using rule 55 (output)
    IF_STMT         reduce using rule 55 (output)
    FOR_STMT        reduce using rule 55 (output)
    OUTPUT_WRITE    reduce using rule 55 (output)
    OUTPUT_WRITELN  reduce using rule 55 (output)
    INPUT_READ      reduce using rule 55 (output)
    '('             reduce using rule 55 (output)
    '{'             reduce using rule 55 (output)
    '}'             reduce using rule 55 (output)
    '+'             reduce using rule 55 (output)
    '-'             reduce using rule 55 (output)
    '%'             reduce using rule 55 (output)
    '?'             reduce using rule 55 (output)
    '!'             reduce using rule 55 (output)


State 154

   53 output: OUTPUT_WRITE '(' operation ')' ';' •

    error           reduce using rule 53 (output)
    NUM_INT         reduce using rule 53 (output)
    NUM_FLOAT       reduce using rule 53 (output)
    NIL_CNST        reduce using rule 53 (output)
    ID              reduce using rule 53 (output)
    RETURN_STM      reduce using rule 53 (output)
    T_INT           reduce using rule 53 (output)
    T_FLOAT         reduce using rule 53 (output)
    IF_STMT         reduce using rule 53 (output)
    FOR_STMT        reduce using rule 53 (output)
    OUTPUT_WRITE    reduce using rule 53 (output)
    OUTPUT_WRITELN  reduce using rule 53 (output)
    INPUT_READ      reduce using rule 53 (output)
    '('             reduce using rule 53 (output)
    '{'             reduce using rule 53 (output)
    '}'             reduce using rule 53 (output)
    '+'             reduce using rule 53 (output)
    '-'             reduce using rule 53 (output)
    '%'             reduce using rule 53 (output)
    '?'             reduce using rule 53 (output)
    '!'             reduce using rule 53 (output)


State 155

   56 output: OUTPUT_WRITELN '(' STRING ')' ';' •

    error           reduce using rule 56 (output)
    NUM_INT         reduce using rule 56 (output)
    NUM_FLOAT       reduce using rule 56 (output)
    NIL_CNST        reduce using rule 56 (output)
    ID              reduce using rule 56 (output)
    RETURN_STM      reduce using rule 56 (output)
    T_INT           reduce using rule 56 (output)
    T_FLOAT         reduce using rule 56 (output)
    IF_STMT         reduce using rule 56 (output)
    FOR_STMT        reduce using rule 56 (output)
    OUTPUT_WRITE    reduce using rule 56 (output)
    OUTPUT_WRITELN  reduce using rule 56 (output)
    INPUT_READ      reduce using rule 56 (output)
    '('             reduce using rule 56 (output)
    '{'             reduce using rule 56 (output)
    '}'             reduce using rule 56 (output)
    '+'             reduce using rule 56 (output)
    '-'             reduce using rule 56 (output)
    '%'             reduce using rule 56 (output)
    '?'             reduce using rule 56 (output)
    '!'             reduce using rule 56 (output)


State 156

   54 output: OUTPUT_WRITELN '(' operation ')' ';' •

    error           reduce using rule 54 (output)
    NUM_INT         reduce using rule 54 (output)
    NUM_FLOAT       reduce using rule 54 (output)
    NIL_CNST        reduce using rule 54 (output)
    ID              reduce using rule 54 (output)
    RETURN_STM      reduce using rule 54 (output)
    T_INT           reduce using rule 54 (output)
    T_FLOAT         reduce using rule 54 (output)
    IF_STMT         reduce using rule 54 (output)
    FOR_STMT        reduce using rule 54 (output)
    OUTPUT_WRITE    reduce using rule 54 (output)
    OUTPUT_WRITELN  reduce using rule 54 (output)
    INPUT_READ      reduce using rule 54 (output)
    '('             reduce using rule 54 (output)
    '{'             reduce using rule 54 (output)
    '}'             reduce using rule 54 (output)
    '+'             reduce using rule 54 (output)
    '-'             reduce using rule 54 (output)
    '%'             reduce using rule 54 (output)
    '?'             reduce using rule 54 (output)
    '!'             reduce using rule 54 (output)


State 157

   57 input: INPUT_READ '(' iden ')' ';' •

    error           reduce using rule 57 (input)
    NUM_INT         reduce using rule 57 (input)
    NUM_FLOAT       reduce using rule 57 (input)
    NIL_CNST        reduce using rule 57 (input)
    ID              reduce using rule 57 (input)
    RETURN_STM      reduce using rule 57 (input)
    T_INT           reduce using rule 57 (input)
    T_FLOAT         reduce using rule 57 (input)
    IF_STMT         reduce using rule 57 (input)
    FOR_STMT        reduce using rule 57 (input)
    OUTPUT_WRITE    reduce using rule 57 (input)
    OUTPUT_WRITELN  reduce using rule 57 (input)
    INPUT_READ      reduce using rule 57 (input)
    '('             reduce using rule 57 (input)
    '{'             reduce using rule 57 (input)
    '}'             reduce using rule 57 (input)
    '+'             reduce using rule 57 (input)
    '-'             reduce using rule 57 (input)
    '%'             reduce using rule 57 (input)
    '?'             reduce using rule 57 (input)
    '!'             reduce using rule 57 (input)


State 158

   12 func_calling: ID '(' $@2 calling_parameters $@3 ')' •

    ';'         reduce using rule 12 (func_calling)
    AND         reduce using rule 12 (func_calling)
    OR          reduce using rule 12 (func_calling)
    GREATER     reduce using rule 12 (func_calling)
    GREATER_EQ  reduce using rule 12 (func_calling)
    LESS        reduce using rule 12 (func_calling)
    LESS_EQ     reduce using rule 12 (func_calling)
    EQUAL       reduce using rule 12 (func_calling)
    NOT_EQ      reduce using rule 12 (func_calling)
    '+'         reduce using rule 12 (func_calling)
    '-'         reduce using rule 12 (func_calling)
    '*'         reduce using rule 12 (func_calling)
    '/'         reduce using rule 12 (func_calling)
    FILTER      reduce using rule 12 (func_calling)
    MAP         reduce using rule 12 (func_calling)
    ':'         reduce using rule 12 (func_calling)


State 159

   26 lst_calling_parameters: operation ',' lst_calling_parameters •

    ')'  reduce using rule 26 (lst_calling_parameters)


State 160

   45 conditional_stmt: IF_STMT '(' operation ')' command ELSE_STMT • command

    error           shift, and go to state 27
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 32
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 33
    FOR_STMT        shift, and go to state 34
    OUTPUT_WRITE    shift, and go to state 35
    OUTPUT_WRITELN  shift, and go to state 36
    INPUT_READ      shift, and go to state 37
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 37 ($@4)

    func_calling      go to state 44
    var_declaration   go to state 45
    unq_declaration   go to state 46
    type              go to state 165
    type_lst          go to state 11
    type_number       go to state 12
    command           go to state 162
    $@4               go to state 49
    init_variable     go to state 50
    init_stmt         go to state 51
    conditional_stmt  go to state 52
    return_stmt       go to state 53
    iteration         go to state 54
    output            go to state 55
    input             go to state 56
    iden              go to state 57
    operation         go to state 58
    lst_binary        go to state 59
    arith_binary      go to state 60
    term              go to state 61
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 161

   48 loop_condition: update_stmt ';' stop_stmt ';' • update_stmt

    ID  shift, and go to state 107

    ')'  reduce using rule 50 (update_stmt)

    init_stmt    go to state 245
    update_stmt  go to state 163
    iden         go to state 246


State 162

   45 conditional_stmt: IF_STMT '(' operation ')' command ELSE_STMT command •

    error           reduce using rule 45 (conditional_stmt)
    NUM_INT         reduce using rule 45 (conditional_stmt)
    NUM_FLOAT       reduce using rule 45 (conditional_stmt)
    NIL_CNST        reduce using rule 45 (conditional_stmt)
    ID              reduce using rule 45 (conditional_stmt)
    RETURN_STM      reduce using rule 45 (conditional_stmt)
    T_INT           reduce using rule 45 (conditional_stmt)
    T_FLOAT         reduce using rule 45 (conditional_stmt)
    IF_STMT         reduce using rule 45 (conditional_stmt)
    FOR_STMT        reduce using rule 45 (conditional_stmt)
    OUTPUT_WRITE    reduce using rule 45 (conditional_stmt)
    OUTPUT_WRITELN  reduce using rule 45 (conditional_stmt)
    INPUT_READ      reduce using rule 45 (conditional_stmt)
    '('             reduce using rule 45 (conditional_stmt)
    '{'             reduce using rule 45 (conditional_stmt)
    '}'             reduce using rule 45 (conditional_stmt)
    '+'             reduce using rule 45 (conditional_stmt)
    '-'             reduce using rule 45 (conditional_stmt)
    '%'             reduce using rule 45 (conditional_stmt)
    '?'             reduce using rule 45 (conditional_stmt)
    '!'             reduce using rule 45 (conditional_stmt)


State 163

   48 loop_condition: update_stmt ';' stop_stmt ';' update_stmt •

    ')'  reduce using rule 48 (loop_condition)


State 164

   14 unq_declaration: type • ID

    ID  shift, and go to state 247


State 165

   14 unq_declaration: type • ID

    ID  shift, and go to state 248


State 166

   12 func_calling: ID • '(' $@2 calling_parameters $@3 ')'
   58 iden: ID •

    '('  shift, and go to state 69

    ';'         reduce using rule 58 (iden)
    AND         reduce using rule 58 (iden)
    OR          reduce using rule 58 (iden)
    GREATER     reduce using rule 58 (iden)
    GREATER_EQ  reduce using rule 58 (iden)
    LESS        reduce using rule 58 (iden)
    LESS_EQ     reduce using rule 58 (iden)
    EQUAL       reduce using rule 58 (iden)
    NOT_EQ      reduce using rule 58 (iden)
    '+'         reduce using rule 58 (iden)
    '-'         reduce using rule 58 (iden)
    '*'         reduce using rule 58 (iden)
    '/'         reduce using rule 58 (iden)
    FILTER      reduce using rule 58 (iden)
    MAP         reduce using rule 58 (iden)
    ':'         reduce using rule 58 (iden)


State 167

   85 number: NUM_INT •

    ')'         reduce using rule 85 (number)
    AND         reduce using rule 85 (number)
    OR          reduce using rule 85 (number)
    GREATER     reduce using rule 85 (number)
    GREATER_EQ  reduce using rule 85 (number)
    LESS        reduce using rule 85 (number)
    LESS_EQ     reduce using rule 85 (number)
    EQUAL       reduce using rule 85 (number)
    NOT_EQ      reduce using rule 85 (number)
    '+'         reduce using rule 85 (number)
    '-'         reduce using rule 85 (number)
    '*'         reduce using rule 85 (number)
    '/'         reduce using rule 85 (number)
    FILTER      reduce using rule 85 (number)
    MAP         reduce using rule 85 (number)
    ':'         reduce using rule 85 (number)


State 168

   86 number: NUM_FLOAT •

    ')'         reduce using rule 86 (number)
    AND         reduce using rule 86 (number)
    OR          reduce using rule 86 (number)
    GREATER     reduce using rule 86 (number)
    GREATER_EQ  reduce using rule 86 (number)
    LESS        reduce using rule 86 (number)
    LESS_EQ     reduce using rule 86 (number)
    EQUAL       reduce using rule 86 (number)
    NOT_EQ      reduce using rule 86 (number)
    '+'         reduce using rule 86 (number)
    '-'         reduce using rule 86 (number)
    '*'         reduce using rule 86 (number)
    '/'         reduce using rule 86 (number)
    FILTER      reduce using rule 86 (number)
    MAP         reduce using rule 86 (number)
    ':'         reduce using rule 86 (number)


State 169

   84 const: NIL_CNST •

    ')'         reduce using rule 84 (const)
    AND         reduce using rule 84 (const)
    OR          reduce using rule 84 (const)
    GREATER     reduce using rule 84 (const)
    GREATER_EQ  reduce using rule 84 (const)
    LESS        reduce using rule 84 (const)
    LESS_EQ     reduce using rule 84 (const)
    EQUAL       reduce using rule 84 (const)
    NOT_EQ      reduce using rule 84 (const)
    '+'         reduce using rule 84 (const)
    '-'         reduce using rule 84 (const)
    '*'         reduce using rule 84 (const)
    '/'         reduce using rule 84 (const)
    FILTER      reduce using rule 84 (const)
    MAP         reduce using rule 84 (const)
    ':'         reduce using rule 84 (const)


State 170

   12 func_calling: ID • '(' $@2 calling_parameters $@3 ')'
   58 iden: ID •

    '('  shift, and go to state 249

    ')'         reduce using rule 58 (iden)
    AND         reduce using rule 58 (iden)
    OR          reduce using rule 58 (iden)
    GREATER     reduce using rule 58 (iden)
    GREATER_EQ  reduce using rule 58 (iden)
    LESS        reduce using rule 58 (iden)
    LESS_EQ     reduce using rule 58 (iden)
    EQUAL       reduce using rule 58 (iden)
    NOT_EQ      reduce using rule 58 (iden)
    '+'         reduce using rule 58 (iden)
    '-'         reduce using rule 58 (iden)
    '*'         reduce using rule 58 (iden)
    '/'         reduce using rule 58 (iden)
    FILTER      reduce using rule 58 (iden)
    MAP         reduce using rule 58 (iden)
    ':'         reduce using rule 58 (iden)


State 171

   82 expression: '(' • operation ')'

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    operation         go to state 250
    lst_binary        go to state 179
    arith_binary      go to state 180
    term              go to state 181
    expression        go to state 182
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 172

   90 arith_single: '+' • expression

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    expression        go to state 251
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 173

   91 arith_single: '-' • expression

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    expression        go to state 252
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 174

   92 lst_single: '%' • expression

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    expression        go to state 253
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 175

   93 lst_single: '?' • expression

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    expression        go to state 254
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 176

   89 single_operation: '!' • expression

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    expression        go to state 255
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 177

   78 expression: func_calling •

    ')'         reduce using rule 78 (expression)
    AND         reduce using rule 78 (expression)
    OR          reduce using rule 78 (expression)
    GREATER     reduce using rule 78 (expression)
    GREATER_EQ  reduce using rule 78 (expression)
    LESS        reduce using rule 78 (expression)
    LESS_EQ     reduce using rule 78 (expression)
    EQUAL       reduce using rule 78 (expression)
    NOT_EQ      reduce using rule 78 (expression)
    '+'         reduce using rule 78 (expression)
    '-'         reduce using rule 78 (expression)
    '*'         reduce using rule 78 (expression)
    '/'         reduce using rule 78 (expression)
    FILTER      reduce using rule 78 (expression)
    MAP         reduce using rule 78 (expression)
    ':'         reduce using rule 78 (expression)


State 178

   81 expression: iden •

    ')'         reduce using rule 81 (expression)
    AND         reduce using rule 81 (expression)
    OR          reduce using rule 81 (expression)
    GREATER     reduce using rule 81 (expression)
    GREATER_EQ  reduce using rule 81 (expression)
    LESS        reduce using rule 81 (expression)
    LESS_EQ     reduce using rule 81 (expression)
    EQUAL       reduce using rule 81 (expression)
    NOT_EQ      reduce using rule 81 (expression)
    '+'         reduce using rule 81 (expression)
    '-'         reduce using rule 81 (expression)
    '*'         reduce using rule 81 (expression)
    '/'         reduce using rule 81 (expression)
    FILTER      reduce using rule 81 (expression)
    MAP         reduce using rule 81 (expression)
    ':'         reduce using rule 81 (expression)


State 179

   59 operation: lst_binary •
   68 lst_binary: lst_binary • FILTER lst_binary
   69           | lst_binary • MAP lst_binary
   70           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 256
    MAP     shift, and go to state 257
    ':'     shift, and go to state 258

    ')'         reduce using rule 59 (operation)
    AND         reduce using rule 59 (operation)
    OR          reduce using rule 59 (operation)
    GREATER     reduce using rule 59 (operation)
    GREATER_EQ  reduce using rule 59 (operation)
    LESS        reduce using rule 59 (operation)
    LESS_EQ     reduce using rule 59 (operation)
    EQUAL       reduce using rule 59 (operation)
    NOT_EQ      reduce using rule 59 (operation)


State 180

   71 lst_binary: arith_binary •
   72 arith_binary: arith_binary • '+' term
   73             | arith_binary • '-' term

    '+'  shift, and go to state 259
    '-'  shift, and go to state 260

    ')'         reduce using rule 71 (lst_binary)
    AND         reduce using rule 71 (lst_binary)
    OR          reduce using rule 71 (lst_binary)
    GREATER     reduce using rule 71 (lst_binary)
    GREATER_EQ  reduce using rule 71 (lst_binary)
    LESS        reduce using rule 71 (lst_binary)
    LESS_EQ     reduce using rule 71 (lst_binary)
    EQUAL       reduce using rule 71 (lst_binary)
    NOT_EQ      reduce using rule 71 (lst_binary)
    FILTER      reduce using rule 71 (lst_binary)
    MAP         reduce using rule 71 (lst_binary)
    ':'         reduce using rule 71 (lst_binary)


State 181

   74 arith_binary: term •
   75 term: term • '*' expression
   76     | term • '/' expression

    '*'  shift, and go to state 261
    '/'  shift, and go to state 262

    ')'         reduce using rule 74 (arith_binary)
    AND         reduce using rule 74 (arith_binary)
    OR          reduce using rule 74 (arith_binary)
    GREATER     reduce using rule 74 (arith_binary)
    GREATER_EQ  reduce using rule 74 (arith_binary)
    LESS        reduce using rule 74 (arith_binary)
    LESS_EQ     reduce using rule 74 (arith_binary)
    EQUAL       reduce using rule 74 (arith_binary)
    NOT_EQ      reduce using rule 74 (arith_binary)
    '+'         reduce using rule 74 (arith_binary)
    '-'         reduce using rule 74 (arith_binary)
    FILTER      reduce using rule 74 (arith_binary)
    MAP         reduce using rule 74 (arith_binary)
    ':'         reduce using rule 74 (arith_binary)


State 182

   77 term: expression •

    ')'         reduce using rule 77 (term)
    AND         reduce using rule 77 (term)
    OR          reduce using rule 77 (term)
    GREATER     reduce using rule 77 (term)
    GREATER_EQ  reduce using rule 77 (term)
    LESS        reduce using rule 77 (term)
    LESS_EQ     reduce using rule 77 (term)
    EQUAL       reduce using rule 77 (term)
    NOT_EQ      reduce using rule 77 (term)
    '+'         reduce using rule 77 (term)
    '-'         reduce using rule 77 (term)
    '*'         reduce using rule 77 (term)
    '/'         reduce using rule 77 (term)
    FILTER      reduce using rule 77 (term)
    MAP         reduce using rule 77 (term)
    ':'         reduce using rule 77 (term)


State 183

   80 expression: const •

    ')'         reduce using rule 80 (expression)
    AND         reduce using rule 80 (expression)
    OR          reduce using rule 80 (expression)
    GREATER     reduce using rule 80 (expression)
    GREATER_EQ  reduce using rule 80 (expression)
    LESS        reduce using rule 80 (expression)
    LESS_EQ     reduce using rule 80 (expression)
    EQUAL       reduce using rule 80 (expression)
    NOT_EQ      reduce using rule 80 (expression)
    '+'         reduce using rule 80 (expression)
    '-'         reduce using rule 80 (expression)
    '*'         reduce using rule 80 (expression)
    '/'         reduce using rule 80 (expression)
    FILTER      reduce using rule 80 (expression)
    MAP         reduce using rule 80 (expression)
    ':'         reduce using rule 80 (expression)


State 184

   83 const: number •

    ')'         reduce using rule 83 (const)
    AND         reduce using rule 83 (const)
    OR          reduce using rule 83 (const)
    GREATER     reduce using rule 83 (const)
    GREATER_EQ  reduce using rule 83 (const)
    LESS        reduce using rule 83 (const)
    LESS_EQ     reduce using rule 83 (const)
    EQUAL       reduce using rule 83 (const)
    NOT_EQ      reduce using rule 83 (const)
    '+'         reduce using rule 83 (const)
    '-'         reduce using rule 83 (const)
    '*'         reduce using rule 83 (const)
    '/'         reduce using rule 83 (const)
    FILTER      reduce using rule 83 (const)
    MAP         reduce using rule 83 (const)
    ':'         reduce using rule 83 (const)


State 185

   79 expression: single_operation •

    ')'         reduce using rule 79 (expression)
    AND         reduce using rule 79 (expression)
    OR          reduce using rule 79 (expression)
    GREATER     reduce using rule 79 (expression)
    GREATER_EQ  reduce using rule 79 (expression)
    LESS        reduce using rule 79 (expression)
    LESS_EQ     reduce using rule 79 (expression)
    EQUAL       reduce using rule 79 (expression)
    NOT_EQ      reduce using rule 79 (expression)
    '+'         reduce using rule 79 (expression)
    '-'         reduce using rule 79 (expression)
    '*'         reduce using rule 79 (expression)
    '/'         reduce using rule 79 (expression)
    FILTER      reduce using rule 79 (expression)
    MAP         reduce using rule 79 (expression)
    ':'         reduce using rule 79 (expression)


State 186

   87 single_operation: arith_single •

    ')'         reduce using rule 87 (single_operation)
    AND         reduce using rule 87 (single_operation)
    OR          reduce using rule 87 (single_operation)
    GREATER     reduce using rule 87 (single_operation)
    GREATER_EQ  reduce using rule 87 (single_operation)
    LESS        reduce using rule 87 (single_operation)
    LESS_EQ     reduce using rule 87 (single_operation)
    EQUAL       reduce using rule 87 (single_operation)
    NOT_EQ      reduce using rule 87 (single_operation)
    '+'         reduce using rule 87 (single_operation)
    '-'         reduce using rule 87 (single_operation)
    '*'         reduce using rule 87 (single_operation)
    '/'         reduce using rule 87 (single_operation)
    FILTER      reduce using rule 87 (single_operation)
    MAP         reduce using rule 87 (single_operation)
    ':'         reduce using rule 87 (single_operation)


State 187

   88 single_operation: lst_single •

    ')'         reduce using rule 88 (single_operation)
    AND         reduce using rule 88 (single_operation)
    OR          reduce using rule 88 (single_operation)
    GREATER     reduce using rule 88 (single_operation)
    GREATER_EQ  reduce using rule 88 (single_operation)
    LESS        reduce using rule 88 (single_operation)
    LESS_EQ     reduce using rule 88 (single_operation)
    EQUAL       reduce using rule 88 (single_operation)
    NOT_EQ      reduce using rule 88 (single_operation)
    '+'         reduce using rule 88 (single_operation)
    '-'         reduce using rule 88 (single_operation)
    '*'         reduce using rule 88 (single_operation)
    '/'         reduce using rule 88 (single_operation)
    FILTER      reduce using rule 88 (single_operation)
    MAP         reduce using rule 88 (single_operation)
    ':'         reduce using rule 88 (single_operation)


State 188

   13 var_declaration: unq_declaration ';' •

    error           reduce using rule 13 (var_declaration)
    NUM_INT         reduce using rule 13 (var_declaration)
    NUM_FLOAT       reduce using rule 13 (var_declaration)
    NIL_CNST        reduce using rule 13 (var_declaration)
    ID              reduce using rule 13 (var_declaration)
    RETURN_STM      reduce using rule 13 (var_declaration)
    T_INT           reduce using rule 13 (var_declaration)
    T_FLOAT         reduce using rule 13 (var_declaration)
    IF_STMT         reduce using rule 13 (var_declaration)
    FOR_STMT        reduce using rule 13 (var_declaration)
    OUTPUT_WRITE    reduce using rule 13 (var_declaration)
    OUTPUT_WRITELN  reduce using rule 13 (var_declaration)
    INPUT_READ      reduce using rule 13 (var_declaration)
    '('             reduce using rule 13 (var_declaration)
    '{'             reduce using rule 13 (var_declaration)
    '}'             reduce using rule 13 (var_declaration)
    '+'             reduce using rule 13 (var_declaration)
    '-'             reduce using rule 13 (var_declaration)
    '%'             reduce using rule 13 (var_declaration)
    '?'             reduce using rule 13 (var_declaration)
    '!'             reduce using rule 13 (var_declaration)


State 189

   58 iden: ID •

    ')'  reduce using rule 58 (iden)


State 190

   66 operation: operation AND • operation

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    operation         go to state 263
    lst_binary        go to state 179
    arith_binary      go to state 180
    term              go to state 181
    expression        go to state 182
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 191

   67 operation: operation OR • operation

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    operation         go to state 264
    lst_binary        go to state 179
    arith_binary      go to state 180
    term              go to state 181
    expression        go to state 182
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 192

   60 operation: operation GREATER • operation

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    operation         go to state 265
    lst_binary        go to state 179
    arith_binary      go to state 180
    term              go to state 181
    expression        go to state 182
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 193

   61 operation: operation GREATER_EQ • operation

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    operation         go to state 266
    lst_binary        go to state 179
    arith_binary      go to state 180
    term              go to state 181
    expression        go to state 182
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 194

   62 operation: operation LESS • operation

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    operation         go to state 267
    lst_binary        go to state 179
    arith_binary      go to state 180
    term              go to state 181
    expression        go to state 182
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 195

   63 operation: operation LESS_EQ • operation

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    operation         go to state 268
    lst_binary        go to state 179
    arith_binary      go to state 180
    term              go to state 181
    expression        go to state 182
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 196

   64 operation: operation EQUAL • operation

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    operation         go to state 269
    lst_binary        go to state 179
    arith_binary      go to state 180
    term              go to state 181
    expression        go to state 182
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 197

   65 operation: operation NOT_EQ • operation

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    operation         go to state 270
    lst_binary        go to state 179
    arith_binary      go to state 180
    term              go to state 181
    expression        go to state 182
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 198

   85 number: NUM_INT •

    ')'         reduce using rule 85 (number)
    ','         reduce using rule 85 (number)
    AND         reduce using rule 85 (number)
    OR          reduce using rule 85 (number)
    GREATER     reduce using rule 85 (number)
    GREATER_EQ  reduce using rule 85 (number)
    LESS        reduce using rule 85 (number)
    LESS_EQ     reduce using rule 85 (number)
    EQUAL       reduce using rule 85 (number)
    NOT_EQ      reduce using rule 85 (number)
    '+'         reduce using rule 85 (number)
    '-'         reduce using rule 85 (number)
    '*'         reduce using rule 85 (number)
    '/'         reduce using rule 85 (number)
    FILTER      reduce using rule 85 (number)
    MAP         reduce using rule 85 (number)
    ':'         reduce using rule 85 (number)


State 199

   86 number: NUM_FLOAT •

    ')'         reduce using rule 86 (number)
    ','         reduce using rule 86 (number)
    AND         reduce using rule 86 (number)
    OR          reduce using rule 86 (number)
    GREATER     reduce using rule 86 (number)
    GREATER_EQ  reduce using rule 86 (number)
    LESS        reduce using rule 86 (number)
    LESS_EQ     reduce using rule 86 (number)
    EQUAL       reduce using rule 86 (number)
    NOT_EQ      reduce using rule 86 (number)
    '+'         reduce using rule 86 (number)
    '-'         reduce using rule 86 (number)
    '*'         reduce using rule 86 (number)
    '/'         reduce using rule 86 (number)
    FILTER      reduce using rule 86 (number)
    MAP         reduce using rule 86 (number)
    ':'         reduce using rule 86 (number)


State 200

   84 const: NIL_CNST •

    ')'         reduce using rule 84 (const)
    ','         reduce using rule 84 (const)
    AND         reduce using rule 84 (const)
    OR          reduce using rule 84 (const)
    GREATER     reduce using rule 84 (const)
    GREATER_EQ  reduce using rule 84 (const)
    LESS        reduce using rule 84 (const)
    LESS_EQ     reduce using rule 84 (const)
    EQUAL       reduce using rule 84 (const)
    NOT_EQ      reduce using rule 84 (const)
    '+'         reduce using rule 84 (const)
    '-'         reduce using rule 84 (const)
    '*'         reduce using rule 84 (const)
    '/'         reduce using rule 84 (const)
    FILTER      reduce using rule 84 (const)
    MAP         reduce using rule 84 (const)
    ':'         reduce using rule 84 (const)


State 201

   12 func_calling: ID • '(' $@2 calling_parameters $@3 ')'
   58 iden: ID •

    '('  shift, and go to state 271

    ')'         reduce using rule 58 (iden)
    ','         reduce using rule 58 (iden)
    AND         reduce using rule 58 (iden)
    OR          reduce using rule 58 (iden)
    GREATER     reduce using rule 58 (iden)
    GREATER_EQ  reduce using rule 58 (iden)
    LESS        reduce using rule 58 (iden)
    LESS_EQ     reduce using rule 58 (iden)
    EQUAL       reduce using rule 58 (iden)
    NOT_EQ      reduce using rule 58 (iden)
    '+'         reduce using rule 58 (iden)
    '-'         reduce using rule 58 (iden)
    '*'         reduce using rule 58 (iden)
    '/'         reduce using rule 58 (iden)
    FILTER      reduce using rule 58 (iden)
    MAP         reduce using rule 58 (iden)
    ':'         reduce using rule 58 (iden)


State 202

   82 expression: '(' • operation ')'

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    operation         go to state 272
    lst_binary        go to state 179
    arith_binary      go to state 180
    term              go to state 181
    expression        go to state 182
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 203

   90 arith_single: '+' • expression

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    iden              go to state 209
    expression        go to state 273
    const             go to state 214
    number            go to state 215
    single_operation  go to state 216
    arith_single      go to state 217
    lst_single        go to state 218


State 204

   91 arith_single: '-' • expression

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    iden              go to state 209
    expression        go to state 274
    const             go to state 214
    number            go to state 215
    single_operation  go to state 216
    arith_single      go to state 217
    lst_single        go to state 218


State 205

   92 lst_single: '%' • expression

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    iden              go to state 209
    expression        go to state 275
    const             go to state 214
    number            go to state 215
    single_operation  go to state 216
    arith_single      go to state 217
    lst_single        go to state 218


State 206

   93 lst_single: '?' • expression

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    iden              go to state 209
    expression        go to state 276
    const             go to state 214
    number            go to state 215
    single_operation  go to state 216
    arith_single      go to state 217
    lst_single        go to state 218


State 207

   89 single_operation: '!' • expression

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    iden              go to state 209
    expression        go to state 277
    const             go to state 214
    number            go to state 215
    single_operation  go to state 216
    arith_single      go to state 217
    lst_single        go to state 218


State 208

   78 expression: func_calling •

    ')'         reduce using rule 78 (expression)
    ','         reduce using rule 78 (expression)
    AND         reduce using rule 78 (expression)
    OR          reduce using rule 78 (expression)
    GREATER     reduce using rule 78 (expression)
    GREATER_EQ  reduce using rule 78 (expression)
    LESS        reduce using rule 78 (expression)
    LESS_EQ     reduce using rule 78 (expression)
    EQUAL       reduce using rule 78 (expression)
    NOT_EQ      reduce using rule 78 (expression)
    '+'         reduce using rule 78 (expression)
    '-'         reduce using rule 78 (expression)
    '*'         reduce using rule 78 (expression)
    '/'         reduce using rule 78 (expression)
    FILTER      reduce using rule 78 (expression)
    MAP         reduce using rule 78 (expression)
    ':'         reduce using rule 78 (expression)


State 209

   81 expression: iden •

    ')'         reduce using rule 81 (expression)
    ','         reduce using rule 81 (expression)
    AND         reduce using rule 81 (expression)
    OR          reduce using rule 81 (expression)
    GREATER     reduce using rule 81 (expression)
    GREATER_EQ  reduce using rule 81 (expression)
    LESS        reduce using rule 81 (expression)
    LESS_EQ     reduce using rule 81 (expression)
    EQUAL       reduce using rule 81 (expression)
    NOT_EQ      reduce using rule 81 (expression)
    '+'         reduce using rule 81 (expression)
    '-'         reduce using rule 81 (expression)
    '*'         reduce using rule 81 (expression)
    '/'         reduce using rule 81 (expression)
    FILTER      reduce using rule 81 (expression)
    MAP         reduce using rule 81 (expression)
    ':'         reduce using rule 81 (expression)


State 210

   59 operation: lst_binary •
   68 lst_binary: lst_binary • FILTER lst_binary
   69           | lst_binary • MAP lst_binary
   70           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 278
    MAP     shift, and go to state 279
    ':'     shift, and go to state 280

    ')'         reduce using rule 59 (operation)
    ','         reduce using rule 59 (operation)
    AND         reduce using rule 59 (operation)
    OR          reduce using rule 59 (operation)
    GREATER     reduce using rule 59 (operation)
    GREATER_EQ  reduce using rule 59 (operation)
    LESS        reduce using rule 59 (operation)
    LESS_EQ     reduce using rule 59 (operation)
    EQUAL       reduce using rule 59 (operation)
    NOT_EQ      reduce using rule 59 (operation)


State 211

   71 lst_binary: arith_binary •
   72 arith_binary: arith_binary • '+' term
   73             | arith_binary • '-' term

    '+'  shift, and go to state 281
    '-'  shift, and go to state 282

    ')'         reduce using rule 71 (lst_binary)
    ','         reduce using rule 71 (lst_binary)
    AND         reduce using rule 71 (lst_binary)
    OR          reduce using rule 71 (lst_binary)
    GREATER     reduce using rule 71 (lst_binary)
    GREATER_EQ  reduce using rule 71 (lst_binary)
    LESS        reduce using rule 71 (lst_binary)
    LESS_EQ     reduce using rule 71 (lst_binary)
    EQUAL       reduce using rule 71 (lst_binary)
    NOT_EQ      reduce using rule 71 (lst_binary)
    FILTER      reduce using rule 71 (lst_binary)
    MAP         reduce using rule 71 (lst_binary)
    ':'         reduce using rule 71 (lst_binary)


State 212

   74 arith_binary: term •
   75 term: term • '*' expression
   76     | term • '/' expression

    '*'  shift, and go to state 283
    '/'  shift, and go to state 284

    ')'         reduce using rule 74 (arith_binary)
    ','         reduce using rule 74 (arith_binary)
    AND         reduce using rule 74 (arith_binary)
    OR          reduce using rule 74 (arith_binary)
    GREATER     reduce using rule 74 (arith_binary)
    GREATER_EQ  reduce using rule 74 (arith_binary)
    LESS        reduce using rule 74 (arith_binary)
    LESS_EQ     reduce using rule 74 (arith_binary)
    EQUAL       reduce using rule 74 (arith_binary)
    NOT_EQ      reduce using rule 74 (arith_binary)
    '+'         reduce using rule 74 (arith_binary)
    '-'         reduce using rule 74 (arith_binary)
    FILTER      reduce using rule 74 (arith_binary)
    MAP         reduce using rule 74 (arith_binary)
    ':'         reduce using rule 74 (arith_binary)


State 213

   77 term: expression •

    ')'         reduce using rule 77 (term)
    ','         reduce using rule 77 (term)
    AND         reduce using rule 77 (term)
    OR          reduce using rule 77 (term)
    GREATER     reduce using rule 77 (term)
    GREATER_EQ  reduce using rule 77 (term)
    LESS        reduce using rule 77 (term)
    LESS_EQ     reduce using rule 77 (term)
    EQUAL       reduce using rule 77 (term)
    NOT_EQ      reduce using rule 77 (term)
    '+'         reduce using rule 77 (term)
    '-'         reduce using rule 77 (term)
    '*'         reduce using rule 77 (term)
    '/'         reduce using rule 77 (term)
    FILTER      reduce using rule 77 (term)
    MAP         reduce using rule 77 (term)
    ':'         reduce using rule 77 (term)


State 214

   80 expression: const •

    ')'         reduce using rule 80 (expression)
    ','         reduce using rule 80 (expression)
    AND         reduce using rule 80 (expression)
    OR          reduce using rule 80 (expression)
    GREATER     reduce using rule 80 (expression)
    GREATER_EQ  reduce using rule 80 (expression)
    LESS        reduce using rule 80 (expression)
    LESS_EQ     reduce using rule 80 (expression)
    EQUAL       reduce using rule 80 (expression)
    NOT_EQ      reduce using rule 80 (expression)
    '+'         reduce using rule 80 (expression)
    '-'         reduce using rule 80 (expression)
    '*'         reduce using rule 80 (expression)
    '/'         reduce using rule 80 (expression)
    FILTER      reduce using rule 80 (expression)
    MAP         reduce using rule 80 (expression)
    ':'         reduce using rule 80 (expression)


State 215

   83 const: number •

    ')'         reduce using rule 83 (const)
    ','         reduce using rule 83 (const)
    AND         reduce using rule 83 (const)
    OR          reduce using rule 83 (const)
    GREATER     reduce using rule 83 (const)
    GREATER_EQ  reduce using rule 83 (const)
    LESS        reduce using rule 83 (const)
    LESS_EQ     reduce using rule 83 (const)
    EQUAL       reduce using rule 83 (const)
    NOT_EQ      reduce using rule 83 (const)
    '+'         reduce using rule 83 (const)
    '-'         reduce using rule 83 (const)
    '*'         reduce using rule 83 (const)
    '/'         reduce using rule 83 (const)
    FILTER      reduce using rule 83 (const)
    MAP         reduce using rule 83 (const)
    ':'         reduce using rule 83 (const)


State 216

   79 expression: single_operation •

    ')'         reduce using rule 79 (expression)
    ','         reduce using rule 79 (expression)
    AND         reduce using rule 79 (expression)
    OR          reduce using rule 79 (expression)
    GREATER     reduce using rule 79 (expression)
    GREATER_EQ  reduce using rule 79 (expression)
    LESS        reduce using rule 79 (expression)
    LESS_EQ     reduce using rule 79 (expression)
    EQUAL       reduce using rule 79 (expression)
    NOT_EQ      reduce using rule 79 (expression)
    '+'         reduce using rule 79 (expression)
    '-'         reduce using rule 79 (expression)
    '*'         reduce using rule 79 (expression)
    '/'         reduce using rule 79 (expression)
    FILTER      reduce using rule 79 (expression)
    MAP         reduce using rule 79 (expression)
    ':'         reduce using rule 79 (expression)


State 217

   87 single_operation: arith_single •

    ')'         reduce using rule 87 (single_operation)
    ','         reduce using rule 87 (single_operation)
    AND         reduce using rule 87 (single_operation)
    OR          reduce using rule 87 (single_operation)
    GREATER     reduce using rule 87 (single_operation)
    GREATER_EQ  reduce using rule 87 (single_operation)
    LESS        reduce using rule 87 (single_operation)
    LESS_EQ     reduce using rule 87 (single_operation)
    EQUAL       reduce using rule 87 (single_operation)
    NOT_EQ      reduce using rule 87 (single_operation)
    '+'         reduce using rule 87 (single_operation)
    '-'         reduce using rule 87 (single_operation)
    '*'         reduce using rule 87 (single_operation)
    '/'         reduce using rule 87 (single_operation)
    FILTER      reduce using rule 87 (single_operation)
    MAP         reduce using rule 87 (single_operation)
    ':'         reduce using rule 87 (single_operation)


State 218

   88 single_operation: lst_single •

    ')'         reduce using rule 88 (single_operation)
    ','         reduce using rule 88 (single_operation)
    AND         reduce using rule 88 (single_operation)
    OR          reduce using rule 88 (single_operation)
    GREATER     reduce using rule 88 (single_operation)
    GREATER_EQ  reduce using rule 88 (single_operation)
    LESS        reduce using rule 88 (single_operation)
    LESS_EQ     reduce using rule 88 (single_operation)
    EQUAL       reduce using rule 88 (single_operation)
    NOT_EQ      reduce using rule 88 (single_operation)
    '+'         reduce using rule 88 (single_operation)
    '-'         reduce using rule 88 (single_operation)
    '*'         reduce using rule 88 (single_operation)
    '/'         reduce using rule 88 (single_operation)
    FILTER      reduce using rule 88 (single_operation)
    MAP         reduce using rule 88 (single_operation)
    ':'         reduce using rule 88 (single_operation)


State 219

   66 operation: operation AND • operation

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    iden              go to state 209
    operation         go to state 285
    lst_binary        go to state 210
    arith_binary      go to state 211
    term              go to state 212
    expression        go to state 213
    const             go to state 214
    number            go to state 215
    single_operation  go to state 216
    arith_single      go to state 217
    lst_single        go to state 218


State 220

   67 operation: operation OR • operation

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    iden              go to state 209
    operation         go to state 286
    lst_binary        go to state 210
    arith_binary      go to state 211
    term              go to state 212
    expression        go to state 213
    const             go to state 214
    number            go to state 215
    single_operation  go to state 216
    arith_single      go to state 217
    lst_single        go to state 218


State 221

   60 operation: operation GREATER • operation

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    iden              go to state 209
    operation         go to state 287
    lst_binary        go to state 210
    arith_binary      go to state 211
    term              go to state 212
    expression        go to state 213
    const             go to state 214
    number            go to state 215
    single_operation  go to state 216
    arith_single      go to state 217
    lst_single        go to state 218


State 222

   61 operation: operation GREATER_EQ • operation

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    iden              go to state 209
    operation         go to state 288
    lst_binary        go to state 210
    arith_binary      go to state 211
    term              go to state 212
    expression        go to state 213
    const             go to state 214
    number            go to state 215
    single_operation  go to state 216
    arith_single      go to state 217
    lst_single        go to state 218


State 223

   62 operation: operation LESS • operation

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    iden              go to state 209
    operation         go to state 289
    lst_binary        go to state 210
    arith_binary      go to state 211
    term              go to state 212
    expression        go to state 213
    const             go to state 214
    number            go to state 215
    single_operation  go to state 216
    arith_single      go to state 217
    lst_single        go to state 218


State 224

   63 operation: operation LESS_EQ • operation

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    iden              go to state 209
    operation         go to state 290
    lst_binary        go to state 210
    arith_binary      go to state 211
    term              go to state 212
    expression        go to state 213
    const             go to state 214
    number            go to state 215
    single_operation  go to state 216
    arith_single      go to state 217
    lst_single        go to state 218


State 225

   64 operation: operation EQUAL • operation

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    iden              go to state 209
    operation         go to state 291
    lst_binary        go to state 210
    arith_binary      go to state 211
    term              go to state 212
    expression        go to state 213
    const             go to state 214
    number            go to state 215
    single_operation  go to state 216
    arith_single      go to state 217
    lst_single        go to state 218


State 226

   65 operation: operation NOT_EQ • operation

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    iden              go to state 209
    operation         go to state 292
    lst_binary        go to state 210
    arith_binary      go to state 211
    term              go to state 212
    expression        go to state 213
    const             go to state 214
    number            go to state 215
    single_operation  go to state 216
    arith_single      go to state 217
    lst_single        go to state 218


State 227

   40 command: error • ';'
   41        | error •

    ';'  shift, and go to state 293

    error           reduce using rule 41 (command)
    NUM_INT         reduce using rule 41 (command)
    NUM_FLOAT       reduce using rule 41 (command)
    NIL_CNST        reduce using rule 41 (command)
    ID              reduce using rule 41 (command)
    RETURN_STM      reduce using rule 41 (command)
    T_INT           reduce using rule 41 (command)
    T_FLOAT         reduce using rule 41 (command)
    IF_STMT         reduce using rule 41 (command)
    ELSE_STMT       reduce using rule 41 (command)
    FOR_STMT        reduce using rule 41 (command)
    OUTPUT_WRITE    reduce using rule 41 (command)
    OUTPUT_WRITELN  reduce using rule 41 (command)
    INPUT_READ      reduce using rule 41 (command)
    '('             reduce using rule 41 (command)
    '{'             reduce using rule 41 (command)
    '}'             reduce using rule 41 (command)
    '+'             reduce using rule 41 (command)
    '-'             reduce using rule 41 (command)
    '%'             reduce using rule 41 (command)
    '?'             reduce using rule 41 (command)
    '!'             reduce using rule 41 (command)


State 228

   46 return_stmt: RETURN_STM • operation ';'

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 44
    iden              go to state 70
    operation         go to state 294
    lst_binary        go to state 59
    arith_binary      go to state 60
    term              go to state 61
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 229

   44 conditional_stmt: IF_STMT • '(' operation ')' command
   45                 | IF_STMT • '(' operation ')' command ELSE_STMT command

    '('  shift, and go to state 295


State 230

   47 iteration: FOR_STMT • '(' loop_condition ')' command

    '('  shift, and go to state 296


State 231

   53 output: OUTPUT_WRITE • '(' operation ')' ';'
   55       | OUTPUT_WRITE • '(' STRING ')' ';'

    '('  shift, and go to state 297


State 232

   54 output: OUTPUT_WRITELN • '(' operation ')' ';'
   56       | OUTPUT_WRITELN • '(' STRING ')' ';'

    '('  shift, and go to state 298


State 233

   57 input: INPUT_READ • '(' iden ')' ';'

    '('  shift, and go to state 299


State 234

   30 command: var_declaration •

    error           reduce using rule 30 (command)
    NUM_INT         reduce using rule 30 (command)
    NUM_FLOAT       reduce using rule 30 (command)
    NIL_CNST        reduce using rule 30 (command)
    ID              reduce using rule 30 (command)
    RETURN_STM      reduce using rule 30 (command)
    T_INT           reduce using rule 30 (command)
    T_FLOAT         reduce using rule 30 (command)
    IF_STMT         reduce using rule 30 (command)
    ELSE_STMT       reduce using rule 30 (command)
    FOR_STMT        reduce using rule 30 (command)
    OUTPUT_WRITE    reduce using rule 30 (command)
    OUTPUT_WRITELN  reduce using rule 30 (command)
    INPUT_READ      reduce using rule 30 (command)
    '('             reduce using rule 30 (command)
    '{'             reduce using rule 30 (command)
    '}'             reduce using rule 30 (command)
    '+'             reduce using rule 30 (command)
    '-'             reduce using rule 30 (command)
    '%'             reduce using rule 30 (command)
    '?'             reduce using rule 30 (command)
    '!'             reduce using rule 30 (command)


State 235

   13 var_declaration: unq_declaration • ';'

    ';'  shift, and go to state 300


State 236

   38 command: $@4 • '{' block_commands '}'

    '{'  shift, and go to state 301


State 237

   31 command: init_variable •

    error           reduce using rule 31 (command)
    NUM_INT         reduce using rule 31 (command)
    NUM_FLOAT       reduce using rule 31 (command)
    NIL_CNST        reduce using rule 31 (command)
    ID              reduce using rule 31 (command)
    RETURN_STM      reduce using rule 31 (command)
    T_INT           reduce using rule 31 (command)
    T_FLOAT         reduce using rule 31 (command)
    IF_STMT         reduce using rule 31 (command)
    ELSE_STMT       reduce using rule 31 (command)
    FOR_STMT        reduce using rule 31 (command)
    OUTPUT_WRITE    reduce using rule 31 (command)
    OUTPUT_WRITELN  reduce using rule 31 (command)
    INPUT_READ      reduce using rule 31 (command)
    '('             reduce using rule 31 (command)
    '{'             reduce using rule 31 (command)
    '}'             reduce using rule 31 (command)
    '+'             reduce using rule 31 (command)
    '-'             reduce using rule 31 (command)
    '%'             reduce using rule 31 (command)
    '?'             reduce using rule 31 (command)
    '!'             reduce using rule 31 (command)


State 238

   42 init_variable: init_stmt • ';'

    ';'  shift, and go to state 302


State 239

   32 command: conditional_stmt •

    error           reduce using rule 32 (command)
    NUM_INT         reduce using rule 32 (command)
    NUM_FLOAT       reduce using rule 32 (command)
    NIL_CNST        reduce using rule 32 (command)
    ID              reduce using rule 32 (command)
    RETURN_STM      reduce using rule 32 (command)
    T_INT           reduce using rule 32 (command)
    T_FLOAT         reduce using rule 32 (command)
    IF_STMT         reduce using rule 32 (command)
    ELSE_STMT       reduce using rule 32 (command)
    FOR_STMT        reduce using rule 32 (command)
    OUTPUT_WRITE    reduce using rule 32 (command)
    OUTPUT_WRITELN  reduce using rule 32 (command)
    INPUT_READ      reduce using rule 32 (command)
    '('             reduce using rule 32 (command)
    '{'             reduce using rule 32 (command)
    '}'             reduce using rule 32 (command)
    '+'             reduce using rule 32 (command)
    '-'             reduce using rule 32 (command)
    '%'             reduce using rule 32 (command)
    '?'             reduce using rule 32 (command)
    '!'             reduce using rule 32 (command)


State 240

   33 command: return_stmt •

    error           reduce using rule 33 (command)
    NUM_INT         reduce using rule 33 (command)
    NUM_FLOAT       reduce using rule 33 (command)
    NIL_CNST        reduce using rule 33 (command)
    ID              reduce using rule 33 (command)
    RETURN_STM      reduce using rule 33 (command)
    T_INT           reduce using rule 33 (command)
    T_FLOAT         reduce using rule 33 (command)
    IF_STMT         reduce using rule 33 (command)
    ELSE_STMT       reduce using rule 33 (command)
    FOR_STMT        reduce using rule 33 (command)
    OUTPUT_WRITE    reduce using rule 33 (command)
    OUTPUT_WRITELN  reduce using rule 33 (command)
    INPUT_READ      reduce using rule 33 (command)
    '('             reduce using rule 33 (command)
    '{'             reduce using rule 33 (command)
    '}'             reduce using rule 33 (command)
    '+'             reduce using rule 33 (command)
    '-'             reduce using rule 33 (command)
    '%'             reduce using rule 33 (command)
    '?'             reduce using rule 33 (command)
    '!'             reduce using rule 33 (command)


State 241

   34 command: iteration •

    error           reduce using rule 34 (command)
    NUM_INT         reduce using rule 34 (command)
    NUM_FLOAT       reduce using rule 34 (command)
    NIL_CNST        reduce using rule 34 (command)
    ID              reduce using rule 34 (command)
    RETURN_STM      reduce using rule 34 (command)
    T_INT           reduce using rule 34 (command)
    T_FLOAT         reduce using rule 34 (command)
    IF_STMT         reduce using rule 34 (command)
    ELSE_STMT       reduce using rule 34 (command)
    FOR_STMT        reduce using rule 34 (command)
    OUTPUT_WRITE    reduce using rule 34 (command)
    OUTPUT_WRITELN  reduce using rule 34 (command)
    INPUT_READ      reduce using rule 34 (command)
    '('             reduce using rule 34 (command)
    '{'             reduce using rule 34 (command)
    '}'             reduce using rule 34 (command)
    '+'             reduce using rule 34 (command)
    '-'             reduce using rule 34 (command)
    '%'             reduce using rule 34 (command)
    '?'             reduce using rule 34 (command)
    '!'             reduce using rule 34 (command)


State 242

   35 command: output •

    error           reduce using rule 35 (command)
    NUM_INT         reduce using rule 35 (command)
    NUM_FLOAT       reduce using rule 35 (command)
    NIL_CNST        reduce using rule 35 (command)
    ID              reduce using rule 35 (command)
    RETURN_STM      reduce using rule 35 (command)
    T_INT           reduce using rule 35 (command)
    T_FLOAT         reduce using rule 35 (command)
    IF_STMT         reduce using rule 35 (command)
    ELSE_STMT       reduce using rule 35 (command)
    FOR_STMT        reduce using rule 35 (command)
    OUTPUT_WRITE    reduce using rule 35 (command)
    OUTPUT_WRITELN  reduce using rule 35 (command)
    INPUT_READ      reduce using rule 35 (command)
    '('             reduce using rule 35 (command)
    '{'             reduce using rule 35 (command)
    '}'             reduce using rule 35 (command)
    '+'             reduce using rule 35 (command)
    '-'             reduce using rule 35 (command)
    '%'             reduce using rule 35 (command)
    '?'             reduce using rule 35 (command)
    '!'             reduce using rule 35 (command)


State 243

   36 command: input •

    error           reduce using rule 36 (command)
    NUM_INT         reduce using rule 36 (command)
    NUM_FLOAT       reduce using rule 36 (command)
    NIL_CNST        reduce using rule 36 (command)
    ID              reduce using rule 36 (command)
    RETURN_STM      reduce using rule 36 (command)
    T_INT           reduce using rule 36 (command)
    T_FLOAT         reduce using rule 36 (command)
    IF_STMT         reduce using rule 36 (command)
    ELSE_STMT       reduce using rule 36 (command)
    FOR_STMT        reduce using rule 36 (command)
    OUTPUT_WRITE    reduce using rule 36 (command)
    OUTPUT_WRITELN  reduce using rule 36 (command)
    INPUT_READ      reduce using rule 36 (command)
    '('             reduce using rule 36 (command)
    '{'             reduce using rule 36 (command)
    '}'             reduce using rule 36 (command)
    '+'             reduce using rule 36 (command)
    '-'             reduce using rule 36 (command)
    '%'             reduce using rule 36 (command)
    '?'             reduce using rule 36 (command)
    '!'             reduce using rule 36 (command)


State 244

   39 command: operation • ';'
   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    ';'         shift, and go to state 303
    AND         shift, and go to state 89
    OR          shift, and go to state 90
    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94
    EQUAL       shift, and go to state 95
    NOT_EQ      shift, and go to state 96


State 245

   49 update_stmt: init_stmt •

    ')'  reduce using rule 49 (update_stmt)


State 246

   43 init_stmt: iden • '=' operation

    '='  shift, and go to state 304


State 247

   14 unq_declaration: type ID •

    ')'  reduce using rule 14 (unq_declaration)
    ','  reduce using rule 14 (unq_declaration)


State 248

   14 unq_declaration: type ID •

    ';'  reduce using rule 14 (unq_declaration)


State 249

   12 func_calling: ID '(' • $@2 calling_parameters $@3 ')'

    NUM_INT    reduce using rule 10 ($@2)
    NUM_FLOAT  reduce using rule 10 ($@2)
    NIL_CNST   reduce using rule 10 ($@2)
    ID         reduce using rule 10 ($@2)
    '('        reduce using rule 10 ($@2)
    ')'        reduce using rule 10 ($@2)
    '+'        reduce using rule 10 ($@2)
    '-'        reduce using rule 10 ($@2)
    '%'        reduce using rule 10 ($@2)
    '?'        reduce using rule 10 ($@2)
    '!'        reduce using rule 10 ($@2)

    $@2  go to state 305


State 250

   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation
   82 expression: '(' operation • ')'

    ')'         shift, and go to state 306
    AND         shift, and go to state 190
    OR          shift, and go to state 191
    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195
    EQUAL       shift, and go to state 196
    NOT_EQ      shift, and go to state 197


State 251

   90 arith_single: '+' expression •

    ')'         reduce using rule 90 (arith_single)
    AND         reduce using rule 90 (arith_single)
    OR          reduce using rule 90 (arith_single)
    GREATER     reduce using rule 90 (arith_single)
    GREATER_EQ  reduce using rule 90 (arith_single)
    LESS        reduce using rule 90 (arith_single)
    LESS_EQ     reduce using rule 90 (arith_single)
    EQUAL       reduce using rule 90 (arith_single)
    NOT_EQ      reduce using rule 90 (arith_single)
    '+'         reduce using rule 90 (arith_single)
    '-'         reduce using rule 90 (arith_single)
    '*'         reduce using rule 90 (arith_single)
    '/'         reduce using rule 90 (arith_single)
    FILTER      reduce using rule 90 (arith_single)
    MAP         reduce using rule 90 (arith_single)
    ':'         reduce using rule 90 (arith_single)


State 252

   91 arith_single: '-' expression •

    ')'         reduce using rule 91 (arith_single)
    AND         reduce using rule 91 (arith_single)
    OR          reduce using rule 91 (arith_single)
    GREATER     reduce using rule 91 (arith_single)
    GREATER_EQ  reduce using rule 91 (arith_single)
    LESS        reduce using rule 91 (arith_single)
    LESS_EQ     reduce using rule 91 (arith_single)
    EQUAL       reduce using rule 91 (arith_single)
    NOT_EQ      reduce using rule 91 (arith_single)
    '+'         reduce using rule 91 (arith_single)
    '-'         reduce using rule 91 (arith_single)
    '*'         reduce using rule 91 (arith_single)
    '/'         reduce using rule 91 (arith_single)
    FILTER      reduce using rule 91 (arith_single)
    MAP         reduce using rule 91 (arith_single)
    ':'         reduce using rule 91 (arith_single)


State 253

   92 lst_single: '%' expression •

    ')'         reduce using rule 92 (lst_single)
    AND         reduce using rule 92 (lst_single)
    OR          reduce using rule 92 (lst_single)
    GREATER     reduce using rule 92 (lst_single)
    GREATER_EQ  reduce using rule 92 (lst_single)
    LESS        reduce using rule 92 (lst_single)
    LESS_EQ     reduce using rule 92 (lst_single)
    EQUAL       reduce using rule 92 (lst_single)
    NOT_EQ      reduce using rule 92 (lst_single)
    '+'         reduce using rule 92 (lst_single)
    '-'         reduce using rule 92 (lst_single)
    '*'         reduce using rule 92 (lst_single)
    '/'         reduce using rule 92 (lst_single)
    FILTER      reduce using rule 92 (lst_single)
    MAP         reduce using rule 92 (lst_single)
    ':'         reduce using rule 92 (lst_single)


State 254

   93 lst_single: '?' expression •

    ')'         reduce using rule 93 (lst_single)
    AND         reduce using rule 93 (lst_single)
    OR          reduce using rule 93 (lst_single)
    GREATER     reduce using rule 93 (lst_single)
    GREATER_EQ  reduce using rule 93 (lst_single)
    LESS        reduce using rule 93 (lst_single)
    LESS_EQ     reduce using rule 93 (lst_single)
    EQUAL       reduce using rule 93 (lst_single)
    NOT_EQ      reduce using rule 93 (lst_single)
    '+'         reduce using rule 93 (lst_single)
    '-'         reduce using rule 93 (lst_single)
    '*'         reduce using rule 93 (lst_single)
    '/'         reduce using rule 93 (lst_single)
    FILTER      reduce using rule 93 (lst_single)
    MAP         reduce using rule 93 (lst_single)
    ':'         reduce using rule 93 (lst_single)


State 255

   89 single_operation: '!' expression •

    ')'         reduce using rule 89 (single_operation)
    AND         reduce using rule 89 (single_operation)
    OR          reduce using rule 89 (single_operation)
    GREATER     reduce using rule 89 (single_operation)
    GREATER_EQ  reduce using rule 89 (single_operation)
    LESS        reduce using rule 89 (single_operation)
    LESS_EQ     reduce using rule 89 (single_operation)
    EQUAL       reduce using rule 89 (single_operation)
    NOT_EQ      reduce using rule 89 (single_operation)
    '+'         reduce using rule 89 (single_operation)
    '-'         reduce using rule 89 (single_operation)
    '*'         reduce using rule 89 (single_operation)
    '/'         reduce using rule 89 (single_operation)
    FILTER      reduce using rule 89 (single_operation)
    MAP         reduce using rule 89 (single_operation)
    ':'         reduce using rule 89 (single_operation)


State 256

   68 lst_binary: lst_binary FILTER • lst_binary

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    lst_binary        go to state 307
    arith_binary      go to state 180
    term              go to state 181
    expression        go to state 182
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 257

   69 lst_binary: lst_binary MAP • lst_binary

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    lst_binary        go to state 308
    arith_binary      go to state 180
    term              go to state 181
    expression        go to state 182
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 258

   70 lst_binary: lst_binary ':' • lst_binary

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    lst_binary        go to state 309
    arith_binary      go to state 180
    term              go to state 181
    expression        go to state 182
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 259

   72 arith_binary: arith_binary '+' • term

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    term              go to state 310
    expression        go to state 182
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 260

   73 arith_binary: arith_binary '-' • term

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    term              go to state 311
    expression        go to state 182
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 261

   75 term: term '*' • expression

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    expression        go to state 312
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 262

   76 term: term '/' • expression

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    expression        go to state 313
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 263

   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   66          | operation AND operation •
   67          | operation • OR operation

    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195
    EQUAL       shift, and go to state 196
    NOT_EQ      shift, and go to state 197

    ')'  reduce using rule 66 (operation)
    AND  reduce using rule 66 (operation)
    OR   reduce using rule 66 (operation)


State 264

   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation
   67          | operation OR operation •

    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195
    EQUAL       shift, and go to state 196
    NOT_EQ      shift, and go to state 197

    ')'  reduce using rule 67 (operation)
    AND  reduce using rule 67 (operation)
    OR   reduce using rule 67 (operation)


State 265

   60 operation: operation • GREATER operation
   60          | operation GREATER operation •
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    ')'         reduce using rule 60 (operation)
    AND         reduce using rule 60 (operation)
    OR          reduce using rule 60 (operation)
    GREATER     reduce using rule 60 (operation)
    GREATER_EQ  reduce using rule 60 (operation)
    LESS        reduce using rule 60 (operation)
    LESS_EQ     reduce using rule 60 (operation)
    EQUAL       reduce using rule 60 (operation)
    NOT_EQ      reduce using rule 60 (operation)


State 266

   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   61          | operation GREATER_EQ operation •
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    ')'         reduce using rule 61 (operation)
    AND         reduce using rule 61 (operation)
    OR          reduce using rule 61 (operation)
    GREATER     reduce using rule 61 (operation)
    GREATER_EQ  reduce using rule 61 (operation)
    LESS        reduce using rule 61 (operation)
    LESS_EQ     reduce using rule 61 (operation)
    EQUAL       reduce using rule 61 (operation)
    NOT_EQ      reduce using rule 61 (operation)


State 267

   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   62          | operation LESS operation •
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    ')'         reduce using rule 62 (operation)
    AND         reduce using rule 62 (operation)
    OR          reduce using rule 62 (operation)
    GREATER     reduce using rule 62 (operation)
    GREATER_EQ  reduce using rule 62 (operation)
    LESS        reduce using rule 62 (operation)
    LESS_EQ     reduce using rule 62 (operation)
    EQUAL       reduce using rule 62 (operation)
    NOT_EQ      reduce using rule 62 (operation)


State 268

   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   63          | operation LESS_EQ operation •
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    ')'         reduce using rule 63 (operation)
    AND         reduce using rule 63 (operation)
    OR          reduce using rule 63 (operation)
    GREATER     reduce using rule 63 (operation)
    GREATER_EQ  reduce using rule 63 (operation)
    LESS        reduce using rule 63 (operation)
    LESS_EQ     reduce using rule 63 (operation)
    EQUAL       reduce using rule 63 (operation)
    NOT_EQ      reduce using rule 63 (operation)


State 269

   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   64          | operation EQUAL operation •
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195

    ')'     reduce using rule 64 (operation)
    AND     reduce using rule 64 (operation)
    OR      reduce using rule 64 (operation)
    EQUAL   reduce using rule 64 (operation)
    NOT_EQ  reduce using rule 64 (operation)


State 270

   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   65          | operation NOT_EQ operation •
   66          | operation • AND operation
   67          | operation • OR operation

    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195

    ')'     reduce using rule 65 (operation)
    AND     reduce using rule 65 (operation)
    OR      reduce using rule 65 (operation)
    EQUAL   reduce using rule 65 (operation)
    NOT_EQ  reduce using rule 65 (operation)


State 271

   12 func_calling: ID '(' • $@2 calling_parameters $@3 ')'

    NUM_INT    reduce using rule 10 ($@2)
    NUM_FLOAT  reduce using rule 10 ($@2)
    NIL_CNST   reduce using rule 10 ($@2)
    ID         reduce using rule 10 ($@2)
    '('        reduce using rule 10 ($@2)
    ')'        reduce using rule 10 ($@2)
    '+'        reduce using rule 10 ($@2)
    '-'        reduce using rule 10 ($@2)
    '%'        reduce using rule 10 ($@2)
    '?'        reduce using rule 10 ($@2)
    '!'        reduce using rule 10 ($@2)

    $@2  go to state 314


State 272

   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation
   82 expression: '(' operation • ')'

    ')'         shift, and go to state 315
    AND         shift, and go to state 190
    OR          shift, and go to state 191
    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195
    EQUAL       shift, and go to state 196
    NOT_EQ      shift, and go to state 197


State 273

   90 arith_single: '+' expression •

    ')'         reduce using rule 90 (arith_single)
    ','         reduce using rule 90 (arith_single)
    AND         reduce using rule 90 (arith_single)
    OR          reduce using rule 90 (arith_single)
    GREATER     reduce using rule 90 (arith_single)
    GREATER_EQ  reduce using rule 90 (arith_single)
    LESS        reduce using rule 90 (arith_single)
    LESS_EQ     reduce using rule 90 (arith_single)
    EQUAL       reduce using rule 90 (arith_single)
    NOT_EQ      reduce using rule 90 (arith_single)
    '+'         reduce using rule 90 (arith_single)
    '-'         reduce using rule 90 (arith_single)
    '*'         reduce using rule 90 (arith_single)
    '/'         reduce using rule 90 (arith_single)
    FILTER      reduce using rule 90 (arith_single)
    MAP         reduce using rule 90 (arith_single)
    ':'         reduce using rule 90 (arith_single)


State 274

   91 arith_single: '-' expression •

    ')'         reduce using rule 91 (arith_single)
    ','         reduce using rule 91 (arith_single)
    AND         reduce using rule 91 (arith_single)
    OR          reduce using rule 91 (arith_single)
    GREATER     reduce using rule 91 (arith_single)
    GREATER_EQ  reduce using rule 91 (arith_single)
    LESS        reduce using rule 91 (arith_single)
    LESS_EQ     reduce using rule 91 (arith_single)
    EQUAL       reduce using rule 91 (arith_single)
    NOT_EQ      reduce using rule 91 (arith_single)
    '+'         reduce using rule 91 (arith_single)
    '-'         reduce using rule 91 (arith_single)
    '*'         reduce using rule 91 (arith_single)
    '/'         reduce using rule 91 (arith_single)
    FILTER      reduce using rule 91 (arith_single)
    MAP         reduce using rule 91 (arith_single)
    ':'         reduce using rule 91 (arith_single)


State 275

   92 lst_single: '%' expression •

    ')'         reduce using rule 92 (lst_single)
    ','         reduce using rule 92 (lst_single)
    AND         reduce using rule 92 (lst_single)
    OR          reduce using rule 92 (lst_single)
    GREATER     reduce using rule 92 (lst_single)
    GREATER_EQ  reduce using rule 92 (lst_single)
    LESS        reduce using rule 92 (lst_single)
    LESS_EQ     reduce using rule 92 (lst_single)
    EQUAL       reduce using rule 92 (lst_single)
    NOT_EQ      reduce using rule 92 (lst_single)
    '+'         reduce using rule 92 (lst_single)
    '-'         reduce using rule 92 (lst_single)
    '*'         reduce using rule 92 (lst_single)
    '/'         reduce using rule 92 (lst_single)
    FILTER      reduce using rule 92 (lst_single)
    MAP         reduce using rule 92 (lst_single)
    ':'         reduce using rule 92 (lst_single)


State 276

   93 lst_single: '?' expression •

    ')'         reduce using rule 93 (lst_single)
    ','         reduce using rule 93 (lst_single)
    AND         reduce using rule 93 (lst_single)
    OR          reduce using rule 93 (lst_single)
    GREATER     reduce using rule 93 (lst_single)
    GREATER_EQ  reduce using rule 93 (lst_single)
    LESS        reduce using rule 93 (lst_single)
    LESS_EQ     reduce using rule 93 (lst_single)
    EQUAL       reduce using rule 93 (lst_single)
    NOT_EQ      reduce using rule 93 (lst_single)
    '+'         reduce using rule 93 (lst_single)
    '-'         reduce using rule 93 (lst_single)
    '*'         reduce using rule 93 (lst_single)
    '/'         reduce using rule 93 (lst_single)
    FILTER      reduce using rule 93 (lst_single)
    MAP         reduce using rule 93 (lst_single)
    ':'         reduce using rule 93 (lst_single)


State 277

   89 single_operation: '!' expression •

    ')'         reduce using rule 89 (single_operation)
    ','         reduce using rule 89 (single_operation)
    AND         reduce using rule 89 (single_operation)
    OR          reduce using rule 89 (single_operation)
    GREATER     reduce using rule 89 (single_operation)
    GREATER_EQ  reduce using rule 89 (single_operation)
    LESS        reduce using rule 89 (single_operation)
    LESS_EQ     reduce using rule 89 (single_operation)
    EQUAL       reduce using rule 89 (single_operation)
    NOT_EQ      reduce using rule 89 (single_operation)
    '+'         reduce using rule 89 (single_operation)
    '-'         reduce using rule 89 (single_operation)
    '*'         reduce using rule 89 (single_operation)
    '/'         reduce using rule 89 (single_operation)
    FILTER      reduce using rule 89 (single_operation)
    MAP         reduce using rule 89 (single_operation)
    ':'         reduce using rule 89 (single_operation)


State 278

   68 lst_binary: lst_binary FILTER • lst_binary

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    iden              go to state 209
    lst_binary        go to state 316
    arith_binary      go to state 211
    term              go to state 212
    expression        go to state 213
    const             go to state 214
    number            go to state 215
    single_operation  go to state 216
    arith_single      go to state 217
    lst_single        go to state 218


State 279

   69 lst_binary: lst_binary MAP • lst_binary

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    iden              go to state 209
    lst_binary        go to state 317
    arith_binary      go to state 211
    term              go to state 212
    expression        go to state 213
    const             go to state 214
    number            go to state 215
    single_operation  go to state 216
    arith_single      go to state 217
    lst_single        go to state 218


State 280

   70 lst_binary: lst_binary ':' • lst_binary

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    iden              go to state 209
    lst_binary        go to state 318
    arith_binary      go to state 211
    term              go to state 212
    expression        go to state 213
    const             go to state 214
    number            go to state 215
    single_operation  go to state 216
    arith_single      go to state 217
    lst_single        go to state 218


State 281

   72 arith_binary: arith_binary '+' • term

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    iden              go to state 209
    term              go to state 319
    expression        go to state 213
    const             go to state 214
    number            go to state 215
    single_operation  go to state 216
    arith_single      go to state 217
    lst_single        go to state 218


State 282

   73 arith_binary: arith_binary '-' • term

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    iden              go to state 209
    term              go to state 320
    expression        go to state 213
    const             go to state 214
    number            go to state 215
    single_operation  go to state 216
    arith_single      go to state 217
    lst_single        go to state 218


State 283

   75 term: term '*' • expression

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    iden              go to state 209
    expression        go to state 321
    const             go to state 214
    number            go to state 215
    single_operation  go to state 216
    arith_single      go to state 217
    lst_single        go to state 218


State 284

   76 term: term '/' • expression

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    iden              go to state 209
    expression        go to state 322
    const             go to state 214
    number            go to state 215
    single_operation  go to state 216
    arith_single      go to state 217
    lst_single        go to state 218


State 285

   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   66          | operation AND operation •
   67          | operation • OR operation

    GREATER     shift, and go to state 221
    GREATER_EQ  shift, and go to state 222
    LESS        shift, and go to state 223
    LESS_EQ     shift, and go to state 224
    EQUAL       shift, and go to state 225
    NOT_EQ      shift, and go to state 226

    ')'  reduce using rule 66 (operation)
    ','  reduce using rule 66 (operation)
    AND  reduce using rule 66 (operation)
    OR   reduce using rule 66 (operation)


State 286

   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation
   67          | operation OR operation •

    GREATER     shift, and go to state 221
    GREATER_EQ  shift, and go to state 222
    LESS        shift, and go to state 223
    LESS_EQ     shift, and go to state 224
    EQUAL       shift, and go to state 225
    NOT_EQ      shift, and go to state 226

    ')'  reduce using rule 67 (operation)
    ','  reduce using rule 67 (operation)
    AND  reduce using rule 67 (operation)
    OR   reduce using rule 67 (operation)


State 287

   60 operation: operation • GREATER operation
   60          | operation GREATER operation •
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    ')'         reduce using rule 60 (operation)
    ','         reduce using rule 60 (operation)
    AND         reduce using rule 60 (operation)
    OR          reduce using rule 60 (operation)
    GREATER     reduce using rule 60 (operation)
    GREATER_EQ  reduce using rule 60 (operation)
    LESS        reduce using rule 60 (operation)
    LESS_EQ     reduce using rule 60 (operation)
    EQUAL       reduce using rule 60 (operation)
    NOT_EQ      reduce using rule 60 (operation)


State 288

   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   61          | operation GREATER_EQ operation •
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    ')'         reduce using rule 61 (operation)
    ','         reduce using rule 61 (operation)
    AND         reduce using rule 61 (operation)
    OR          reduce using rule 61 (operation)
    GREATER     reduce using rule 61 (operation)
    GREATER_EQ  reduce using rule 61 (operation)
    LESS        reduce using rule 61 (operation)
    LESS_EQ     reduce using rule 61 (operation)
    EQUAL       reduce using rule 61 (operation)
    NOT_EQ      reduce using rule 61 (operation)


State 289

   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   62          | operation LESS operation •
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    ')'         reduce using rule 62 (operation)
    ','         reduce using rule 62 (operation)
    AND         reduce using rule 62 (operation)
    OR          reduce using rule 62 (operation)
    GREATER     reduce using rule 62 (operation)
    GREATER_EQ  reduce using rule 62 (operation)
    LESS        reduce using rule 62 (operation)
    LESS_EQ     reduce using rule 62 (operation)
    EQUAL       reduce using rule 62 (operation)
    NOT_EQ      reduce using rule 62 (operation)


State 290

   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   63          | operation LESS_EQ operation •
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    ')'         reduce using rule 63 (operation)
    ','         reduce using rule 63 (operation)
    AND         reduce using rule 63 (operation)
    OR          reduce using rule 63 (operation)
    GREATER     reduce using rule 63 (operation)
    GREATER_EQ  reduce using rule 63 (operation)
    LESS        reduce using rule 63 (operation)
    LESS_EQ     reduce using rule 63 (operation)
    EQUAL       reduce using rule 63 (operation)
    NOT_EQ      reduce using rule 63 (operation)


State 291

   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   64          | operation EQUAL operation •
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    GREATER     shift, and go to state 221
    GREATER_EQ  shift, and go to state 222
    LESS        shift, and go to state 223
    LESS_EQ     shift, and go to state 224

    ')'     reduce using rule 64 (operation)
    ','     reduce using rule 64 (operation)
    AND     reduce using rule 64 (operation)
    OR      reduce using rule 64 (operation)
    EQUAL   reduce using rule 64 (operation)
    NOT_EQ  reduce using rule 64 (operation)


State 292

   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   65          | operation NOT_EQ operation •
   66          | operation • AND operation
   67          | operation • OR operation

    GREATER     shift, and go to state 221
    GREATER_EQ  shift, and go to state 222
    LESS        shift, and go to state 223
    LESS_EQ     shift, and go to state 224

    ')'     reduce using rule 65 (operation)
    ','     reduce using rule 65 (operation)
    AND     reduce using rule 65 (operation)
    OR      reduce using rule 65 (operation)
    EQUAL   reduce using rule 65 (operation)
    NOT_EQ  reduce using rule 65 (operation)


State 293

   40 command: error ';' •

    error           reduce using rule 40 (command)
    NUM_INT         reduce using rule 40 (command)
    NUM_FLOAT       reduce using rule 40 (command)
    NIL_CNST        reduce using rule 40 (command)
    ID              reduce using rule 40 (command)
    RETURN_STM      reduce using rule 40 (command)
    T_INT           reduce using rule 40 (command)
    T_FLOAT         reduce using rule 40 (command)
    IF_STMT         reduce using rule 40 (command)
    ELSE_STMT       reduce using rule 40 (command)
    FOR_STMT        reduce using rule 40 (command)
    OUTPUT_WRITE    reduce using rule 40 (command)
    OUTPUT_WRITELN  reduce using rule 40 (command)
    INPUT_READ      reduce using rule 40 (command)
    '('             reduce using rule 40 (command)
    '{'             reduce using rule 40 (command)
    '}'             reduce using rule 40 (command)
    '+'             reduce using rule 40 (command)
    '-'             reduce using rule 40 (command)
    '%'             reduce using rule 40 (command)
    '?'             reduce using rule 40 (command)
    '!'             reduce using rule 40 (command)


State 294

   46 return_stmt: RETURN_STM operation • ';'
   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    ';'         shift, and go to state 323
    AND         shift, and go to state 89
    OR          shift, and go to state 90
    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94
    EQUAL       shift, and go to state 95
    NOT_EQ      shift, and go to state 96


State 295

   44 conditional_stmt: IF_STMT '(' • operation ')' command
   45                 | IF_STMT '(' • operation ')' command ELSE_STMT command

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    operation         go to state 324
    lst_binary        go to state 179
    arith_binary      go to state 180
    term              go to state 181
    expression        go to state 182
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 296

   47 iteration: FOR_STMT '(' • loop_condition ')' command

    ID  shift, and go to state 107

    ';'  reduce using rule 50 (update_stmt)

    init_stmt       go to state 108
    loop_condition  go to state 325
    update_stmt     go to state 110
    iden            go to state 111


State 297

   53 output: OUTPUT_WRITE '(' • operation ')' ';'
   55       | OUTPUT_WRITE '(' • STRING ')' ';'

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    STRING     shift, and go to state 326
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    operation         go to state 327
    lst_binary        go to state 179
    arith_binary      go to state 180
    term              go to state 181
    expression        go to state 182
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 298

   54 output: OUTPUT_WRITELN '(' • operation ')' ';'
   56       | OUTPUT_WRITELN '(' • STRING ')' ';'

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    STRING     shift, and go to state 328
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    operation         go to state 329
    lst_binary        go to state 179
    arith_binary      go to state 180
    term              go to state 181
    expression        go to state 182
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 299

   57 input: INPUT_READ '(' • iden ')' ';'

    ID  shift, and go to state 189

    iden  go to state 330


State 300

   13 var_declaration: unq_declaration ';' •

    error           reduce using rule 13 (var_declaration)
    NUM_INT         reduce using rule 13 (var_declaration)
    NUM_FLOAT       reduce using rule 13 (var_declaration)
    NIL_CNST        reduce using rule 13 (var_declaration)
    ID              reduce using rule 13 (var_declaration)
    RETURN_STM      reduce using rule 13 (var_declaration)
    T_INT           reduce using rule 13 (var_declaration)
    T_FLOAT         reduce using rule 13 (var_declaration)
    IF_STMT         reduce using rule 13 (var_declaration)
    ELSE_STMT       reduce using rule 13 (var_declaration)
    FOR_STMT        reduce using rule 13 (var_declaration)
    OUTPUT_WRITE    reduce using rule 13 (var_declaration)
    OUTPUT_WRITELN  reduce using rule 13 (var_declaration)
    INPUT_READ      reduce using rule 13 (var_declaration)
    '('             reduce using rule 13 (var_declaration)
    '{'             reduce using rule 13 (var_declaration)
    '}'             reduce using rule 13 (var_declaration)
    '+'             reduce using rule 13 (var_declaration)
    '-'             reduce using rule 13 (var_declaration)
    '%'             reduce using rule 13 (var_declaration)
    '?'             reduce using rule 13 (var_declaration)
    '!'             reduce using rule 13 (var_declaration)


State 301

   38 command: $@4 '{' • block_commands '}'

    error           shift, and go to state 27
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 32
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 33
    FOR_STMT        shift, and go to state 34
    OUTPUT_WRITE    shift, and go to state 35
    OUTPUT_WRITELN  shift, and go to state 36
    INPUT_READ      shift, and go to state 37
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 37 ($@4)

    func_calling      go to state 44
    var_declaration   go to state 45
    unq_declaration   go to state 46
    type              go to state 165
    type_lst          go to state 11
    type_number       go to state 12
    block_commands    go to state 331
    command           go to state 48
    $@4               go to state 49
    init_variable     go to state 50
    init_stmt         go to state 51
    conditional_stmt  go to state 52
    return_stmt       go to state 53
    iteration         go to state 54
    output            go to state 55
    input             go to state 56
    iden              go to state 57
    operation         go to state 58
    lst_binary        go to state 59
    arith_binary      go to state 60
    term              go to state 61
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 302

   42 init_variable: init_stmt ';' •

    error           reduce using rule 42 (init_variable)
    NUM_INT         reduce using rule 42 (init_variable)
    NUM_FLOAT       reduce using rule 42 (init_variable)
    NIL_CNST        reduce using rule 42 (init_variable)
    ID              reduce using rule 42 (init_variable)
    RETURN_STM      reduce using rule 42 (init_variable)
    T_INT           reduce using rule 42 (init_variable)
    T_FLOAT         reduce using rule 42 (init_variable)
    IF_STMT         reduce using rule 42 (init_variable)
    ELSE_STMT       reduce using rule 42 (init_variable)
    FOR_STMT        reduce using rule 42 (init_variable)
    OUTPUT_WRITE    reduce using rule 42 (init_variable)
    OUTPUT_WRITELN  reduce using rule 42 (init_variable)
    INPUT_READ      reduce using rule 42 (init_variable)
    '('             reduce using rule 42 (init_variable)
    '{'             reduce using rule 42 (init_variable)
    '}'             reduce using rule 42 (init_variable)
    '+'             reduce using rule 42 (init_variable)
    '-'             reduce using rule 42 (init_variable)
    '%'             reduce using rule 42 (init_variable)
    '?'             reduce using rule 42 (init_variable)
    '!'             reduce using rule 42 (init_variable)


State 303

   39 command: operation ';' •

    error           reduce using rule 39 (command)
    NUM_INT         reduce using rule 39 (command)
    NUM_FLOAT       reduce using rule 39 (command)
    NIL_CNST        reduce using rule 39 (command)
    ID              reduce using rule 39 (command)
    RETURN_STM      reduce using rule 39 (command)
    T_INT           reduce using rule 39 (command)
    T_FLOAT         reduce using rule 39 (command)
    IF_STMT         reduce using rule 39 (command)
    ELSE_STMT       reduce using rule 39 (command)
    FOR_STMT        reduce using rule 39 (command)
    OUTPUT_WRITE    reduce using rule 39 (command)
    OUTPUT_WRITELN  reduce using rule 39 (command)
    INPUT_READ      reduce using rule 39 (command)
    '('             reduce using rule 39 (command)
    '{'             reduce using rule 39 (command)
    '}'             reduce using rule 39 (command)
    '+'             reduce using rule 39 (command)
    '-'             reduce using rule 39 (command)
    '%'             reduce using rule 39 (command)
    '?'             reduce using rule 39 (command)
    '!'             reduce using rule 39 (command)


State 304

   43 init_stmt: iden '=' • operation

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    iden              go to state 178
    operation         go to state 332
    lst_binary        go to state 179
    arith_binary      go to state 180
    term              go to state 181
    expression        go to state 182
    const             go to state 183
    number            go to state 184
    single_operation  go to state 185
    arith_single      go to state 186
    lst_single        go to state 187


State 305

   12 func_calling: ID '(' $@2 • calling_parameters $@3 ')'

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    ')'  reduce using rule 25 (calling_parameters)

    func_calling            go to state 208
    calling_parameters      go to state 333
    lst_calling_parameters  go to state 136
    iden                    go to state 209
    operation               go to state 137
    lst_binary              go to state 210
    arith_binary            go to state 211
    term                    go to state 212
    expression              go to state 213
    const                   go to state 214
    number                  go to state 215
    single_operation        go to state 216
    arith_single            go to state 217
    lst_single              go to state 218


State 306

   82 expression: '(' operation ')' •

    ')'         reduce using rule 82 (expression)
    AND         reduce using rule 82 (expression)
    OR          reduce using rule 82 (expression)
    GREATER     reduce using rule 82 (expression)
    GREATER_EQ  reduce using rule 82 (expression)
    LESS        reduce using rule 82 (expression)
    LESS_EQ     reduce using rule 82 (expression)
    EQUAL       reduce using rule 82 (expression)
    NOT_EQ      reduce using rule 82 (expression)
    '+'         reduce using rule 82 (expression)
    '-'         reduce using rule 82 (expression)
    '*'         reduce using rule 82 (expression)
    '/'         reduce using rule 82 (expression)
    FILTER      reduce using rule 82 (expression)
    MAP         reduce using rule 82 (expression)
    ':'         reduce using rule 82 (expression)


State 307

   68 lst_binary: lst_binary • FILTER lst_binary
   68           | lst_binary FILTER lst_binary •
   69           | lst_binary • MAP lst_binary
   70           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 256
    MAP     shift, and go to state 257
    ':'     shift, and go to state 258

    ')'         reduce using rule 68 (lst_binary)
    AND         reduce using rule 68 (lst_binary)
    OR          reduce using rule 68 (lst_binary)
    GREATER     reduce using rule 68 (lst_binary)
    GREATER_EQ  reduce using rule 68 (lst_binary)
    LESS        reduce using rule 68 (lst_binary)
    LESS_EQ     reduce using rule 68 (lst_binary)
    EQUAL       reduce using rule 68 (lst_binary)
    NOT_EQ      reduce using rule 68 (lst_binary)


State 308

   68 lst_binary: lst_binary • FILTER lst_binary
   69           | lst_binary • MAP lst_binary
   69           | lst_binary MAP lst_binary •
   70           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 256
    MAP     shift, and go to state 257
    ':'     shift, and go to state 258

    ')'         reduce using rule 69 (lst_binary)
    AND         reduce using rule 69 (lst_binary)
    OR          reduce using rule 69 (lst_binary)
    GREATER     reduce using rule 69 (lst_binary)
    GREATER_EQ  reduce using rule 69 (lst_binary)
    LESS        reduce using rule 69 (lst_binary)
    LESS_EQ     reduce using rule 69 (lst_binary)
    EQUAL       reduce using rule 69 (lst_binary)
    NOT_EQ      reduce using rule 69 (lst_binary)


State 309

   68 lst_binary: lst_binary • FILTER lst_binary
   69           | lst_binary • MAP lst_binary
   70           | lst_binary • ':' lst_binary
   70           | lst_binary ':' lst_binary •

    FILTER  shift, and go to state 256
    MAP     shift, and go to state 257
    ':'     shift, and go to state 258

    ')'         reduce using rule 70 (lst_binary)
    AND         reduce using rule 70 (lst_binary)
    OR          reduce using rule 70 (lst_binary)
    GREATER     reduce using rule 70 (lst_binary)
    GREATER_EQ  reduce using rule 70 (lst_binary)
    LESS        reduce using rule 70 (lst_binary)
    LESS_EQ     reduce using rule 70 (lst_binary)
    EQUAL       reduce using rule 70 (lst_binary)
    NOT_EQ      reduce using rule 70 (lst_binary)


State 310

   72 arith_binary: arith_binary '+' term •
   75 term: term • '*' expression
   76     | term • '/' expression

    '*'  shift, and go to state 261
    '/'  shift, and go to state 262

    ')'         reduce using rule 72 (arith_binary)
    AND         reduce using rule 72 (arith_binary)
    OR          reduce using rule 72 (arith_binary)
    GREATER     reduce using rule 72 (arith_binary)
    GREATER_EQ  reduce using rule 72 (arith_binary)
    LESS        reduce using rule 72 (arith_binary)
    LESS_EQ     reduce using rule 72 (arith_binary)
    EQUAL       reduce using rule 72 (arith_binary)
    NOT_EQ      reduce using rule 72 (arith_binary)
    '+'         reduce using rule 72 (arith_binary)
    '-'         reduce using rule 72 (arith_binary)
    FILTER      reduce using rule 72 (arith_binary)
    MAP         reduce using rule 72 (arith_binary)
    ':'         reduce using rule 72 (arith_binary)


State 311

   73 arith_binary: arith_binary '-' term •
   75 term: term • '*' expression
   76     | term • '/' expression

    '*'  shift, and go to state 261
    '/'  shift, and go to state 262

    ')'         reduce using rule 73 (arith_binary)
    AND         reduce using rule 73 (arith_binary)
    OR          reduce using rule 73 (arith_binary)
    GREATER     reduce using rule 73 (arith_binary)
    GREATER_EQ  reduce using rule 73 (arith_binary)
    LESS        reduce using rule 73 (arith_binary)
    LESS_EQ     reduce using rule 73 (arith_binary)
    EQUAL       reduce using rule 73 (arith_binary)
    NOT_EQ      reduce using rule 73 (arith_binary)
    '+'         reduce using rule 73 (arith_binary)
    '-'         reduce using rule 73 (arith_binary)
    FILTER      reduce using rule 73 (arith_binary)
    MAP         reduce using rule 73 (arith_binary)
    ':'         reduce using rule 73 (arith_binary)


State 312

   75 term: term '*' expression •

    ')'         reduce using rule 75 (term)
    AND         reduce using rule 75 (term)
    OR          reduce using rule 75 (term)
    GREATER     reduce using rule 75 (term)
    GREATER_EQ  reduce using rule 75 (term)
    LESS        reduce using rule 75 (term)
    LESS_EQ     reduce using rule 75 (term)
    EQUAL       reduce using rule 75 (term)
    NOT_EQ      reduce using rule 75 (term)
    '+'         reduce using rule 75 (term)
    '-'         reduce using rule 75 (term)
    '*'         reduce using rule 75 (term)
    '/'         reduce using rule 75 (term)
    FILTER      reduce using rule 75 (term)
    MAP         reduce using rule 75 (term)
    ':'         reduce using rule 75 (term)


State 313

   76 term: term '/' expression •

    ')'         reduce using rule 76 (term)
    AND         reduce using rule 76 (term)
    OR          reduce using rule 76 (term)
    GREATER     reduce using rule 76 (term)
    GREATER_EQ  reduce using rule 76 (term)
    LESS        reduce using rule 76 (term)
    LESS_EQ     reduce using rule 76 (term)
    EQUAL       reduce using rule 76 (term)
    NOT_EQ      reduce using rule 76 (term)
    '+'         reduce using rule 76 (term)
    '-'         reduce using rule 76 (term)
    '*'         reduce using rule 76 (term)
    '/'         reduce using rule 76 (term)
    FILTER      reduce using rule 76 (term)
    MAP         reduce using rule 76 (term)
    ':'         reduce using rule 76 (term)


State 314

   12 func_calling: ID '(' $@2 • calling_parameters $@3 ')'

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    ')'  reduce using rule 25 (calling_parameters)

    func_calling            go to state 208
    calling_parameters      go to state 334
    lst_calling_parameters  go to state 136
    iden                    go to state 209
    operation               go to state 137
    lst_binary              go to state 210
    arith_binary            go to state 211
    term                    go to state 212
    expression              go to state 213
    const                   go to state 214
    number                  go to state 215
    single_operation        go to state 216
    arith_single            go to state 217
    lst_single              go to state 218


State 315

   82 expression: '(' operation ')' •

    ')'         reduce using rule 82 (expression)
    ','         reduce using rule 82 (expression)
    AND         reduce using rule 82 (expression)
    OR          reduce using rule 82 (expression)
    GREATER     reduce using rule 82 (expression)
    GREATER_EQ  reduce using rule 82 (expression)
    LESS        reduce using rule 82 (expression)
    LESS_EQ     reduce using rule 82 (expression)
    EQUAL       reduce using rule 82 (expression)
    NOT_EQ      reduce using rule 82 (expression)
    '+'         reduce using rule 82 (expression)
    '-'         reduce using rule 82 (expression)
    '*'         reduce using rule 82 (expression)
    '/'         reduce using rule 82 (expression)
    FILTER      reduce using rule 82 (expression)
    MAP         reduce using rule 82 (expression)
    ':'         reduce using rule 82 (expression)


State 316

   68 lst_binary: lst_binary • FILTER lst_binary
   68           | lst_binary FILTER lst_binary •
   69           | lst_binary • MAP lst_binary
   70           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 278
    MAP     shift, and go to state 279
    ':'     shift, and go to state 280

    ')'         reduce using rule 68 (lst_binary)
    ','         reduce using rule 68 (lst_binary)
    AND         reduce using rule 68 (lst_binary)
    OR          reduce using rule 68 (lst_binary)
    GREATER     reduce using rule 68 (lst_binary)
    GREATER_EQ  reduce using rule 68 (lst_binary)
    LESS        reduce using rule 68 (lst_binary)
    LESS_EQ     reduce using rule 68 (lst_binary)
    EQUAL       reduce using rule 68 (lst_binary)
    NOT_EQ      reduce using rule 68 (lst_binary)


State 317

   68 lst_binary: lst_binary • FILTER lst_binary
   69           | lst_binary • MAP lst_binary
   69           | lst_binary MAP lst_binary •
   70           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 278
    MAP     shift, and go to state 279
    ':'     shift, and go to state 280

    ')'         reduce using rule 69 (lst_binary)
    ','         reduce using rule 69 (lst_binary)
    AND         reduce using rule 69 (lst_binary)
    OR          reduce using rule 69 (lst_binary)
    GREATER     reduce using rule 69 (lst_binary)
    GREATER_EQ  reduce using rule 69 (lst_binary)
    LESS        reduce using rule 69 (lst_binary)
    LESS_EQ     reduce using rule 69 (lst_binary)
    EQUAL       reduce using rule 69 (lst_binary)
    NOT_EQ      reduce using rule 69 (lst_binary)


State 318

   68 lst_binary: lst_binary • FILTER lst_binary
   69           | lst_binary • MAP lst_binary
   70           | lst_binary • ':' lst_binary
   70           | lst_binary ':' lst_binary •

    FILTER  shift, and go to state 278
    MAP     shift, and go to state 279
    ':'     shift, and go to state 280

    ')'         reduce using rule 70 (lst_binary)
    ','         reduce using rule 70 (lst_binary)
    AND         reduce using rule 70 (lst_binary)
    OR          reduce using rule 70 (lst_binary)
    GREATER     reduce using rule 70 (lst_binary)
    GREATER_EQ  reduce using rule 70 (lst_binary)
    LESS        reduce using rule 70 (lst_binary)
    LESS_EQ     reduce using rule 70 (lst_binary)
    EQUAL       reduce using rule 70 (lst_binary)
    NOT_EQ      reduce using rule 70 (lst_binary)


State 319

   72 arith_binary: arith_binary '+' term •
   75 term: term • '*' expression
   76     | term • '/' expression

    '*'  shift, and go to state 283
    '/'  shift, and go to state 284

    ')'         reduce using rule 72 (arith_binary)
    ','         reduce using rule 72 (arith_binary)
    AND         reduce using rule 72 (arith_binary)
    OR          reduce using rule 72 (arith_binary)
    GREATER     reduce using rule 72 (arith_binary)
    GREATER_EQ  reduce using rule 72 (arith_binary)
    LESS        reduce using rule 72 (arith_binary)
    LESS_EQ     reduce using rule 72 (arith_binary)
    EQUAL       reduce using rule 72 (arith_binary)
    NOT_EQ      reduce using rule 72 (arith_binary)
    '+'         reduce using rule 72 (arith_binary)
    '-'         reduce using rule 72 (arith_binary)
    FILTER      reduce using rule 72 (arith_binary)
    MAP         reduce using rule 72 (arith_binary)
    ':'         reduce using rule 72 (arith_binary)


State 320

   73 arith_binary: arith_binary '-' term •
   75 term: term • '*' expression
   76     | term • '/' expression

    '*'  shift, and go to state 283
    '/'  shift, and go to state 284

    ')'         reduce using rule 73 (arith_binary)
    ','         reduce using rule 73 (arith_binary)
    AND         reduce using rule 73 (arith_binary)
    OR          reduce using rule 73 (arith_binary)
    GREATER     reduce using rule 73 (arith_binary)
    GREATER_EQ  reduce using rule 73 (arith_binary)
    LESS        reduce using rule 73 (arith_binary)
    LESS_EQ     reduce using rule 73 (arith_binary)
    EQUAL       reduce using rule 73 (arith_binary)
    NOT_EQ      reduce using rule 73 (arith_binary)
    '+'         reduce using rule 73 (arith_binary)
    '-'         reduce using rule 73 (arith_binary)
    FILTER      reduce using rule 73 (arith_binary)
    MAP         reduce using rule 73 (arith_binary)
    ':'         reduce using rule 73 (arith_binary)


State 321

   75 term: term '*' expression •

    ')'         reduce using rule 75 (term)
    ','         reduce using rule 75 (term)
    AND         reduce using rule 75 (term)
    OR          reduce using rule 75 (term)
    GREATER     reduce using rule 75 (term)
    GREATER_EQ  reduce using rule 75 (term)
    LESS        reduce using rule 75 (term)
    LESS_EQ     reduce using rule 75 (term)
    EQUAL       reduce using rule 75 (term)
    NOT_EQ      reduce using rule 75 (term)
    '+'         reduce using rule 75 (term)
    '-'         reduce using rule 75 (term)
    '*'         reduce using rule 75 (term)
    '/'         reduce using rule 75 (term)
    FILTER      reduce using rule 75 (term)
    MAP         reduce using rule 75 (term)
    ':'         reduce using rule 75 (term)


State 322

   76 term: term '/' expression •

    ')'         reduce using rule 76 (term)
    ','         reduce using rule 76 (term)
    AND         reduce using rule 76 (term)
    OR          reduce using rule 76 (term)
    GREATER     reduce using rule 76 (term)
    GREATER_EQ  reduce using rule 76 (term)
    LESS        reduce using rule 76 (term)
    LESS_EQ     reduce using rule 76 (term)
    EQUAL       reduce using rule 76 (term)
    NOT_EQ      reduce using rule 76 (term)
    '+'         reduce using rule 76 (term)
    '-'         reduce using rule 76 (term)
    '*'         reduce using rule 76 (term)
    '/'         reduce using rule 76 (term)
    FILTER      reduce using rule 76 (term)
    MAP         reduce using rule 76 (term)
    ':'         reduce using rule 76 (term)


State 323

   46 return_stmt: RETURN_STM operation ';' •

    error           reduce using rule 46 (return_stmt)
    NUM_INT         reduce using rule 46 (return_stmt)
    NUM_FLOAT       reduce using rule 46 (return_stmt)
    NIL_CNST        reduce using rule 46 (return_stmt)
    ID              reduce using rule 46 (return_stmt)
    RETURN_STM      reduce using rule 46 (return_stmt)
    T_INT           reduce using rule 46 (return_stmt)
    T_FLOAT         reduce using rule 46 (return_stmt)
    IF_STMT         reduce using rule 46 (return_stmt)
    ELSE_STMT       reduce using rule 46 (return_stmt)
    FOR_STMT        reduce using rule 46 (return_stmt)
    OUTPUT_WRITE    reduce using rule 46 (return_stmt)
    OUTPUT_WRITELN  reduce using rule 46 (return_stmt)
    INPUT_READ      reduce using rule 46 (return_stmt)
    '('             reduce using rule 46 (return_stmt)
    '{'             reduce using rule 46 (return_stmt)
    '}'             reduce using rule 46 (return_stmt)
    '+'             reduce using rule 46 (return_stmt)
    '-'             reduce using rule 46 (return_stmt)
    '%'             reduce using rule 46 (return_stmt)
    '?'             reduce using rule 46 (return_stmt)
    '!'             reduce using rule 46 (return_stmt)


State 324

   44 conditional_stmt: IF_STMT '(' operation • ')' command
   45                 | IF_STMT '(' operation • ')' command ELSE_STMT command
   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    ')'         shift, and go to state 335
    AND         shift, and go to state 190
    OR          shift, and go to state 191
    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195
    EQUAL       shift, and go to state 196
    NOT_EQ      shift, and go to state 197


State 325

   47 iteration: FOR_STMT '(' loop_condition • ')' command

    ')'  shift, and go to state 336


State 326

   55 output: OUTPUT_WRITE '(' STRING • ')' ';'

    ')'  shift, and go to state 337


State 327

   53 output: OUTPUT_WRITE '(' operation • ')' ';'
   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    ')'         shift, and go to state 338
    AND         shift, and go to state 190
    OR          shift, and go to state 191
    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195
    EQUAL       shift, and go to state 196
    NOT_EQ      shift, and go to state 197


State 328

   56 output: OUTPUT_WRITELN '(' STRING • ')' ';'

    ')'  shift, and go to state 339


State 329

   54 output: OUTPUT_WRITELN '(' operation • ')' ';'
   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    ')'         shift, and go to state 340
    AND         shift, and go to state 190
    OR          shift, and go to state 191
    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195
    EQUAL       shift, and go to state 196
    NOT_EQ      shift, and go to state 197


State 330

   57 input: INPUT_READ '(' iden • ')' ';'

    ')'  shift, and go to state 341


State 331

   38 command: $@4 '{' block_commands • '}'

    '}'  shift, and go to state 342


State 332

   43 init_stmt: iden '=' operation •
   60 operation: operation • GREATER operation
   61          | operation • GREATER_EQ operation
   62          | operation • LESS operation
   63          | operation • LESS_EQ operation
   64          | operation • EQUAL operation
   65          | operation • NOT_EQ operation
   66          | operation • AND operation
   67          | operation • OR operation

    AND         shift, and go to state 190
    OR          shift, and go to state 191
    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195
    EQUAL       shift, and go to state 196
    NOT_EQ      shift, and go to state 197

    ')'  reduce using rule 43 (init_stmt)


State 333

   12 func_calling: ID '(' $@2 calling_parameters • $@3 ')'

    ')'  reduce using rule 11 ($@3)

    $@3  go to state 343


State 334

   12 func_calling: ID '(' $@2 calling_parameters • $@3 ')'

    ')'  reduce using rule 11 ($@3)

    $@3  go to state 344


State 335

   44 conditional_stmt: IF_STMT '(' operation ')' • command
   45                 | IF_STMT '(' operation ')' • command ELSE_STMT command

    error           shift, and go to state 227
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 228
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 229
    FOR_STMT        shift, and go to state 230
    OUTPUT_WRITE    shift, and go to state 231
    OUTPUT_WRITELN  shift, and go to state 232
    INPUT_READ      shift, and go to state 233
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 37 ($@4)

    func_calling      go to state 44
    var_declaration   go to state 234
    unq_declaration   go to state 235
    type              go to state 165
    type_lst          go to state 11
    type_number       go to state 12
    command           go to state 345
    $@4               go to state 236
    init_variable     go to state 237
    init_stmt         go to state 238
    conditional_stmt  go to state 239
    return_stmt       go to state 240
    iteration         go to state 241
    output            go to state 242
    input             go to state 243
    iden              go to state 57
    operation         go to state 244
    lst_binary        go to state 59
    arith_binary      go to state 60
    term              go to state 61
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 336

   47 iteration: FOR_STMT '(' loop_condition ')' • command

    error           shift, and go to state 227
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 228
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 229
    FOR_STMT        shift, and go to state 230
    OUTPUT_WRITE    shift, and go to state 231
    OUTPUT_WRITELN  shift, and go to state 232
    INPUT_READ      shift, and go to state 233
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 37 ($@4)

    func_calling      go to state 44
    var_declaration   go to state 234
    unq_declaration   go to state 235
    type              go to state 165
    type_lst          go to state 11
    type_number       go to state 12
    command           go to state 346
    $@4               go to state 236
    init_variable     go to state 237
    init_stmt         go to state 238
    conditional_stmt  go to state 239
    return_stmt       go to state 240
    iteration         go to state 241
    output            go to state 242
    input             go to state 243
    iden              go to state 57
    operation         go to state 244
    lst_binary        go to state 59
    arith_binary      go to state 60
    term              go to state 61
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 337

   55 output: OUTPUT_WRITE '(' STRING ')' • ';'

    ';'  shift, and go to state 347


State 338

   53 output: OUTPUT_WRITE '(' operation ')' • ';'

    ';'  shift, and go to state 348


State 339

   56 output: OUTPUT_WRITELN '(' STRING ')' • ';'

    ';'  shift, and go to state 349


State 340

   54 output: OUTPUT_WRITELN '(' operation ')' • ';'

    ';'  shift, and go to state 350


State 341

   57 input: INPUT_READ '(' iden ')' • ';'

    ';'  shift, and go to state 351


State 342

   38 command: $@4 '{' block_commands '}' •

    error           reduce using rule 38 (command)
    NUM_INT         reduce using rule 38 (command)
    NUM_FLOAT       reduce using rule 38 (command)
    NIL_CNST        reduce using rule 38 (command)
    ID              reduce using rule 38 (command)
    RETURN_STM      reduce using rule 38 (command)
    T_INT           reduce using rule 38 (command)
    T_FLOAT         reduce using rule 38 (command)
    IF_STMT         reduce using rule 38 (command)
    ELSE_STMT       reduce using rule 38 (command)
    FOR_STMT        reduce using rule 38 (command)
    OUTPUT_WRITE    reduce using rule 38 (command)
    OUTPUT_WRITELN  reduce using rule 38 (command)
    INPUT_READ      reduce using rule 38 (command)
    '('             reduce using rule 38 (command)
    '{'             reduce using rule 38 (command)
    '}'             reduce using rule 38 (command)
    '+'             reduce using rule 38 (command)
    '-'             reduce using rule 38 (command)
    '%'             reduce using rule 38 (command)
    '?'             reduce using rule 38 (command)
    '!'             reduce using rule 38 (command)


State 343

   12 func_calling: ID '(' $@2 calling_parameters $@3 • ')'

    ')'  shift, and go to state 352


State 344

   12 func_calling: ID '(' $@2 calling_parameters $@3 • ')'

    ')'  shift, and go to state 353


State 345

   44 conditional_stmt: IF_STMT '(' operation ')' command •
   45                 | IF_STMT '(' operation ')' command • ELSE_STMT command

    ELSE_STMT  shift, and go to state 354

    error           reduce using rule 44 (conditional_stmt)
    NUM_INT         reduce using rule 44 (conditional_stmt)
    NUM_FLOAT       reduce using rule 44 (conditional_stmt)
    NIL_CNST        reduce using rule 44 (conditional_stmt)
    ID              reduce using rule 44 (conditional_stmt)
    RETURN_STM      reduce using rule 44 (conditional_stmt)
    T_INT           reduce using rule 44 (conditional_stmt)
    T_FLOAT         reduce using rule 44 (conditional_stmt)
    IF_STMT         reduce using rule 44 (conditional_stmt)
    FOR_STMT        reduce using rule 44 (conditional_stmt)
    OUTPUT_WRITE    reduce using rule 44 (conditional_stmt)
    OUTPUT_WRITELN  reduce using rule 44 (conditional_stmt)
    INPUT_READ      reduce using rule 44 (conditional_stmt)
    '('             reduce using rule 44 (conditional_stmt)
    '{'             reduce using rule 44 (conditional_stmt)
    '}'             reduce using rule 44 (conditional_stmt)
    '+'             reduce using rule 44 (conditional_stmt)
    '-'             reduce using rule 44 (conditional_stmt)
    '%'             reduce using rule 44 (conditional_stmt)
    '?'             reduce using rule 44 (conditional_stmt)
    '!'             reduce using rule 44 (conditional_stmt)


State 346

   47 iteration: FOR_STMT '(' loop_condition ')' command •

    error           reduce using rule 47 (iteration)
    NUM_INT         reduce using rule 47 (iteration)
    NUM_FLOAT       reduce using rule 47 (iteration)
    NIL_CNST        reduce using rule 47 (iteration)
    ID              reduce using rule 47 (iteration)
    RETURN_STM      reduce using rule 47 (iteration)
    T_INT           reduce using rule 47 (iteration)
    T_FLOAT         reduce using rule 47 (iteration)
    IF_STMT         reduce using rule 47 (iteration)
    ELSE_STMT       reduce using rule 47 (iteration)
    FOR_STMT        reduce using rule 47 (iteration)
    OUTPUT_WRITE    reduce using rule 47 (iteration)
    OUTPUT_WRITELN  reduce using rule 47 (iteration)
    INPUT_READ      reduce using rule 47 (iteration)
    '('             reduce using rule 47 (iteration)
    '{'             reduce using rule 47 (iteration)
    '}'             reduce using rule 47 (iteration)
    '+'             reduce using rule 47 (iteration)
    '-'             reduce using rule 47 (iteration)
    '%'             reduce using rule 47 (iteration)
    '?'             reduce using rule 47 (iteration)
    '!'             reduce using rule 47 (iteration)


State 347

   55 output: OUTPUT_WRITE '(' STRING ')' ';' •

    error           reduce using rule 55 (output)
    NUM_INT         reduce using rule 55 (output)
    NUM_FLOAT       reduce using rule 55 (output)
    NIL_CNST        reduce using rule 55 (output)
    ID              reduce using rule 55 (output)
    RETURN_STM      reduce using rule 55 (output)
    T_INT           reduce using rule 55 (output)
    T_FLOAT         reduce using rule 55 (output)
    IF_STMT         reduce using rule 55 (output)
    ELSE_STMT       reduce using rule 55 (output)
    FOR_STMT        reduce using rule 55 (output)
    OUTPUT_WRITE    reduce using rule 55 (output)
    OUTPUT_WRITELN  reduce using rule 55 (output)
    INPUT_READ      reduce using rule 55 (output)
    '('             reduce using rule 55 (output)
    '{'             reduce using rule 55 (output)
    '}'             reduce using rule 55 (output)
    '+'             reduce using rule 55 (output)
    '-'             reduce using rule 55 (output)
    '%'             reduce using rule 55 (output)
    '?'             reduce using rule 55 (output)
    '!'             reduce using rule 55 (output)


State 348

   53 output: OUTPUT_WRITE '(' operation ')' ';' •

    error           reduce using rule 53 (output)
    NUM_INT         reduce using rule 53 (output)
    NUM_FLOAT       reduce using rule 53 (output)
    NIL_CNST        reduce using rule 53 (output)
    ID              reduce using rule 53 (output)
    RETURN_STM      reduce using rule 53 (output)
    T_INT           reduce using rule 53 (output)
    T_FLOAT         reduce using rule 53 (output)
    IF_STMT         reduce using rule 53 (output)
    ELSE_STMT       reduce using rule 53 (output)
    FOR_STMT        reduce using rule 53 (output)
    OUTPUT_WRITE    reduce using rule 53 (output)
    OUTPUT_WRITELN  reduce using rule 53 (output)
    INPUT_READ      reduce using rule 53 (output)
    '('             reduce using rule 53 (output)
    '{'             reduce using rule 53 (output)
    '}'             reduce using rule 53 (output)
    '+'             reduce using rule 53 (output)
    '-'             reduce using rule 53 (output)
    '%'             reduce using rule 53 (output)
    '?'             reduce using rule 53 (output)
    '!'             reduce using rule 53 (output)


State 349

   56 output: OUTPUT_WRITELN '(' STRING ')' ';' •

    error           reduce using rule 56 (output)
    NUM_INT         reduce using rule 56 (output)
    NUM_FLOAT       reduce using rule 56 (output)
    NIL_CNST        reduce using rule 56 (output)
    ID              reduce using rule 56 (output)
    RETURN_STM      reduce using rule 56 (output)
    T_INT           reduce using rule 56 (output)
    T_FLOAT         reduce using rule 56 (output)
    IF_STMT         reduce using rule 56 (output)
    ELSE_STMT       reduce using rule 56 (output)
    FOR_STMT        reduce using rule 56 (output)
    OUTPUT_WRITE    reduce using rule 56 (output)
    OUTPUT_WRITELN  reduce using rule 56 (output)
    INPUT_READ      reduce using rule 56 (output)
    '('             reduce using rule 56 (output)
    '{'             reduce using rule 56 (output)
    '}'             reduce using rule 56 (output)
    '+'             reduce using rule 56 (output)
    '-'             reduce using rule 56 (output)
    '%'             reduce using rule 56 (output)
    '?'             reduce using rule 56 (output)
    '!'             reduce using rule 56 (output)


State 350

   54 output: OUTPUT_WRITELN '(' operation ')' ';' •

    error           reduce using rule 54 (output)
    NUM_INT         reduce using rule 54 (output)
    NUM_FLOAT       reduce using rule 54 (output)
    NIL_CNST        reduce using rule 54 (output)
    ID              reduce using rule 54 (output)
    RETURN_STM      reduce using rule 54 (output)
    T_INT           reduce using rule 54 (output)
    T_FLOAT         reduce using rule 54 (output)
    IF_STMT         reduce using rule 54 (output)
    ELSE_STMT       reduce using rule 54 (output)
    FOR_STMT        reduce using rule 54 (output)
    OUTPUT_WRITE    reduce using rule 54 (output)
    OUTPUT_WRITELN  reduce using rule 54 (output)
    INPUT_READ      reduce using rule 54 (output)
    '('             reduce using rule 54 (output)
    '{'             reduce using rule 54 (output)
    '}'             reduce using rule 54 (output)
    '+'             reduce using rule 54 (output)
    '-'             reduce using rule 54 (output)
    '%'             reduce using rule 54 (output)
    '?'             reduce using rule 54 (output)
    '!'             reduce using rule 54 (output)


State 351

   57 input: INPUT_READ '(' iden ')' ';' •

    error           reduce using rule 57 (input)
    NUM_INT         reduce using rule 57 (input)
    NUM_FLOAT       reduce using rule 57 (input)
    NIL_CNST        reduce using rule 57 (input)
    ID              reduce using rule 57 (input)
    RETURN_STM      reduce using rule 57 (input)
    T_INT           reduce using rule 57 (input)
    T_FLOAT         reduce using rule 57 (input)
    IF_STMT         reduce using rule 57 (input)
    ELSE_STMT       reduce using rule 57 (input)
    FOR_STMT        reduce using rule 57 (input)
    OUTPUT_WRITE    reduce using rule 57 (input)
    OUTPUT_WRITELN  reduce using rule 57 (input)
    INPUT_READ      reduce using rule 57 (input)
    '('             reduce using rule 57 (input)
    '{'             reduce using rule 57 (input)
    '}'             reduce using rule 57 (input)
    '+'             reduce using rule 57 (input)
    '-'             reduce using rule 57 (input)
    '%'             reduce using rule 57 (input)
    '?'             reduce using rule 57 (input)
    '!'             reduce using rule 57 (input)


State 352

   12 func_calling: ID '(' $@2 calling_parameters $@3 ')' •

    ')'         reduce using rule 12 (func_calling)
    AND         reduce using rule 12 (func_calling)
    OR          reduce using rule 12 (func_calling)
    GREATER     reduce using rule 12 (func_calling)
    GREATER_EQ  reduce using rule 12 (func_calling)
    LESS        reduce using rule 12 (func_calling)
    LESS_EQ     reduce using rule 12 (func_calling)
    EQUAL       reduce using rule 12 (func_calling)
    NOT_EQ      reduce using rule 12 (func_calling)
    '+'         reduce using rule 12 (func_calling)
    '-'         reduce using rule 12 (func_calling)
    '*'         reduce using rule 12 (func_calling)
    '/'         reduce using rule 12 (func_calling)
    FILTER      reduce using rule 12 (func_calling)
    MAP         reduce using rule 12 (func_calling)
    ':'         reduce using rule 12 (func_calling)


State 353

   12 func_calling: ID '(' $@2 calling_parameters $@3 ')' •

    ')'         reduce using rule 12 (func_calling)
    ','         reduce using rule 12 (func_calling)
    AND         reduce using rule 12 (func_calling)
    OR          reduce using rule 12 (func_calling)
    GREATER     reduce using rule 12 (func_calling)
    GREATER_EQ  reduce using rule 12 (func_calling)
    LESS        reduce using rule 12 (func_calling)
    LESS_EQ     reduce using rule 12 (func_calling)
    EQUAL       reduce using rule 12 (func_calling)
    NOT_EQ      reduce using rule 12 (func_calling)
    '+'         reduce using rule 12 (func_calling)
    '-'         reduce using rule 12 (func_calling)
    '*'         reduce using rule 12 (func_calling)
    '/'         reduce using rule 12 (func_calling)
    FILTER      reduce using rule 12 (func_calling)
    MAP         reduce using rule 12 (func_calling)
    ':'         reduce using rule 12 (func_calling)


State 354

   45 conditional_stmt: IF_STMT '(' operation ')' command ELSE_STMT • command

    error           shift, and go to state 227
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 228
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 229
    FOR_STMT        shift, and go to state 230
    OUTPUT_WRITE    shift, and go to state 231
    OUTPUT_WRITELN  shift, and go to state 232
    INPUT_READ      shift, and go to state 233
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 37 ($@4)

    func_calling      go to state 44
    var_declaration   go to state 234
    unq_declaration   go to state 235
    type              go to state 165
    type_lst          go to state 11
    type_number       go to state 12
    command           go to state 355
    $@4               go to state 236
    init_variable     go to state 237
    init_stmt         go to state 238
    conditional_stmt  go to state 239
    return_stmt       go to state 240
    iteration         go to state 241
    output            go to state 242
    input             go to state 243
    iden              go to state 57
    operation         go to state 244
    lst_binary        go to state 59
    arith_binary      go to state 60
    term              go to state 61
    expression        go to state 62
    const             go to state 63
    number            go to state 64
    single_operation  go to state 65
    arith_single      go to state 66
    lst_single        go to state 67


State 355

   45 conditional_stmt: IF_STMT '(' operation ')' command ELSE_STMT command •

    error           reduce using rule 45 (conditional_stmt)
    NUM_INT         reduce using rule 45 (conditional_stmt)
    NUM_FLOAT       reduce using rule 45 (conditional_stmt)
    NIL_CNST        reduce using rule 45 (conditional_stmt)
    ID              reduce using rule 45 (conditional_stmt)
    RETURN_STM      reduce using rule 45 (conditional_stmt)
    T_INT           reduce using rule 45 (conditional_stmt)
    T_FLOAT         reduce using rule 45 (conditional_stmt)
    IF_STMT         reduce using rule 45 (conditional_stmt)
    ELSE_STMT       reduce using rule 45 (conditional_stmt)
    FOR_STMT        reduce using rule 45 (conditional_stmt)
    OUTPUT_WRITE    reduce using rule 45 (conditional_stmt)
    OUTPUT_WRITELN  reduce using rule 45 (conditional_stmt)
    INPUT_READ      reduce using rule 45 (conditional_stmt)
    '('             reduce using rule 45 (conditional_stmt)
    '{'             reduce using rule 45 (conditional_stmt)
    '}'             reduce using rule 45 (conditional_stmt)
    '+'             reduce using rule 45 (conditional_stmt)
    '-'             reduce using rule 45 (conditional_stmt)
    '%'             reduce using rule 45 (conditional_stmt)
    '?'             reduce using rule 45 (conditional_stmt)
    '!'             reduce using rule 45 (conditional_stmt)
