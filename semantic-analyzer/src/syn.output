Grammar

    0 $accept: program $end

    1 program: lst_declarations
    2        | %empty

    3 lst_declarations: declaration lst_declarations
    4                 | declaration

    5 declaration: func_declaration
    6            | var_declaration
    7            | error

    8 $@1: %empty

    9 func_declaration: unq_declaration $@1 '(' parameters ')' '{' block_commands '}'

   10 var_declaration: unq_declaration ';'

   11 unq_declaration: type ID

   12 parameters: lst_parameters
   13           | %empty

   14 lst_parameters: unq_declaration ',' lst_parameters
   15               | unq_declaration

   16 calling_parameters: lst_calling_parameters
   17                   | %empty

   18 lst_calling_parameters: operation ',' lst_calling_parameters
   19                       | operation

   20 block_commands: command block_commands
   21               | command

   22 command: var_declaration
   23        | init_variable
   24        | conditional_stmt
   25        | return_stmt
   26        | iteration
   27        | input
   28        | output

   29 $@2: %empty

   30 command: $@2 '{' block_commands '}'
   31        | operation ';'
   32        | error ';'

   33 init_variable: init_stmt ';'

   34 conditional_stmt: IF_STMT '(' operation ')' command
   35                 | IF_STMT '(' operation ')' command ELSE_STMT command

   36 return_stmt: RETURN_STM operation ';'

   37 iteration: FOR_STMT '(' loop_condition ')' command

   38 loop_condition: init_stmt ';' operation ';' update_stmt

   39 init_stmt: ID '=' operation

   40 update_stmt: init_stmt
   41            | %empty

   42 output: OUTPUT_WRITE '(' operation ')' ';'
   43       | OUTPUT_WRITELN '(' operation ')' ';'
   44       | OUTPUT_WRITE '(' STRING ')' ';'
   45       | OUTPUT_WRITELN '(' STRING ')' ';'

   46 input: INPUT_READ '(' operation ')' ';'

   47 $@3: %empty

   48 $@4: %empty

   49 func_calling: ID '(' $@3 calling_parameters $@4 ')'

   50 expression: func_calling
   51           | single_operation
   52           | const
   53           | iden
   54           | '(' operation ')'

   55 iden: ID

   56 const: number
   57      | NIL_CNST

   58 number: NUM_INT
   59       | NUM_FLOAT

   60 type: type_lst
   61     | type_number

   62 type_lst: type_number T_LIST

   63 type_number: T_INT
   64            | T_FLOAT

   65 operation: lst_binary
   66          | operation GREATER operation
   67          | operation GREATER_EQ operation
   68          | operation LESS operation
   69          | operation LESS_EQ operation
   70          | operation EQUAL operation
   71          | operation NOT_EQ operation
   72          | operation AND operation
   73          | operation OR operation

   74 single_operation: arith_single
   75                 | lst_single
   76                 | '!' expression

   77 arith_binary: arith_binary '+' term
   78             | arith_binary '-' term
   79             | term

   80 term: term '*' expression
   81     | term '/' expression
   82     | expression

   83 arith_single: '+' expression
   84             | '-' expression

   85 lst_single: '%' expression
   86           | '?' expression

   87 lst_binary: lst_binary FILTER lst_binary
   88           | lst_binary MAP lst_binary
   89           | lst_binary ':' lst_binary
   90           | arith_binary


Terminals, with rules where they appear

    $end (0) 0
    '!' <token> (33) 76
    '%' <token> (37) 85
    '(' <token> (40) 9 34 35 37 42 43 44 45 46 49 54
    ')' <token> (41) 9 34 35 37 42 43 44 45 46 49 54
    '*' <token> (42) 80
    '+' <token> (43) 77 83
    ',' <token> (44) 14 18
    '-' <token> (45) 78 84
    '/' <token> (47) 81
    ':' <token> (58) 89
    ';' <token> (59) 10 31 32 33 36 38 42 43 44 45 46
    '=' <token> (61) 39
    '?' <token> (63) 86
    '{' <token> (123) 9 30
    '}' <token> (125) 9 30
    error (256) 7 32
    NUM_INT <token> (258) 58
    NUM_FLOAT <token> (259) 59
    STRING <token> (260) 44 45
    NIL_CNST <token> (261) 57
    ID <token> (262) 11 39 49 55
    RETURN_STM <token> (263) 36
    T_INT <token> (264) 63
    T_FLOAT <token> (265) 64
    T_LIST <token> (266) 62
    IF_STMT <token> (267) 34 35
    ELSE_STMT <token> (268) 35
    FOR_STMT <token> (269) 37
    OUTPUT_WRITE <token> (270) 42 44
    OUTPUT_WRITELN <token> (271) 43 45
    INPUT_READ <token> (272) 46
    AND <token> (273) 72
    OR <token> (274) 73
    GREATER <token> (275) 66
    GREATER_EQ <token> (276) 67
    LESS <token> (277) 68
    LESS_EQ <token> (278) 69
    EQUAL <token> (279) 70
    NOT_EQ <token> (280) 71
    FILTER <token> (281) 87
    MAP <token> (282) 88


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    program <node> (44)
        on left: 1 2
        on right: 0
    lst_declarations <node> (45)
        on left: 3 4
        on right: 1 3
    declaration <node> (46)
        on left: 5 6 7
        on right: 3 4
    func_declaration <node> (47)
        on left: 9
        on right: 5
    $@1 (48)
        on left: 8
        on right: 9
    var_declaration <node> (49)
        on left: 10
        on right: 6 22
    unq_declaration <node> (50)
        on left: 11
        on right: 9 10 14 15
    parameters <node> (51)
        on left: 12 13
        on right: 9
    lst_parameters <node> (52)
        on left: 14 15
        on right: 12 14
    calling_parameters <node> (53)
        on left: 16 17
        on right: 49
    lst_calling_parameters <node> (54)
        on left: 18 19
        on right: 16 18
    block_commands <node> (55)
        on left: 20 21
        on right: 9 20 30
    command <node> (56)
        on left: 22 23 24 25 26 27 28 30 31 32
        on right: 20 21 34 35 37
    $@2 (57)
        on left: 29
        on right: 30
    init_variable <node> (58)
        on left: 33
        on right: 23
    conditional_stmt <node> (59)
        on left: 34 35
        on right: 24
    return_stmt <node> (60)
        on left: 36
        on right: 25
    iteration <node> (61)
        on left: 37
        on right: 26
    loop_condition <node> (62)
        on left: 38
        on right: 37
    init_stmt <node> (63)
        on left: 39
        on right: 33 38 40
    update_stmt <node> (64)
        on left: 40 41
        on right: 38
    output <node> (65)
        on left: 42 43 44 45
        on right: 28
    input <node> (66)
        on left: 46
        on right: 27
    func_calling <node> (67)
        on left: 49
        on right: 50
    $@3 (68)
        on left: 47
        on right: 49
    $@4 (69)
        on left: 48
        on right: 49
    expression <node> (70)
        on left: 50 51 52 53 54
        on right: 76 80 81 82 83 84 85 86
    iden <node> (71)
        on left: 55
        on right: 53
    const <node> (72)
        on left: 56 57
        on right: 52
    number <node> (73)
        on left: 58 59
        on right: 56
    type <node> (74)
        on left: 60 61
        on right: 11
    type_lst <node> (75)
        on left: 62
        on right: 60
    type_number <node> (76)
        on left: 63 64
        on right: 61 62
    operation <node> (77)
        on left: 65 66 67 68 69 70 71 72 73
        on right: 18 19 31 34 35 36 38 39 42 43 46 54 66 67 68 69 70 71 72 73
    single_operation <node> (78)
        on left: 74 75 76
        on right: 51
    arith_binary <node> (79)
        on left: 77 78 79
        on right: 77 78 90
    term <node> (80)
        on left: 80 81 82
        on right: 77 78 79 80 81
    arith_single <node> (81)
        on left: 83 84
        on right: 74
    lst_single <node> (82)
        on left: 85 86
        on right: 75
    lst_binary <node> (83)
        on left: 87 88 89 90
        on right: 65 87 88 89


State 0

    0 $accept: • program $end

    error    shift, and go to state 1
    T_INT    shift, and go to state 2
    T_FLOAT  shift, and go to state 3

    $end  reduce using rule 2 (program)

    program           go to state 4
    lst_declarations  go to state 5
    declaration       go to state 6
    func_declaration  go to state 7
    var_declaration   go to state 8
    unq_declaration   go to state 9
    type              go to state 10
    type_lst          go to state 11
    type_number       go to state 12


State 1

    7 declaration: error •

    $end     reduce using rule 7 (declaration)
    error    reduce using rule 7 (declaration)
    T_INT    reduce using rule 7 (declaration)
    T_FLOAT  reduce using rule 7 (declaration)


State 2

   63 type_number: T_INT •

    ID      reduce using rule 63 (type_number)
    T_LIST  reduce using rule 63 (type_number)


State 3

   64 type_number: T_FLOAT •

    ID      reduce using rule 64 (type_number)
    T_LIST  reduce using rule 64 (type_number)


State 4

    0 $accept: program • $end

    $end  shift, and go to state 13


State 5

    1 program: lst_declarations •

    $end  reduce using rule 1 (program)


State 6

    3 lst_declarations: declaration • lst_declarations
    4                 | declaration •

    error    shift, and go to state 1
    T_INT    shift, and go to state 2
    T_FLOAT  shift, and go to state 3

    $end  reduce using rule 4 (lst_declarations)

    lst_declarations  go to state 14
    declaration       go to state 6
    func_declaration  go to state 7
    var_declaration   go to state 8
    unq_declaration   go to state 9
    type              go to state 10
    type_lst          go to state 11
    type_number       go to state 12


State 7

    5 declaration: func_declaration •

    $end     reduce using rule 5 (declaration)
    error    reduce using rule 5 (declaration)
    T_INT    reduce using rule 5 (declaration)
    T_FLOAT  reduce using rule 5 (declaration)


State 8

    6 declaration: var_declaration •

    $end     reduce using rule 6 (declaration)
    error    reduce using rule 6 (declaration)
    T_INT    reduce using rule 6 (declaration)
    T_FLOAT  reduce using rule 6 (declaration)


State 9

    9 func_declaration: unq_declaration • $@1 '(' parameters ')' '{' block_commands '}'
   10 var_declaration: unq_declaration • ';'

    ';'  shift, and go to state 15

    '('  reduce using rule 8 ($@1)

    $@1  go to state 16


State 10

   11 unq_declaration: type • ID

    ID  shift, and go to state 17


State 11

   60 type: type_lst •

    ID  reduce using rule 60 (type)


State 12

   61 type: type_number •
   62 type_lst: type_number • T_LIST

    T_LIST  shift, and go to state 18

    ID  reduce using rule 61 (type)


State 13

    0 $accept: program $end •

    $default  accept


State 14

    3 lst_declarations: declaration lst_declarations •

    $end  reduce using rule 3 (lst_declarations)


State 15

   10 var_declaration: unq_declaration ';' •

    $end     reduce using rule 10 (var_declaration)
    error    reduce using rule 10 (var_declaration)
    T_INT    reduce using rule 10 (var_declaration)
    T_FLOAT  reduce using rule 10 (var_declaration)


State 16

    9 func_declaration: unq_declaration $@1 • '(' parameters ')' '{' block_commands '}'

    '('  shift, and go to state 19


State 17

   11 unq_declaration: type ID •

    '('  reduce using rule 11 (unq_declaration)
    ';'  reduce using rule 11 (unq_declaration)


State 18

   62 type_lst: type_number T_LIST •

    ID  reduce using rule 62 (type_lst)


State 19

    9 func_declaration: unq_declaration $@1 '(' • parameters ')' '{' block_commands '}'

    T_INT    shift, and go to state 2
    T_FLOAT  shift, and go to state 3

    ')'  reduce using rule 13 (parameters)

    unq_declaration  go to state 20
    parameters       go to state 21
    lst_parameters   go to state 22
    type             go to state 162
    type_lst         go to state 11
    type_number      go to state 12


State 20

   14 lst_parameters: unq_declaration • ',' lst_parameters
   15               | unq_declaration •

    ','  shift, and go to state 23

    ')'  reduce using rule 15 (lst_parameters)


State 21

    9 func_declaration: unq_declaration $@1 '(' parameters • ')' '{' block_commands '}'

    ')'  shift, and go to state 24


State 22

   12 parameters: lst_parameters •

    ')'  reduce using rule 12 (parameters)


State 23

   14 lst_parameters: unq_declaration ',' • lst_parameters

    T_INT    shift, and go to state 2
    T_FLOAT  shift, and go to state 3

    unq_declaration  go to state 20
    lst_parameters   go to state 25
    type             go to state 162
    type_lst         go to state 11
    type_number      go to state 12


State 24

    9 func_declaration: unq_declaration $@1 '(' parameters ')' • '{' block_commands '}'

    '{'  shift, and go to state 26


State 25

   14 lst_parameters: unq_declaration ',' lst_parameters •

    ')'  reduce using rule 14 (lst_parameters)


State 26

    9 func_declaration: unq_declaration $@1 '(' parameters ')' '{' • block_commands '}'

    error           shift, and go to state 27
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 32
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 33
    FOR_STMT        shift, and go to state 34
    OUTPUT_WRITE    shift, and go to state 35
    OUTPUT_WRITELN  shift, and go to state 36
    INPUT_READ      shift, and go to state 37
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 29 ($@2)

    var_declaration   go to state 44
    unq_declaration   go to state 45
    block_commands    go to state 46
    command           go to state 47
    $@2               go to state 48
    init_variable     go to state 49
    conditional_stmt  go to state 50
    return_stmt       go to state 51
    iteration         go to state 52
    init_stmt         go to state 53
    output            go to state 54
    input             go to state 55
    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    type              go to state 163
    type_lst          go to state 11
    type_number       go to state 12
    operation         go to state 61
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 27

   32 command: error • ';'

    ';'  shift, and go to state 68


State 28

   58 number: NUM_INT •

    ';'         reduce using rule 58 (number)
    AND         reduce using rule 58 (number)
    OR          reduce using rule 58 (number)
    GREATER     reduce using rule 58 (number)
    GREATER_EQ  reduce using rule 58 (number)
    LESS        reduce using rule 58 (number)
    LESS_EQ     reduce using rule 58 (number)
    EQUAL       reduce using rule 58 (number)
    NOT_EQ      reduce using rule 58 (number)
    '+'         reduce using rule 58 (number)
    '-'         reduce using rule 58 (number)
    '*'         reduce using rule 58 (number)
    '/'         reduce using rule 58 (number)
    FILTER      reduce using rule 58 (number)
    MAP         reduce using rule 58 (number)
    ':'         reduce using rule 58 (number)


State 29

   59 number: NUM_FLOAT •

    ';'         reduce using rule 59 (number)
    AND         reduce using rule 59 (number)
    OR          reduce using rule 59 (number)
    GREATER     reduce using rule 59 (number)
    GREATER_EQ  reduce using rule 59 (number)
    LESS        reduce using rule 59 (number)
    LESS_EQ     reduce using rule 59 (number)
    EQUAL       reduce using rule 59 (number)
    NOT_EQ      reduce using rule 59 (number)
    '+'         reduce using rule 59 (number)
    '-'         reduce using rule 59 (number)
    '*'         reduce using rule 59 (number)
    '/'         reduce using rule 59 (number)
    FILTER      reduce using rule 59 (number)
    MAP         reduce using rule 59 (number)
    ':'         reduce using rule 59 (number)


State 30

   57 const: NIL_CNST •

    ';'         reduce using rule 57 (const)
    AND         reduce using rule 57 (const)
    OR          reduce using rule 57 (const)
    GREATER     reduce using rule 57 (const)
    GREATER_EQ  reduce using rule 57 (const)
    LESS        reduce using rule 57 (const)
    LESS_EQ     reduce using rule 57 (const)
    EQUAL       reduce using rule 57 (const)
    NOT_EQ      reduce using rule 57 (const)
    '+'         reduce using rule 57 (const)
    '-'         reduce using rule 57 (const)
    '*'         reduce using rule 57 (const)
    '/'         reduce using rule 57 (const)
    FILTER      reduce using rule 57 (const)
    MAP         reduce using rule 57 (const)
    ':'         reduce using rule 57 (const)


State 31

   39 init_stmt: ID • '=' operation
   49 func_calling: ID • '(' $@3 calling_parameters $@4 ')'
   55 iden: ID •

    '('  shift, and go to state 69
    '='  shift, and go to state 70

    ';'         reduce using rule 55 (iden)
    AND         reduce using rule 55 (iden)
    OR          reduce using rule 55 (iden)
    GREATER     reduce using rule 55 (iden)
    GREATER_EQ  reduce using rule 55 (iden)
    LESS        reduce using rule 55 (iden)
    LESS_EQ     reduce using rule 55 (iden)
    EQUAL       reduce using rule 55 (iden)
    NOT_EQ      reduce using rule 55 (iden)
    '+'         reduce using rule 55 (iden)
    '-'         reduce using rule 55 (iden)
    '*'         reduce using rule 55 (iden)
    '/'         reduce using rule 55 (iden)
    FILTER      reduce using rule 55 (iden)
    MAP         reduce using rule 55 (iden)
    ':'         reduce using rule 55 (iden)


State 32

   36 return_stmt: RETURN_STM • operation ';'

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 71
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    operation         go to state 72
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 33

   34 conditional_stmt: IF_STMT • '(' operation ')' command
   35                 | IF_STMT • '(' operation ')' command ELSE_STMT command

    '('  shift, and go to state 73


State 34

   37 iteration: FOR_STMT • '(' loop_condition ')' command

    '('  shift, and go to state 74


State 35

   42 output: OUTPUT_WRITE • '(' operation ')' ';'
   44       | OUTPUT_WRITE • '(' STRING ')' ';'

    '('  shift, and go to state 75


State 36

   43 output: OUTPUT_WRITELN • '(' operation ')' ';'
   45       | OUTPUT_WRITELN • '(' STRING ')' ';'

    '('  shift, and go to state 76


State 37

   46 input: INPUT_READ • '(' operation ')' ';'

    '('  shift, and go to state 77


State 38

   54 expression: '(' • operation ')'

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 175
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    operation         go to state 78
    single_operation  go to state 179
    arith_binary      go to state 180
    term              go to state 181
    arith_single      go to state 182
    lst_single        go to state 183
    lst_binary        go to state 184


State 39

   83 arith_single: '+' • expression

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 71
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 79
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    single_operation  go to state 62
    arith_single      go to state 65
    lst_single        go to state 66


State 40

   84 arith_single: '-' • expression

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 71
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 80
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    single_operation  go to state 62
    arith_single      go to state 65
    lst_single        go to state 66


State 41

   85 lst_single: '%' • expression

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 71
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 81
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    single_operation  go to state 62
    arith_single      go to state 65
    lst_single        go to state 66


State 42

   86 lst_single: '?' • expression

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 71
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 82
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    single_operation  go to state 62
    arith_single      go to state 65
    lst_single        go to state 66


State 43

   76 single_operation: '!' • expression

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 71
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 83
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    single_operation  go to state 62
    arith_single      go to state 65
    lst_single        go to state 66


State 44

   22 command: var_declaration •

    error           reduce using rule 22 (command)
    NUM_INT         reduce using rule 22 (command)
    NUM_FLOAT       reduce using rule 22 (command)
    NIL_CNST        reduce using rule 22 (command)
    ID              reduce using rule 22 (command)
    RETURN_STM      reduce using rule 22 (command)
    T_INT           reduce using rule 22 (command)
    T_FLOAT         reduce using rule 22 (command)
    IF_STMT         reduce using rule 22 (command)
    FOR_STMT        reduce using rule 22 (command)
    OUTPUT_WRITE    reduce using rule 22 (command)
    OUTPUT_WRITELN  reduce using rule 22 (command)
    INPUT_READ      reduce using rule 22 (command)
    '('             reduce using rule 22 (command)
    '{'             reduce using rule 22 (command)
    '}'             reduce using rule 22 (command)
    '+'             reduce using rule 22 (command)
    '-'             reduce using rule 22 (command)
    '%'             reduce using rule 22 (command)
    '?'             reduce using rule 22 (command)
    '!'             reduce using rule 22 (command)


State 45

   10 var_declaration: unq_declaration • ';'

    ';'  shift, and go to state 185


State 46

    9 func_declaration: unq_declaration $@1 '(' parameters ')' '{' block_commands • '}'

    '}'  shift, and go to state 84


State 47

   20 block_commands: command • block_commands
   21               | command •

    error           shift, and go to state 27
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 32
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 33
    FOR_STMT        shift, and go to state 34
    OUTPUT_WRITE    shift, and go to state 35
    OUTPUT_WRITELN  shift, and go to state 36
    INPUT_READ      shift, and go to state 37
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 29 ($@2)
    '}'  reduce using rule 21 (block_commands)

    var_declaration   go to state 44
    unq_declaration   go to state 45
    block_commands    go to state 85
    command           go to state 47
    $@2               go to state 48
    init_variable     go to state 49
    conditional_stmt  go to state 50
    return_stmt       go to state 51
    iteration         go to state 52
    init_stmt         go to state 53
    output            go to state 54
    input             go to state 55
    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    type              go to state 163
    type_lst          go to state 11
    type_number       go to state 12
    operation         go to state 61
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 48

   30 command: $@2 • '{' block_commands '}'

    '{'  shift, and go to state 86


State 49

   23 command: init_variable •

    error           reduce using rule 23 (command)
    NUM_INT         reduce using rule 23 (command)
    NUM_FLOAT       reduce using rule 23 (command)
    NIL_CNST        reduce using rule 23 (command)
    ID              reduce using rule 23 (command)
    RETURN_STM      reduce using rule 23 (command)
    T_INT           reduce using rule 23 (command)
    T_FLOAT         reduce using rule 23 (command)
    IF_STMT         reduce using rule 23 (command)
    FOR_STMT        reduce using rule 23 (command)
    OUTPUT_WRITE    reduce using rule 23 (command)
    OUTPUT_WRITELN  reduce using rule 23 (command)
    INPUT_READ      reduce using rule 23 (command)
    '('             reduce using rule 23 (command)
    '{'             reduce using rule 23 (command)
    '}'             reduce using rule 23 (command)
    '+'             reduce using rule 23 (command)
    '-'             reduce using rule 23 (command)
    '%'             reduce using rule 23 (command)
    '?'             reduce using rule 23 (command)
    '!'             reduce using rule 23 (command)


State 50

   24 command: conditional_stmt •

    error           reduce using rule 24 (command)
    NUM_INT         reduce using rule 24 (command)
    NUM_FLOAT       reduce using rule 24 (command)
    NIL_CNST        reduce using rule 24 (command)
    ID              reduce using rule 24 (command)
    RETURN_STM      reduce using rule 24 (command)
    T_INT           reduce using rule 24 (command)
    T_FLOAT         reduce using rule 24 (command)
    IF_STMT         reduce using rule 24 (command)
    FOR_STMT        reduce using rule 24 (command)
    OUTPUT_WRITE    reduce using rule 24 (command)
    OUTPUT_WRITELN  reduce using rule 24 (command)
    INPUT_READ      reduce using rule 24 (command)
    '('             reduce using rule 24 (command)
    '{'             reduce using rule 24 (command)
    '}'             reduce using rule 24 (command)
    '+'             reduce using rule 24 (command)
    '-'             reduce using rule 24 (command)
    '%'             reduce using rule 24 (command)
    '?'             reduce using rule 24 (command)
    '!'             reduce using rule 24 (command)


State 51

   25 command: return_stmt •

    error           reduce using rule 25 (command)
    NUM_INT         reduce using rule 25 (command)
    NUM_FLOAT       reduce using rule 25 (command)
    NIL_CNST        reduce using rule 25 (command)
    ID              reduce using rule 25 (command)
    RETURN_STM      reduce using rule 25 (command)
    T_INT           reduce using rule 25 (command)
    T_FLOAT         reduce using rule 25 (command)
    IF_STMT         reduce using rule 25 (command)
    FOR_STMT        reduce using rule 25 (command)
    OUTPUT_WRITE    reduce using rule 25 (command)
    OUTPUT_WRITELN  reduce using rule 25 (command)
    INPUT_READ      reduce using rule 25 (command)
    '('             reduce using rule 25 (command)
    '{'             reduce using rule 25 (command)
    '}'             reduce using rule 25 (command)
    '+'             reduce using rule 25 (command)
    '-'             reduce using rule 25 (command)
    '%'             reduce using rule 25 (command)
    '?'             reduce using rule 25 (command)
    '!'             reduce using rule 25 (command)


State 52

   26 command: iteration •

    error           reduce using rule 26 (command)
    NUM_INT         reduce using rule 26 (command)
    NUM_FLOAT       reduce using rule 26 (command)
    NIL_CNST        reduce using rule 26 (command)
    ID              reduce using rule 26 (command)
    RETURN_STM      reduce using rule 26 (command)
    T_INT           reduce using rule 26 (command)
    T_FLOAT         reduce using rule 26 (command)
    IF_STMT         reduce using rule 26 (command)
    FOR_STMT        reduce using rule 26 (command)
    OUTPUT_WRITE    reduce using rule 26 (command)
    OUTPUT_WRITELN  reduce using rule 26 (command)
    INPUT_READ      reduce using rule 26 (command)
    '('             reduce using rule 26 (command)
    '{'             reduce using rule 26 (command)
    '}'             reduce using rule 26 (command)
    '+'             reduce using rule 26 (command)
    '-'             reduce using rule 26 (command)
    '%'             reduce using rule 26 (command)
    '?'             reduce using rule 26 (command)
    '!'             reduce using rule 26 (command)


State 53

   33 init_variable: init_stmt • ';'

    ';'  shift, and go to state 87


State 54

   28 command: output •

    error           reduce using rule 28 (command)
    NUM_INT         reduce using rule 28 (command)
    NUM_FLOAT       reduce using rule 28 (command)
    NIL_CNST        reduce using rule 28 (command)
    ID              reduce using rule 28 (command)
    RETURN_STM      reduce using rule 28 (command)
    T_INT           reduce using rule 28 (command)
    T_FLOAT         reduce using rule 28 (command)
    IF_STMT         reduce using rule 28 (command)
    FOR_STMT        reduce using rule 28 (command)
    OUTPUT_WRITE    reduce using rule 28 (command)
    OUTPUT_WRITELN  reduce using rule 28 (command)
    INPUT_READ      reduce using rule 28 (command)
    '('             reduce using rule 28 (command)
    '{'             reduce using rule 28 (command)
    '}'             reduce using rule 28 (command)
    '+'             reduce using rule 28 (command)
    '-'             reduce using rule 28 (command)
    '%'             reduce using rule 28 (command)
    '?'             reduce using rule 28 (command)
    '!'             reduce using rule 28 (command)


State 55

   27 command: input •

    error           reduce using rule 27 (command)
    NUM_INT         reduce using rule 27 (command)
    NUM_FLOAT       reduce using rule 27 (command)
    NIL_CNST        reduce using rule 27 (command)
    ID              reduce using rule 27 (command)
    RETURN_STM      reduce using rule 27 (command)
    T_INT           reduce using rule 27 (command)
    T_FLOAT         reduce using rule 27 (command)
    IF_STMT         reduce using rule 27 (command)
    FOR_STMT        reduce using rule 27 (command)
    OUTPUT_WRITE    reduce using rule 27 (command)
    OUTPUT_WRITELN  reduce using rule 27 (command)
    INPUT_READ      reduce using rule 27 (command)
    '('             reduce using rule 27 (command)
    '{'             reduce using rule 27 (command)
    '}'             reduce using rule 27 (command)
    '+'             reduce using rule 27 (command)
    '-'             reduce using rule 27 (command)
    '%'             reduce using rule 27 (command)
    '?'             reduce using rule 27 (command)
    '!'             reduce using rule 27 (command)


State 56

   50 expression: func_calling •

    ';'         reduce using rule 50 (expression)
    AND         reduce using rule 50 (expression)
    OR          reduce using rule 50 (expression)
    GREATER     reduce using rule 50 (expression)
    GREATER_EQ  reduce using rule 50 (expression)
    LESS        reduce using rule 50 (expression)
    LESS_EQ     reduce using rule 50 (expression)
    EQUAL       reduce using rule 50 (expression)
    NOT_EQ      reduce using rule 50 (expression)
    '+'         reduce using rule 50 (expression)
    '-'         reduce using rule 50 (expression)
    '*'         reduce using rule 50 (expression)
    '/'         reduce using rule 50 (expression)
    FILTER      reduce using rule 50 (expression)
    MAP         reduce using rule 50 (expression)
    ':'         reduce using rule 50 (expression)


State 57

   82 term: expression •

    ';'         reduce using rule 82 (term)
    AND         reduce using rule 82 (term)
    OR          reduce using rule 82 (term)
    GREATER     reduce using rule 82 (term)
    GREATER_EQ  reduce using rule 82 (term)
    LESS        reduce using rule 82 (term)
    LESS_EQ     reduce using rule 82 (term)
    EQUAL       reduce using rule 82 (term)
    NOT_EQ      reduce using rule 82 (term)
    '+'         reduce using rule 82 (term)
    '-'         reduce using rule 82 (term)
    '*'         reduce using rule 82 (term)
    '/'         reduce using rule 82 (term)
    FILTER      reduce using rule 82 (term)
    MAP         reduce using rule 82 (term)
    ':'         reduce using rule 82 (term)


State 58

   53 expression: iden •

    ';'         reduce using rule 53 (expression)
    AND         reduce using rule 53 (expression)
    OR          reduce using rule 53 (expression)
    GREATER     reduce using rule 53 (expression)
    GREATER_EQ  reduce using rule 53 (expression)
    LESS        reduce using rule 53 (expression)
    LESS_EQ     reduce using rule 53 (expression)
    EQUAL       reduce using rule 53 (expression)
    NOT_EQ      reduce using rule 53 (expression)
    '+'         reduce using rule 53 (expression)
    '-'         reduce using rule 53 (expression)
    '*'         reduce using rule 53 (expression)
    '/'         reduce using rule 53 (expression)
    FILTER      reduce using rule 53 (expression)
    MAP         reduce using rule 53 (expression)
    ':'         reduce using rule 53 (expression)


State 59

   52 expression: const •

    ';'         reduce using rule 52 (expression)
    AND         reduce using rule 52 (expression)
    OR          reduce using rule 52 (expression)
    GREATER     reduce using rule 52 (expression)
    GREATER_EQ  reduce using rule 52 (expression)
    LESS        reduce using rule 52 (expression)
    LESS_EQ     reduce using rule 52 (expression)
    EQUAL       reduce using rule 52 (expression)
    NOT_EQ      reduce using rule 52 (expression)
    '+'         reduce using rule 52 (expression)
    '-'         reduce using rule 52 (expression)
    '*'         reduce using rule 52 (expression)
    '/'         reduce using rule 52 (expression)
    FILTER      reduce using rule 52 (expression)
    MAP         reduce using rule 52 (expression)
    ':'         reduce using rule 52 (expression)


State 60

   56 const: number •

    ';'         reduce using rule 56 (const)
    AND         reduce using rule 56 (const)
    OR          reduce using rule 56 (const)
    GREATER     reduce using rule 56 (const)
    GREATER_EQ  reduce using rule 56 (const)
    LESS        reduce using rule 56 (const)
    LESS_EQ     reduce using rule 56 (const)
    EQUAL       reduce using rule 56 (const)
    NOT_EQ      reduce using rule 56 (const)
    '+'         reduce using rule 56 (const)
    '-'         reduce using rule 56 (const)
    '*'         reduce using rule 56 (const)
    '/'         reduce using rule 56 (const)
    FILTER      reduce using rule 56 (const)
    MAP         reduce using rule 56 (const)
    ':'         reduce using rule 56 (const)


State 61

   31 command: operation • ';'
   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ';'         shift, and go to state 88
    AND         shift, and go to state 89
    OR          shift, and go to state 90
    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94
    EQUAL       shift, and go to state 95
    NOT_EQ      shift, and go to state 96


State 62

   51 expression: single_operation •

    ';'         reduce using rule 51 (expression)
    AND         reduce using rule 51 (expression)
    OR          reduce using rule 51 (expression)
    GREATER     reduce using rule 51 (expression)
    GREATER_EQ  reduce using rule 51 (expression)
    LESS        reduce using rule 51 (expression)
    LESS_EQ     reduce using rule 51 (expression)
    EQUAL       reduce using rule 51 (expression)
    NOT_EQ      reduce using rule 51 (expression)
    '+'         reduce using rule 51 (expression)
    '-'         reduce using rule 51 (expression)
    '*'         reduce using rule 51 (expression)
    '/'         reduce using rule 51 (expression)
    FILTER      reduce using rule 51 (expression)
    MAP         reduce using rule 51 (expression)
    ':'         reduce using rule 51 (expression)


State 63

   77 arith_binary: arith_binary • '+' term
   78             | arith_binary • '-' term
   90 lst_binary: arith_binary •

    '+'  shift, and go to state 97
    '-'  shift, and go to state 98

    ';'         reduce using rule 90 (lst_binary)
    AND         reduce using rule 90 (lst_binary)
    OR          reduce using rule 90 (lst_binary)
    GREATER     reduce using rule 90 (lst_binary)
    GREATER_EQ  reduce using rule 90 (lst_binary)
    LESS        reduce using rule 90 (lst_binary)
    LESS_EQ     reduce using rule 90 (lst_binary)
    EQUAL       reduce using rule 90 (lst_binary)
    NOT_EQ      reduce using rule 90 (lst_binary)
    FILTER      reduce using rule 90 (lst_binary)
    MAP         reduce using rule 90 (lst_binary)
    ':'         reduce using rule 90 (lst_binary)


State 64

   79 arith_binary: term •
   80 term: term • '*' expression
   81     | term • '/' expression

    '*'  shift, and go to state 99
    '/'  shift, and go to state 100

    ';'         reduce using rule 79 (arith_binary)
    AND         reduce using rule 79 (arith_binary)
    OR          reduce using rule 79 (arith_binary)
    GREATER     reduce using rule 79 (arith_binary)
    GREATER_EQ  reduce using rule 79 (arith_binary)
    LESS        reduce using rule 79 (arith_binary)
    LESS_EQ     reduce using rule 79 (arith_binary)
    EQUAL       reduce using rule 79 (arith_binary)
    NOT_EQ      reduce using rule 79 (arith_binary)
    '+'         reduce using rule 79 (arith_binary)
    '-'         reduce using rule 79 (arith_binary)
    FILTER      reduce using rule 79 (arith_binary)
    MAP         reduce using rule 79 (arith_binary)
    ':'         reduce using rule 79 (arith_binary)


State 65

   74 single_operation: arith_single •

    ';'         reduce using rule 74 (single_operation)
    AND         reduce using rule 74 (single_operation)
    OR          reduce using rule 74 (single_operation)
    GREATER     reduce using rule 74 (single_operation)
    GREATER_EQ  reduce using rule 74 (single_operation)
    LESS        reduce using rule 74 (single_operation)
    LESS_EQ     reduce using rule 74 (single_operation)
    EQUAL       reduce using rule 74 (single_operation)
    NOT_EQ      reduce using rule 74 (single_operation)
    '+'         reduce using rule 74 (single_operation)
    '-'         reduce using rule 74 (single_operation)
    '*'         reduce using rule 74 (single_operation)
    '/'         reduce using rule 74 (single_operation)
    FILTER      reduce using rule 74 (single_operation)
    MAP         reduce using rule 74 (single_operation)
    ':'         reduce using rule 74 (single_operation)


State 66

   75 single_operation: lst_single •

    ';'         reduce using rule 75 (single_operation)
    AND         reduce using rule 75 (single_operation)
    OR          reduce using rule 75 (single_operation)
    GREATER     reduce using rule 75 (single_operation)
    GREATER_EQ  reduce using rule 75 (single_operation)
    LESS        reduce using rule 75 (single_operation)
    LESS_EQ     reduce using rule 75 (single_operation)
    EQUAL       reduce using rule 75 (single_operation)
    NOT_EQ      reduce using rule 75 (single_operation)
    '+'         reduce using rule 75 (single_operation)
    '-'         reduce using rule 75 (single_operation)
    '*'         reduce using rule 75 (single_operation)
    '/'         reduce using rule 75 (single_operation)
    FILTER      reduce using rule 75 (single_operation)
    MAP         reduce using rule 75 (single_operation)
    ':'         reduce using rule 75 (single_operation)


State 67

   65 operation: lst_binary •
   87 lst_binary: lst_binary • FILTER lst_binary
   88           | lst_binary • MAP lst_binary
   89           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 101
    MAP     shift, and go to state 102
    ':'     shift, and go to state 103

    ';'         reduce using rule 65 (operation)
    AND         reduce using rule 65 (operation)
    OR          reduce using rule 65 (operation)
    GREATER     reduce using rule 65 (operation)
    GREATER_EQ  reduce using rule 65 (operation)
    LESS        reduce using rule 65 (operation)
    LESS_EQ     reduce using rule 65 (operation)
    EQUAL       reduce using rule 65 (operation)
    NOT_EQ      reduce using rule 65 (operation)


State 68

   32 command: error ';' •

    error           reduce using rule 32 (command)
    NUM_INT         reduce using rule 32 (command)
    NUM_FLOAT       reduce using rule 32 (command)
    NIL_CNST        reduce using rule 32 (command)
    ID              reduce using rule 32 (command)
    RETURN_STM      reduce using rule 32 (command)
    T_INT           reduce using rule 32 (command)
    T_FLOAT         reduce using rule 32 (command)
    IF_STMT         reduce using rule 32 (command)
    FOR_STMT        reduce using rule 32 (command)
    OUTPUT_WRITE    reduce using rule 32 (command)
    OUTPUT_WRITELN  reduce using rule 32 (command)
    INPUT_READ      reduce using rule 32 (command)
    '('             reduce using rule 32 (command)
    '{'             reduce using rule 32 (command)
    '}'             reduce using rule 32 (command)
    '+'             reduce using rule 32 (command)
    '-'             reduce using rule 32 (command)
    '%'             reduce using rule 32 (command)
    '?'             reduce using rule 32 (command)
    '!'             reduce using rule 32 (command)


State 69

   49 func_calling: ID '(' • $@3 calling_parameters $@4 ')'

    NUM_INT    reduce using rule 47 ($@3)
    NUM_FLOAT  reduce using rule 47 ($@3)
    NIL_CNST   reduce using rule 47 ($@3)
    ID         reduce using rule 47 ($@3)
    '('        reduce using rule 47 ($@3)
    ')'        reduce using rule 47 ($@3)
    '+'        reduce using rule 47 ($@3)
    '-'        reduce using rule 47 ($@3)
    '%'        reduce using rule 47 ($@3)
    '?'        reduce using rule 47 ($@3)
    '!'        reduce using rule 47 ($@3)

    $@3  go to state 104


State 70

   39 init_stmt: ID '=' • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 71
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    operation         go to state 105
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 71

   49 func_calling: ID • '(' $@3 calling_parameters $@4 ')'
   55 iden: ID •

    '('  shift, and go to state 69

    ';'         reduce using rule 55 (iden)
    AND         reduce using rule 55 (iden)
    OR          reduce using rule 55 (iden)
    GREATER     reduce using rule 55 (iden)
    GREATER_EQ  reduce using rule 55 (iden)
    LESS        reduce using rule 55 (iden)
    LESS_EQ     reduce using rule 55 (iden)
    EQUAL       reduce using rule 55 (iden)
    NOT_EQ      reduce using rule 55 (iden)
    '+'         reduce using rule 55 (iden)
    '-'         reduce using rule 55 (iden)
    '*'         reduce using rule 55 (iden)
    '/'         reduce using rule 55 (iden)
    FILTER      reduce using rule 55 (iden)
    MAP         reduce using rule 55 (iden)
    ':'         reduce using rule 55 (iden)


State 72

   36 return_stmt: RETURN_STM operation • ';'
   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ';'         shift, and go to state 106
    AND         shift, and go to state 89
    OR          shift, and go to state 90
    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94
    EQUAL       shift, and go to state 95
    NOT_EQ      shift, and go to state 96


State 73

   34 conditional_stmt: IF_STMT '(' • operation ')' command
   35                 | IF_STMT '(' • operation ')' command ELSE_STMT command

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 175
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    operation         go to state 107
    single_operation  go to state 179
    arith_binary      go to state 180
    term              go to state 181
    arith_single      go to state 182
    lst_single        go to state 183
    lst_binary        go to state 184


State 74

   37 iteration: FOR_STMT '(' • loop_condition ')' command

    ID  shift, and go to state 108

    loop_condition  go to state 109
    init_stmt       go to state 110


State 75

   42 output: OUTPUT_WRITE '(' • operation ')' ';'
   44       | OUTPUT_WRITE '(' • STRING ')' ';'

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    STRING     shift, and go to state 111
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 175
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    operation         go to state 112
    single_operation  go to state 179
    arith_binary      go to state 180
    term              go to state 181
    arith_single      go to state 182
    lst_single        go to state 183
    lst_binary        go to state 184


State 76

   43 output: OUTPUT_WRITELN '(' • operation ')' ';'
   45       | OUTPUT_WRITELN '(' • STRING ')' ';'

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    STRING     shift, and go to state 113
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 175
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    operation         go to state 114
    single_operation  go to state 179
    arith_binary      go to state 180
    term              go to state 181
    arith_single      go to state 182
    lst_single        go to state 183
    lst_binary        go to state 184


State 77

   46 input: INPUT_READ '(' • operation ')' ';'

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 175
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    operation         go to state 115
    single_operation  go to state 179
    arith_binary      go to state 180
    term              go to state 181
    arith_single      go to state 182
    lst_single        go to state 183
    lst_binary        go to state 184


State 78

   54 expression: '(' operation • ')'
   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ')'         shift, and go to state 116
    AND         shift, and go to state 186
    OR          shift, and go to state 187
    GREATER     shift, and go to state 188
    GREATER_EQ  shift, and go to state 189
    LESS        shift, and go to state 190
    LESS_EQ     shift, and go to state 191
    EQUAL       shift, and go to state 192
    NOT_EQ      shift, and go to state 193


State 79

   83 arith_single: '+' expression •

    ';'         reduce using rule 83 (arith_single)
    AND         reduce using rule 83 (arith_single)
    OR          reduce using rule 83 (arith_single)
    GREATER     reduce using rule 83 (arith_single)
    GREATER_EQ  reduce using rule 83 (arith_single)
    LESS        reduce using rule 83 (arith_single)
    LESS_EQ     reduce using rule 83 (arith_single)
    EQUAL       reduce using rule 83 (arith_single)
    NOT_EQ      reduce using rule 83 (arith_single)
    '+'         reduce using rule 83 (arith_single)
    '-'         reduce using rule 83 (arith_single)
    '*'         reduce using rule 83 (arith_single)
    '/'         reduce using rule 83 (arith_single)
    FILTER      reduce using rule 83 (arith_single)
    MAP         reduce using rule 83 (arith_single)
    ':'         reduce using rule 83 (arith_single)


State 80

   84 arith_single: '-' expression •

    ';'         reduce using rule 84 (arith_single)
    AND         reduce using rule 84 (arith_single)
    OR          reduce using rule 84 (arith_single)
    GREATER     reduce using rule 84 (arith_single)
    GREATER_EQ  reduce using rule 84 (arith_single)
    LESS        reduce using rule 84 (arith_single)
    LESS_EQ     reduce using rule 84 (arith_single)
    EQUAL       reduce using rule 84 (arith_single)
    NOT_EQ      reduce using rule 84 (arith_single)
    '+'         reduce using rule 84 (arith_single)
    '-'         reduce using rule 84 (arith_single)
    '*'         reduce using rule 84 (arith_single)
    '/'         reduce using rule 84 (arith_single)
    FILTER      reduce using rule 84 (arith_single)
    MAP         reduce using rule 84 (arith_single)
    ':'         reduce using rule 84 (arith_single)


State 81

   85 lst_single: '%' expression •

    ';'         reduce using rule 85 (lst_single)
    AND         reduce using rule 85 (lst_single)
    OR          reduce using rule 85 (lst_single)
    GREATER     reduce using rule 85 (lst_single)
    GREATER_EQ  reduce using rule 85 (lst_single)
    LESS        reduce using rule 85 (lst_single)
    LESS_EQ     reduce using rule 85 (lst_single)
    EQUAL       reduce using rule 85 (lst_single)
    NOT_EQ      reduce using rule 85 (lst_single)
    '+'         reduce using rule 85 (lst_single)
    '-'         reduce using rule 85 (lst_single)
    '*'         reduce using rule 85 (lst_single)
    '/'         reduce using rule 85 (lst_single)
    FILTER      reduce using rule 85 (lst_single)
    MAP         reduce using rule 85 (lst_single)
    ':'         reduce using rule 85 (lst_single)


State 82

   86 lst_single: '?' expression •

    ';'         reduce using rule 86 (lst_single)
    AND         reduce using rule 86 (lst_single)
    OR          reduce using rule 86 (lst_single)
    GREATER     reduce using rule 86 (lst_single)
    GREATER_EQ  reduce using rule 86 (lst_single)
    LESS        reduce using rule 86 (lst_single)
    LESS_EQ     reduce using rule 86 (lst_single)
    EQUAL       reduce using rule 86 (lst_single)
    NOT_EQ      reduce using rule 86 (lst_single)
    '+'         reduce using rule 86 (lst_single)
    '-'         reduce using rule 86 (lst_single)
    '*'         reduce using rule 86 (lst_single)
    '/'         reduce using rule 86 (lst_single)
    FILTER      reduce using rule 86 (lst_single)
    MAP         reduce using rule 86 (lst_single)
    ':'         reduce using rule 86 (lst_single)


State 83

   76 single_operation: '!' expression •

    ';'         reduce using rule 76 (single_operation)
    AND         reduce using rule 76 (single_operation)
    OR          reduce using rule 76 (single_operation)
    GREATER     reduce using rule 76 (single_operation)
    GREATER_EQ  reduce using rule 76 (single_operation)
    LESS        reduce using rule 76 (single_operation)
    LESS_EQ     reduce using rule 76 (single_operation)
    EQUAL       reduce using rule 76 (single_operation)
    NOT_EQ      reduce using rule 76 (single_operation)
    '+'         reduce using rule 76 (single_operation)
    '-'         reduce using rule 76 (single_operation)
    '*'         reduce using rule 76 (single_operation)
    '/'         reduce using rule 76 (single_operation)
    FILTER      reduce using rule 76 (single_operation)
    MAP         reduce using rule 76 (single_operation)
    ':'         reduce using rule 76 (single_operation)


State 84

    9 func_declaration: unq_declaration $@1 '(' parameters ')' '{' block_commands '}' •

    $end     reduce using rule 9 (func_declaration)
    error    reduce using rule 9 (func_declaration)
    T_INT    reduce using rule 9 (func_declaration)
    T_FLOAT  reduce using rule 9 (func_declaration)


State 85

   20 block_commands: command block_commands •

    '}'  reduce using rule 20 (block_commands)


State 86

   30 command: $@2 '{' • block_commands '}'

    error           shift, and go to state 27
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 32
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 33
    FOR_STMT        shift, and go to state 34
    OUTPUT_WRITE    shift, and go to state 35
    OUTPUT_WRITELN  shift, and go to state 36
    INPUT_READ      shift, and go to state 37
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 29 ($@2)

    var_declaration   go to state 44
    unq_declaration   go to state 45
    block_commands    go to state 117
    command           go to state 47
    $@2               go to state 48
    init_variable     go to state 49
    conditional_stmt  go to state 50
    return_stmt       go to state 51
    iteration         go to state 52
    init_stmt         go to state 53
    output            go to state 54
    input             go to state 55
    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    type              go to state 163
    type_lst          go to state 11
    type_number       go to state 12
    operation         go to state 61
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 87

   33 init_variable: init_stmt ';' •

    error           reduce using rule 33 (init_variable)
    NUM_INT         reduce using rule 33 (init_variable)
    NUM_FLOAT       reduce using rule 33 (init_variable)
    NIL_CNST        reduce using rule 33 (init_variable)
    ID              reduce using rule 33 (init_variable)
    RETURN_STM      reduce using rule 33 (init_variable)
    T_INT           reduce using rule 33 (init_variable)
    T_FLOAT         reduce using rule 33 (init_variable)
    IF_STMT         reduce using rule 33 (init_variable)
    FOR_STMT        reduce using rule 33 (init_variable)
    OUTPUT_WRITE    reduce using rule 33 (init_variable)
    OUTPUT_WRITELN  reduce using rule 33 (init_variable)
    INPUT_READ      reduce using rule 33 (init_variable)
    '('             reduce using rule 33 (init_variable)
    '{'             reduce using rule 33 (init_variable)
    '}'             reduce using rule 33 (init_variable)
    '+'             reduce using rule 33 (init_variable)
    '-'             reduce using rule 33 (init_variable)
    '%'             reduce using rule 33 (init_variable)
    '?'             reduce using rule 33 (init_variable)
    '!'             reduce using rule 33 (init_variable)


State 88

   31 command: operation ';' •

    error           reduce using rule 31 (command)
    NUM_INT         reduce using rule 31 (command)
    NUM_FLOAT       reduce using rule 31 (command)
    NIL_CNST        reduce using rule 31 (command)
    ID              reduce using rule 31 (command)
    RETURN_STM      reduce using rule 31 (command)
    T_INT           reduce using rule 31 (command)
    T_FLOAT         reduce using rule 31 (command)
    IF_STMT         reduce using rule 31 (command)
    FOR_STMT        reduce using rule 31 (command)
    OUTPUT_WRITE    reduce using rule 31 (command)
    OUTPUT_WRITELN  reduce using rule 31 (command)
    INPUT_READ      reduce using rule 31 (command)
    '('             reduce using rule 31 (command)
    '{'             reduce using rule 31 (command)
    '}'             reduce using rule 31 (command)
    '+'             reduce using rule 31 (command)
    '-'             reduce using rule 31 (command)
    '%'             reduce using rule 31 (command)
    '?'             reduce using rule 31 (command)
    '!'             reduce using rule 31 (command)


State 89

   72 operation: operation AND • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 71
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    operation         go to state 118
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 90

   73 operation: operation OR • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 71
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    operation         go to state 119
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 91

   66 operation: operation GREATER • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 71
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    operation         go to state 120
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 92

   67 operation: operation GREATER_EQ • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 71
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    operation         go to state 121
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 93

   68 operation: operation LESS • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 71
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    operation         go to state 122
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 94

   69 operation: operation LESS_EQ • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 71
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    operation         go to state 123
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 95

   70 operation: operation EQUAL • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 71
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    operation         go to state 124
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 96

   71 operation: operation NOT_EQ • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 71
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    operation         go to state 125
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 97

   77 arith_binary: arith_binary '+' • term

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 71
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    single_operation  go to state 62
    term              go to state 126
    arith_single      go to state 65
    lst_single        go to state 66


State 98

   78 arith_binary: arith_binary '-' • term

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 71
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    single_operation  go to state 62
    term              go to state 127
    arith_single      go to state 65
    lst_single        go to state 66


State 99

   80 term: term '*' • expression

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 71
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 128
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    single_operation  go to state 62
    arith_single      go to state 65
    lst_single        go to state 66


State 100

   81 term: term '/' • expression

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 71
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 129
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    single_operation  go to state 62
    arith_single      go to state 65
    lst_single        go to state 66


State 101

   87 lst_binary: lst_binary FILTER • lst_binary

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 71
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 130


State 102

   88 lst_binary: lst_binary MAP • lst_binary

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 71
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 131


State 103

   89 lst_binary: lst_binary ':' • lst_binary

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 71
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 132


State 104

   49 func_calling: ID '(' $@3 • calling_parameters $@4 ')'

    NUM_INT    shift, and go to state 194
    NUM_FLOAT  shift, and go to state 195
    NIL_CNST   shift, and go to state 196
    ID         shift, and go to state 197
    '('        shift, and go to state 198
    '+'        shift, and go to state 199
    '-'        shift, and go to state 200
    '%'        shift, and go to state 201
    '?'        shift, and go to state 202
    '!'        shift, and go to state 203

    ')'  reduce using rule 17 (calling_parameters)

    calling_parameters      go to state 133
    lst_calling_parameters  go to state 134
    func_calling            go to state 204
    expression              go to state 205
    iden                    go to state 206
    const                   go to state 207
    number                  go to state 208
    operation               go to state 135
    single_operation        go to state 209
    arith_binary            go to state 210
    term                    go to state 211
    arith_single            go to state 212
    lst_single              go to state 213
    lst_binary              go to state 214


State 105

   39 init_stmt: ID '=' operation •
   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    AND         shift, and go to state 89
    OR          shift, and go to state 90
    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94
    EQUAL       shift, and go to state 95
    NOT_EQ      shift, and go to state 96

    ';'  reduce using rule 39 (init_stmt)


State 106

   36 return_stmt: RETURN_STM operation ';' •

    error           reduce using rule 36 (return_stmt)
    NUM_INT         reduce using rule 36 (return_stmt)
    NUM_FLOAT       reduce using rule 36 (return_stmt)
    NIL_CNST        reduce using rule 36 (return_stmt)
    ID              reduce using rule 36 (return_stmt)
    RETURN_STM      reduce using rule 36 (return_stmt)
    T_INT           reduce using rule 36 (return_stmt)
    T_FLOAT         reduce using rule 36 (return_stmt)
    IF_STMT         reduce using rule 36 (return_stmt)
    FOR_STMT        reduce using rule 36 (return_stmt)
    OUTPUT_WRITE    reduce using rule 36 (return_stmt)
    OUTPUT_WRITELN  reduce using rule 36 (return_stmt)
    INPUT_READ      reduce using rule 36 (return_stmt)
    '('             reduce using rule 36 (return_stmt)
    '{'             reduce using rule 36 (return_stmt)
    '}'             reduce using rule 36 (return_stmt)
    '+'             reduce using rule 36 (return_stmt)
    '-'             reduce using rule 36 (return_stmt)
    '%'             reduce using rule 36 (return_stmt)
    '?'             reduce using rule 36 (return_stmt)
    '!'             reduce using rule 36 (return_stmt)


State 107

   34 conditional_stmt: IF_STMT '(' operation • ')' command
   35                 | IF_STMT '(' operation • ')' command ELSE_STMT command
   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ')'         shift, and go to state 136
    AND         shift, and go to state 186
    OR          shift, and go to state 187
    GREATER     shift, and go to state 188
    GREATER_EQ  shift, and go to state 189
    LESS        shift, and go to state 190
    LESS_EQ     shift, and go to state 191
    EQUAL       shift, and go to state 192
    NOT_EQ      shift, and go to state 193


State 108

   39 init_stmt: ID • '=' operation

    '='  shift, and go to state 70


State 109

   37 iteration: FOR_STMT '(' loop_condition • ')' command

    ')'  shift, and go to state 137


State 110

   38 loop_condition: init_stmt • ';' operation ';' update_stmt

    ';'  shift, and go to state 138


State 111

   44 output: OUTPUT_WRITE '(' STRING • ')' ';'

    ')'  shift, and go to state 139


State 112

   42 output: OUTPUT_WRITE '(' operation • ')' ';'
   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ')'         shift, and go to state 140
    AND         shift, and go to state 186
    OR          shift, and go to state 187
    GREATER     shift, and go to state 188
    GREATER_EQ  shift, and go to state 189
    LESS        shift, and go to state 190
    LESS_EQ     shift, and go to state 191
    EQUAL       shift, and go to state 192
    NOT_EQ      shift, and go to state 193


State 113

   45 output: OUTPUT_WRITELN '(' STRING • ')' ';'

    ')'  shift, and go to state 141


State 114

   43 output: OUTPUT_WRITELN '(' operation • ')' ';'
   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ')'         shift, and go to state 142
    AND         shift, and go to state 186
    OR          shift, and go to state 187
    GREATER     shift, and go to state 188
    GREATER_EQ  shift, and go to state 189
    LESS        shift, and go to state 190
    LESS_EQ     shift, and go to state 191
    EQUAL       shift, and go to state 192
    NOT_EQ      shift, and go to state 193


State 115

   46 input: INPUT_READ '(' operation • ')' ';'
   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ')'         shift, and go to state 143
    AND         shift, and go to state 186
    OR          shift, and go to state 187
    GREATER     shift, and go to state 188
    GREATER_EQ  shift, and go to state 189
    LESS        shift, and go to state 190
    LESS_EQ     shift, and go to state 191
    EQUAL       shift, and go to state 192
    NOT_EQ      shift, and go to state 193


State 116

   54 expression: '(' operation ')' •

    ';'         reduce using rule 54 (expression)
    AND         reduce using rule 54 (expression)
    OR          reduce using rule 54 (expression)
    GREATER     reduce using rule 54 (expression)
    GREATER_EQ  reduce using rule 54 (expression)
    LESS        reduce using rule 54 (expression)
    LESS_EQ     reduce using rule 54 (expression)
    EQUAL       reduce using rule 54 (expression)
    NOT_EQ      reduce using rule 54 (expression)
    '+'         reduce using rule 54 (expression)
    '-'         reduce using rule 54 (expression)
    '*'         reduce using rule 54 (expression)
    '/'         reduce using rule 54 (expression)
    FILTER      reduce using rule 54 (expression)
    MAP         reduce using rule 54 (expression)
    ':'         reduce using rule 54 (expression)


State 117

   30 command: $@2 '{' block_commands • '}'

    '}'  shift, and go to state 144


State 118

   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   72          | operation AND operation •
   73          | operation • OR operation

    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94
    EQUAL       shift, and go to state 95
    NOT_EQ      shift, and go to state 96

    ';'  reduce using rule 72 (operation)
    AND  reduce using rule 72 (operation)
    OR   reduce using rule 72 (operation)


State 119

   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation
   73          | operation OR operation •

    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94
    EQUAL       shift, and go to state 95
    NOT_EQ      shift, and go to state 96

    ';'  reduce using rule 73 (operation)
    AND  reduce using rule 73 (operation)
    OR   reduce using rule 73 (operation)


State 120

   66 operation: operation • GREATER operation
   66          | operation GREATER operation •
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ';'         reduce using rule 66 (operation)
    AND         reduce using rule 66 (operation)
    OR          reduce using rule 66 (operation)
    GREATER     reduce using rule 66 (operation)
    GREATER_EQ  reduce using rule 66 (operation)
    LESS        reduce using rule 66 (operation)
    LESS_EQ     reduce using rule 66 (operation)
    EQUAL       reduce using rule 66 (operation)
    NOT_EQ      reduce using rule 66 (operation)


State 121

   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   67          | operation GREATER_EQ operation •
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ';'         reduce using rule 67 (operation)
    AND         reduce using rule 67 (operation)
    OR          reduce using rule 67 (operation)
    GREATER     reduce using rule 67 (operation)
    GREATER_EQ  reduce using rule 67 (operation)
    LESS        reduce using rule 67 (operation)
    LESS_EQ     reduce using rule 67 (operation)
    EQUAL       reduce using rule 67 (operation)
    NOT_EQ      reduce using rule 67 (operation)


State 122

   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   68          | operation LESS operation •
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ';'         reduce using rule 68 (operation)
    AND         reduce using rule 68 (operation)
    OR          reduce using rule 68 (operation)
    GREATER     reduce using rule 68 (operation)
    GREATER_EQ  reduce using rule 68 (operation)
    LESS        reduce using rule 68 (operation)
    LESS_EQ     reduce using rule 68 (operation)
    EQUAL       reduce using rule 68 (operation)
    NOT_EQ      reduce using rule 68 (operation)


State 123

   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   69          | operation LESS_EQ operation •
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ';'         reduce using rule 69 (operation)
    AND         reduce using rule 69 (operation)
    OR          reduce using rule 69 (operation)
    GREATER     reduce using rule 69 (operation)
    GREATER_EQ  reduce using rule 69 (operation)
    LESS        reduce using rule 69 (operation)
    LESS_EQ     reduce using rule 69 (operation)
    EQUAL       reduce using rule 69 (operation)
    NOT_EQ      reduce using rule 69 (operation)


State 124

   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   70          | operation EQUAL operation •
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94

    ';'     reduce using rule 70 (operation)
    AND     reduce using rule 70 (operation)
    OR      reduce using rule 70 (operation)
    EQUAL   reduce using rule 70 (operation)
    NOT_EQ  reduce using rule 70 (operation)


State 125

   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   71          | operation NOT_EQ operation •
   72          | operation • AND operation
   73          | operation • OR operation

    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94

    ';'     reduce using rule 71 (operation)
    AND     reduce using rule 71 (operation)
    OR      reduce using rule 71 (operation)
    EQUAL   reduce using rule 71 (operation)
    NOT_EQ  reduce using rule 71 (operation)


State 126

   77 arith_binary: arith_binary '+' term •
   80 term: term • '*' expression
   81     | term • '/' expression

    '*'  shift, and go to state 99
    '/'  shift, and go to state 100

    ';'         reduce using rule 77 (arith_binary)
    AND         reduce using rule 77 (arith_binary)
    OR          reduce using rule 77 (arith_binary)
    GREATER     reduce using rule 77 (arith_binary)
    GREATER_EQ  reduce using rule 77 (arith_binary)
    LESS        reduce using rule 77 (arith_binary)
    LESS_EQ     reduce using rule 77 (arith_binary)
    EQUAL       reduce using rule 77 (arith_binary)
    NOT_EQ      reduce using rule 77 (arith_binary)
    '+'         reduce using rule 77 (arith_binary)
    '-'         reduce using rule 77 (arith_binary)
    FILTER      reduce using rule 77 (arith_binary)
    MAP         reduce using rule 77 (arith_binary)
    ':'         reduce using rule 77 (arith_binary)


State 127

   78 arith_binary: arith_binary '-' term •
   80 term: term • '*' expression
   81     | term • '/' expression

    '*'  shift, and go to state 99
    '/'  shift, and go to state 100

    ';'         reduce using rule 78 (arith_binary)
    AND         reduce using rule 78 (arith_binary)
    OR          reduce using rule 78 (arith_binary)
    GREATER     reduce using rule 78 (arith_binary)
    GREATER_EQ  reduce using rule 78 (arith_binary)
    LESS        reduce using rule 78 (arith_binary)
    LESS_EQ     reduce using rule 78 (arith_binary)
    EQUAL       reduce using rule 78 (arith_binary)
    NOT_EQ      reduce using rule 78 (arith_binary)
    '+'         reduce using rule 78 (arith_binary)
    '-'         reduce using rule 78 (arith_binary)
    FILTER      reduce using rule 78 (arith_binary)
    MAP         reduce using rule 78 (arith_binary)
    ':'         reduce using rule 78 (arith_binary)


State 128

   80 term: term '*' expression •

    ';'         reduce using rule 80 (term)
    AND         reduce using rule 80 (term)
    OR          reduce using rule 80 (term)
    GREATER     reduce using rule 80 (term)
    GREATER_EQ  reduce using rule 80 (term)
    LESS        reduce using rule 80 (term)
    LESS_EQ     reduce using rule 80 (term)
    EQUAL       reduce using rule 80 (term)
    NOT_EQ      reduce using rule 80 (term)
    '+'         reduce using rule 80 (term)
    '-'         reduce using rule 80 (term)
    '*'         reduce using rule 80 (term)
    '/'         reduce using rule 80 (term)
    FILTER      reduce using rule 80 (term)
    MAP         reduce using rule 80 (term)
    ':'         reduce using rule 80 (term)


State 129

   81 term: term '/' expression •

    ';'         reduce using rule 81 (term)
    AND         reduce using rule 81 (term)
    OR          reduce using rule 81 (term)
    GREATER     reduce using rule 81 (term)
    GREATER_EQ  reduce using rule 81 (term)
    LESS        reduce using rule 81 (term)
    LESS_EQ     reduce using rule 81 (term)
    EQUAL       reduce using rule 81 (term)
    NOT_EQ      reduce using rule 81 (term)
    '+'         reduce using rule 81 (term)
    '-'         reduce using rule 81 (term)
    '*'         reduce using rule 81 (term)
    '/'         reduce using rule 81 (term)
    FILTER      reduce using rule 81 (term)
    MAP         reduce using rule 81 (term)
    ':'         reduce using rule 81 (term)


State 130

   87 lst_binary: lst_binary • FILTER lst_binary
   87           | lst_binary FILTER lst_binary •
   88           | lst_binary • MAP lst_binary
   89           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 101
    MAP     shift, and go to state 102
    ':'     shift, and go to state 103

    ';'         reduce using rule 87 (lst_binary)
    AND         reduce using rule 87 (lst_binary)
    OR          reduce using rule 87 (lst_binary)
    GREATER     reduce using rule 87 (lst_binary)
    GREATER_EQ  reduce using rule 87 (lst_binary)
    LESS        reduce using rule 87 (lst_binary)
    LESS_EQ     reduce using rule 87 (lst_binary)
    EQUAL       reduce using rule 87 (lst_binary)
    NOT_EQ      reduce using rule 87 (lst_binary)


State 131

   87 lst_binary: lst_binary • FILTER lst_binary
   88           | lst_binary • MAP lst_binary
   88           | lst_binary MAP lst_binary •
   89           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 101
    MAP     shift, and go to state 102
    ':'     shift, and go to state 103

    ';'         reduce using rule 88 (lst_binary)
    AND         reduce using rule 88 (lst_binary)
    OR          reduce using rule 88 (lst_binary)
    GREATER     reduce using rule 88 (lst_binary)
    GREATER_EQ  reduce using rule 88 (lst_binary)
    LESS        reduce using rule 88 (lst_binary)
    LESS_EQ     reduce using rule 88 (lst_binary)
    EQUAL       reduce using rule 88 (lst_binary)
    NOT_EQ      reduce using rule 88 (lst_binary)


State 132

   87 lst_binary: lst_binary • FILTER lst_binary
   88           | lst_binary • MAP lst_binary
   89           | lst_binary • ':' lst_binary
   89           | lst_binary ':' lst_binary •

    FILTER  shift, and go to state 101
    MAP     shift, and go to state 102
    ':'     shift, and go to state 103

    ';'         reduce using rule 89 (lst_binary)
    AND         reduce using rule 89 (lst_binary)
    OR          reduce using rule 89 (lst_binary)
    GREATER     reduce using rule 89 (lst_binary)
    GREATER_EQ  reduce using rule 89 (lst_binary)
    LESS        reduce using rule 89 (lst_binary)
    LESS_EQ     reduce using rule 89 (lst_binary)
    EQUAL       reduce using rule 89 (lst_binary)
    NOT_EQ      reduce using rule 89 (lst_binary)


State 133

   49 func_calling: ID '(' $@3 calling_parameters • $@4 ')'

    ')'  reduce using rule 48 ($@4)

    $@4  go to state 145


State 134

   16 calling_parameters: lst_calling_parameters •

    ')'  reduce using rule 16 (calling_parameters)


State 135

   18 lst_calling_parameters: operation • ',' lst_calling_parameters
   19                       | operation •
   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ','         shift, and go to state 146
    AND         shift, and go to state 215
    OR          shift, and go to state 216
    GREATER     shift, and go to state 217
    GREATER_EQ  shift, and go to state 218
    LESS        shift, and go to state 219
    LESS_EQ     shift, and go to state 220
    EQUAL       shift, and go to state 221
    NOT_EQ      shift, and go to state 222

    ')'  reduce using rule 19 (lst_calling_parameters)


State 136

   34 conditional_stmt: IF_STMT '(' operation ')' • command
   35                 | IF_STMT '(' operation ')' • command ELSE_STMT command

    error           shift, and go to state 223
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 224
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 225
    FOR_STMT        shift, and go to state 226
    OUTPUT_WRITE    shift, and go to state 227
    OUTPUT_WRITELN  shift, and go to state 228
    INPUT_READ      shift, and go to state 229
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 29 ($@2)

    var_declaration   go to state 230
    unq_declaration   go to state 231
    command           go to state 147
    $@2               go to state 232
    init_variable     go to state 233
    conditional_stmt  go to state 234
    return_stmt       go to state 235
    iteration         go to state 236
    init_stmt         go to state 237
    output            go to state 238
    input             go to state 239
    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    type              go to state 163
    type_lst          go to state 11
    type_number       go to state 12
    operation         go to state 240
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 137

   37 iteration: FOR_STMT '(' loop_condition ')' • command

    error           shift, and go to state 27
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 32
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 33
    FOR_STMT        shift, and go to state 34
    OUTPUT_WRITE    shift, and go to state 35
    OUTPUT_WRITELN  shift, and go to state 36
    INPUT_READ      shift, and go to state 37
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 29 ($@2)

    var_declaration   go to state 44
    unq_declaration   go to state 45
    command           go to state 148
    $@2               go to state 48
    init_variable     go to state 49
    conditional_stmt  go to state 50
    return_stmt       go to state 51
    iteration         go to state 52
    init_stmt         go to state 53
    output            go to state 54
    input             go to state 55
    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    type              go to state 163
    type_lst          go to state 11
    type_number       go to state 12
    operation         go to state 61
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 138

   38 loop_condition: init_stmt ';' • operation ';' update_stmt

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 71
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    operation         go to state 149
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 139

   44 output: OUTPUT_WRITE '(' STRING ')' • ';'

    ';'  shift, and go to state 150


State 140

   42 output: OUTPUT_WRITE '(' operation ')' • ';'

    ';'  shift, and go to state 151


State 141

   45 output: OUTPUT_WRITELN '(' STRING ')' • ';'

    ';'  shift, and go to state 152


State 142

   43 output: OUTPUT_WRITELN '(' operation ')' • ';'

    ';'  shift, and go to state 153


State 143

   46 input: INPUT_READ '(' operation ')' • ';'

    ';'  shift, and go to state 154


State 144

   30 command: $@2 '{' block_commands '}' •

    error           reduce using rule 30 (command)
    NUM_INT         reduce using rule 30 (command)
    NUM_FLOAT       reduce using rule 30 (command)
    NIL_CNST        reduce using rule 30 (command)
    ID              reduce using rule 30 (command)
    RETURN_STM      reduce using rule 30 (command)
    T_INT           reduce using rule 30 (command)
    T_FLOAT         reduce using rule 30 (command)
    IF_STMT         reduce using rule 30 (command)
    FOR_STMT        reduce using rule 30 (command)
    OUTPUT_WRITE    reduce using rule 30 (command)
    OUTPUT_WRITELN  reduce using rule 30 (command)
    INPUT_READ      reduce using rule 30 (command)
    '('             reduce using rule 30 (command)
    '{'             reduce using rule 30 (command)
    '}'             reduce using rule 30 (command)
    '+'             reduce using rule 30 (command)
    '-'             reduce using rule 30 (command)
    '%'             reduce using rule 30 (command)
    '?'             reduce using rule 30 (command)
    '!'             reduce using rule 30 (command)


State 145

   49 func_calling: ID '(' $@3 calling_parameters $@4 • ')'

    ')'  shift, and go to state 155


State 146

   18 lst_calling_parameters: operation ',' • lst_calling_parameters

    NUM_INT    shift, and go to state 194
    NUM_FLOAT  shift, and go to state 195
    NIL_CNST   shift, and go to state 196
    ID         shift, and go to state 197
    '('        shift, and go to state 198
    '+'        shift, and go to state 199
    '-'        shift, and go to state 200
    '%'        shift, and go to state 201
    '?'        shift, and go to state 202
    '!'        shift, and go to state 203

    lst_calling_parameters  go to state 156
    func_calling            go to state 204
    expression              go to state 205
    iden                    go to state 206
    const                   go to state 207
    number                  go to state 208
    operation               go to state 135
    single_operation        go to state 209
    arith_binary            go to state 210
    term                    go to state 211
    arith_single            go to state 212
    lst_single              go to state 213
    lst_binary              go to state 214


State 147

   34 conditional_stmt: IF_STMT '(' operation ')' command •
   35                 | IF_STMT '(' operation ')' command • ELSE_STMT command

    ELSE_STMT  shift, and go to state 157

    error           reduce using rule 34 (conditional_stmt)
    NUM_INT         reduce using rule 34 (conditional_stmt)
    NUM_FLOAT       reduce using rule 34 (conditional_stmt)
    NIL_CNST        reduce using rule 34 (conditional_stmt)
    ID              reduce using rule 34 (conditional_stmt)
    RETURN_STM      reduce using rule 34 (conditional_stmt)
    T_INT           reduce using rule 34 (conditional_stmt)
    T_FLOAT         reduce using rule 34 (conditional_stmt)
    IF_STMT         reduce using rule 34 (conditional_stmt)
    FOR_STMT        reduce using rule 34 (conditional_stmt)
    OUTPUT_WRITE    reduce using rule 34 (conditional_stmt)
    OUTPUT_WRITELN  reduce using rule 34 (conditional_stmt)
    INPUT_READ      reduce using rule 34 (conditional_stmt)
    '('             reduce using rule 34 (conditional_stmt)
    '{'             reduce using rule 34 (conditional_stmt)
    '}'             reduce using rule 34 (conditional_stmt)
    '+'             reduce using rule 34 (conditional_stmt)
    '-'             reduce using rule 34 (conditional_stmt)
    '%'             reduce using rule 34 (conditional_stmt)
    '?'             reduce using rule 34 (conditional_stmt)
    '!'             reduce using rule 34 (conditional_stmt)


State 148

   37 iteration: FOR_STMT '(' loop_condition ')' command •

    error           reduce using rule 37 (iteration)
    NUM_INT         reduce using rule 37 (iteration)
    NUM_FLOAT       reduce using rule 37 (iteration)
    NIL_CNST        reduce using rule 37 (iteration)
    ID              reduce using rule 37 (iteration)
    RETURN_STM      reduce using rule 37 (iteration)
    T_INT           reduce using rule 37 (iteration)
    T_FLOAT         reduce using rule 37 (iteration)
    IF_STMT         reduce using rule 37 (iteration)
    FOR_STMT        reduce using rule 37 (iteration)
    OUTPUT_WRITE    reduce using rule 37 (iteration)
    OUTPUT_WRITELN  reduce using rule 37 (iteration)
    INPUT_READ      reduce using rule 37 (iteration)
    '('             reduce using rule 37 (iteration)
    '{'             reduce using rule 37 (iteration)
    '}'             reduce using rule 37 (iteration)
    '+'             reduce using rule 37 (iteration)
    '-'             reduce using rule 37 (iteration)
    '%'             reduce using rule 37 (iteration)
    '?'             reduce using rule 37 (iteration)
    '!'             reduce using rule 37 (iteration)


State 149

   38 loop_condition: init_stmt ';' operation • ';' update_stmt
   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ';'         shift, and go to state 158
    AND         shift, and go to state 89
    OR          shift, and go to state 90
    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94
    EQUAL       shift, and go to state 95
    NOT_EQ      shift, and go to state 96


State 150

   44 output: OUTPUT_WRITE '(' STRING ')' ';' •

    error           reduce using rule 44 (output)
    NUM_INT         reduce using rule 44 (output)
    NUM_FLOAT       reduce using rule 44 (output)
    NIL_CNST        reduce using rule 44 (output)
    ID              reduce using rule 44 (output)
    RETURN_STM      reduce using rule 44 (output)
    T_INT           reduce using rule 44 (output)
    T_FLOAT         reduce using rule 44 (output)
    IF_STMT         reduce using rule 44 (output)
    FOR_STMT        reduce using rule 44 (output)
    OUTPUT_WRITE    reduce using rule 44 (output)
    OUTPUT_WRITELN  reduce using rule 44 (output)
    INPUT_READ      reduce using rule 44 (output)
    '('             reduce using rule 44 (output)
    '{'             reduce using rule 44 (output)
    '}'             reduce using rule 44 (output)
    '+'             reduce using rule 44 (output)
    '-'             reduce using rule 44 (output)
    '%'             reduce using rule 44 (output)
    '?'             reduce using rule 44 (output)
    '!'             reduce using rule 44 (output)


State 151

   42 output: OUTPUT_WRITE '(' operation ')' ';' •

    error           reduce using rule 42 (output)
    NUM_INT         reduce using rule 42 (output)
    NUM_FLOAT       reduce using rule 42 (output)
    NIL_CNST        reduce using rule 42 (output)
    ID              reduce using rule 42 (output)
    RETURN_STM      reduce using rule 42 (output)
    T_INT           reduce using rule 42 (output)
    T_FLOAT         reduce using rule 42 (output)
    IF_STMT         reduce using rule 42 (output)
    FOR_STMT        reduce using rule 42 (output)
    OUTPUT_WRITE    reduce using rule 42 (output)
    OUTPUT_WRITELN  reduce using rule 42 (output)
    INPUT_READ      reduce using rule 42 (output)
    '('             reduce using rule 42 (output)
    '{'             reduce using rule 42 (output)
    '}'             reduce using rule 42 (output)
    '+'             reduce using rule 42 (output)
    '-'             reduce using rule 42 (output)
    '%'             reduce using rule 42 (output)
    '?'             reduce using rule 42 (output)
    '!'             reduce using rule 42 (output)


State 152

   45 output: OUTPUT_WRITELN '(' STRING ')' ';' •

    error           reduce using rule 45 (output)
    NUM_INT         reduce using rule 45 (output)
    NUM_FLOAT       reduce using rule 45 (output)
    NIL_CNST        reduce using rule 45 (output)
    ID              reduce using rule 45 (output)
    RETURN_STM      reduce using rule 45 (output)
    T_INT           reduce using rule 45 (output)
    T_FLOAT         reduce using rule 45 (output)
    IF_STMT         reduce using rule 45 (output)
    FOR_STMT        reduce using rule 45 (output)
    OUTPUT_WRITE    reduce using rule 45 (output)
    OUTPUT_WRITELN  reduce using rule 45 (output)
    INPUT_READ      reduce using rule 45 (output)
    '('             reduce using rule 45 (output)
    '{'             reduce using rule 45 (output)
    '}'             reduce using rule 45 (output)
    '+'             reduce using rule 45 (output)
    '-'             reduce using rule 45 (output)
    '%'             reduce using rule 45 (output)
    '?'             reduce using rule 45 (output)
    '!'             reduce using rule 45 (output)


State 153

   43 output: OUTPUT_WRITELN '(' operation ')' ';' •

    error           reduce using rule 43 (output)
    NUM_INT         reduce using rule 43 (output)
    NUM_FLOAT       reduce using rule 43 (output)
    NIL_CNST        reduce using rule 43 (output)
    ID              reduce using rule 43 (output)
    RETURN_STM      reduce using rule 43 (output)
    T_INT           reduce using rule 43 (output)
    T_FLOAT         reduce using rule 43 (output)
    IF_STMT         reduce using rule 43 (output)
    FOR_STMT        reduce using rule 43 (output)
    OUTPUT_WRITE    reduce using rule 43 (output)
    OUTPUT_WRITELN  reduce using rule 43 (output)
    INPUT_READ      reduce using rule 43 (output)
    '('             reduce using rule 43 (output)
    '{'             reduce using rule 43 (output)
    '}'             reduce using rule 43 (output)
    '+'             reduce using rule 43 (output)
    '-'             reduce using rule 43 (output)
    '%'             reduce using rule 43 (output)
    '?'             reduce using rule 43 (output)
    '!'             reduce using rule 43 (output)


State 154

   46 input: INPUT_READ '(' operation ')' ';' •

    error           reduce using rule 46 (input)
    NUM_INT         reduce using rule 46 (input)
    NUM_FLOAT       reduce using rule 46 (input)
    NIL_CNST        reduce using rule 46 (input)
    ID              reduce using rule 46 (input)
    RETURN_STM      reduce using rule 46 (input)
    T_INT           reduce using rule 46 (input)
    T_FLOAT         reduce using rule 46 (input)
    IF_STMT         reduce using rule 46 (input)
    FOR_STMT        reduce using rule 46 (input)
    OUTPUT_WRITE    reduce using rule 46 (input)
    OUTPUT_WRITELN  reduce using rule 46 (input)
    INPUT_READ      reduce using rule 46 (input)
    '('             reduce using rule 46 (input)
    '{'             reduce using rule 46 (input)
    '}'             reduce using rule 46 (input)
    '+'             reduce using rule 46 (input)
    '-'             reduce using rule 46 (input)
    '%'             reduce using rule 46 (input)
    '?'             reduce using rule 46 (input)
    '!'             reduce using rule 46 (input)


State 155

   49 func_calling: ID '(' $@3 calling_parameters $@4 ')' •

    ';'         reduce using rule 49 (func_calling)
    AND         reduce using rule 49 (func_calling)
    OR          reduce using rule 49 (func_calling)
    GREATER     reduce using rule 49 (func_calling)
    GREATER_EQ  reduce using rule 49 (func_calling)
    LESS        reduce using rule 49 (func_calling)
    LESS_EQ     reduce using rule 49 (func_calling)
    EQUAL       reduce using rule 49 (func_calling)
    NOT_EQ      reduce using rule 49 (func_calling)
    '+'         reduce using rule 49 (func_calling)
    '-'         reduce using rule 49 (func_calling)
    '*'         reduce using rule 49 (func_calling)
    '/'         reduce using rule 49 (func_calling)
    FILTER      reduce using rule 49 (func_calling)
    MAP         reduce using rule 49 (func_calling)
    ':'         reduce using rule 49 (func_calling)


State 156

   18 lst_calling_parameters: operation ',' lst_calling_parameters •

    ')'  reduce using rule 18 (lst_calling_parameters)


State 157

   35 conditional_stmt: IF_STMT '(' operation ')' command ELSE_STMT • command

    error           shift, and go to state 27
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 32
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 33
    FOR_STMT        shift, and go to state 34
    OUTPUT_WRITE    shift, and go to state 35
    OUTPUT_WRITELN  shift, and go to state 36
    INPUT_READ      shift, and go to state 37
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 29 ($@2)

    var_declaration   go to state 44
    unq_declaration   go to state 45
    command           go to state 159
    $@2               go to state 48
    init_variable     go to state 49
    conditional_stmt  go to state 50
    return_stmt       go to state 51
    iteration         go to state 52
    init_stmt         go to state 53
    output            go to state 54
    input             go to state 55
    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    type              go to state 163
    type_lst          go to state 11
    type_number       go to state 12
    operation         go to state 61
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 158

   38 loop_condition: init_stmt ';' operation ';' • update_stmt

    ID  shift, and go to state 241

    ')'  reduce using rule 41 (update_stmt)

    init_stmt    go to state 160
    update_stmt  go to state 161


State 159

   35 conditional_stmt: IF_STMT '(' operation ')' command ELSE_STMT command •

    error           reduce using rule 35 (conditional_stmt)
    NUM_INT         reduce using rule 35 (conditional_stmt)
    NUM_FLOAT       reduce using rule 35 (conditional_stmt)
    NIL_CNST        reduce using rule 35 (conditional_stmt)
    ID              reduce using rule 35 (conditional_stmt)
    RETURN_STM      reduce using rule 35 (conditional_stmt)
    T_INT           reduce using rule 35 (conditional_stmt)
    T_FLOAT         reduce using rule 35 (conditional_stmt)
    IF_STMT         reduce using rule 35 (conditional_stmt)
    FOR_STMT        reduce using rule 35 (conditional_stmt)
    OUTPUT_WRITE    reduce using rule 35 (conditional_stmt)
    OUTPUT_WRITELN  reduce using rule 35 (conditional_stmt)
    INPUT_READ      reduce using rule 35 (conditional_stmt)
    '('             reduce using rule 35 (conditional_stmt)
    '{'             reduce using rule 35 (conditional_stmt)
    '}'             reduce using rule 35 (conditional_stmt)
    '+'             reduce using rule 35 (conditional_stmt)
    '-'             reduce using rule 35 (conditional_stmt)
    '%'             reduce using rule 35 (conditional_stmt)
    '?'             reduce using rule 35 (conditional_stmt)
    '!'             reduce using rule 35 (conditional_stmt)


State 160

   40 update_stmt: init_stmt •

    ')'  reduce using rule 40 (update_stmt)


State 161

   38 loop_condition: init_stmt ';' operation ';' update_stmt •

    ')'  reduce using rule 38 (loop_condition)


State 162

   11 unq_declaration: type • ID

    ID  shift, and go to state 242


State 163

   11 unq_declaration: type • ID

    ID  shift, and go to state 243


State 164

   58 number: NUM_INT •

    ')'         reduce using rule 58 (number)
    AND         reduce using rule 58 (number)
    OR          reduce using rule 58 (number)
    GREATER     reduce using rule 58 (number)
    GREATER_EQ  reduce using rule 58 (number)
    LESS        reduce using rule 58 (number)
    LESS_EQ     reduce using rule 58 (number)
    EQUAL       reduce using rule 58 (number)
    NOT_EQ      reduce using rule 58 (number)
    '+'         reduce using rule 58 (number)
    '-'         reduce using rule 58 (number)
    '*'         reduce using rule 58 (number)
    '/'         reduce using rule 58 (number)
    FILTER      reduce using rule 58 (number)
    MAP         reduce using rule 58 (number)
    ':'         reduce using rule 58 (number)


State 165

   59 number: NUM_FLOAT •

    ')'         reduce using rule 59 (number)
    AND         reduce using rule 59 (number)
    OR          reduce using rule 59 (number)
    GREATER     reduce using rule 59 (number)
    GREATER_EQ  reduce using rule 59 (number)
    LESS        reduce using rule 59 (number)
    LESS_EQ     reduce using rule 59 (number)
    EQUAL       reduce using rule 59 (number)
    NOT_EQ      reduce using rule 59 (number)
    '+'         reduce using rule 59 (number)
    '-'         reduce using rule 59 (number)
    '*'         reduce using rule 59 (number)
    '/'         reduce using rule 59 (number)
    FILTER      reduce using rule 59 (number)
    MAP         reduce using rule 59 (number)
    ':'         reduce using rule 59 (number)


State 166

   57 const: NIL_CNST •

    ')'         reduce using rule 57 (const)
    AND         reduce using rule 57 (const)
    OR          reduce using rule 57 (const)
    GREATER     reduce using rule 57 (const)
    GREATER_EQ  reduce using rule 57 (const)
    LESS        reduce using rule 57 (const)
    LESS_EQ     reduce using rule 57 (const)
    EQUAL       reduce using rule 57 (const)
    NOT_EQ      reduce using rule 57 (const)
    '+'         reduce using rule 57 (const)
    '-'         reduce using rule 57 (const)
    '*'         reduce using rule 57 (const)
    '/'         reduce using rule 57 (const)
    FILTER      reduce using rule 57 (const)
    MAP         reduce using rule 57 (const)
    ':'         reduce using rule 57 (const)


State 167

   49 func_calling: ID • '(' $@3 calling_parameters $@4 ')'
   55 iden: ID •

    '('  shift, and go to state 244

    ')'         reduce using rule 55 (iden)
    AND         reduce using rule 55 (iden)
    OR          reduce using rule 55 (iden)
    GREATER     reduce using rule 55 (iden)
    GREATER_EQ  reduce using rule 55 (iden)
    LESS        reduce using rule 55 (iden)
    LESS_EQ     reduce using rule 55 (iden)
    EQUAL       reduce using rule 55 (iden)
    NOT_EQ      reduce using rule 55 (iden)
    '+'         reduce using rule 55 (iden)
    '-'         reduce using rule 55 (iden)
    '*'         reduce using rule 55 (iden)
    '/'         reduce using rule 55 (iden)
    FILTER      reduce using rule 55 (iden)
    MAP         reduce using rule 55 (iden)
    ':'         reduce using rule 55 (iden)


State 168

   54 expression: '(' • operation ')'

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 175
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    operation         go to state 245
    single_operation  go to state 179
    arith_binary      go to state 180
    term              go to state 181
    arith_single      go to state 182
    lst_single        go to state 183
    lst_binary        go to state 184


State 169

   83 arith_single: '+' • expression

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 246
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    single_operation  go to state 179
    arith_single      go to state 182
    lst_single        go to state 183


State 170

   84 arith_single: '-' • expression

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 247
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    single_operation  go to state 179
    arith_single      go to state 182
    lst_single        go to state 183


State 171

   85 lst_single: '%' • expression

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 248
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    single_operation  go to state 179
    arith_single      go to state 182
    lst_single        go to state 183


State 172

   86 lst_single: '?' • expression

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 249
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    single_operation  go to state 179
    arith_single      go to state 182
    lst_single        go to state 183


State 173

   76 single_operation: '!' • expression

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 250
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    single_operation  go to state 179
    arith_single      go to state 182
    lst_single        go to state 183


State 174

   50 expression: func_calling •

    ')'         reduce using rule 50 (expression)
    AND         reduce using rule 50 (expression)
    OR          reduce using rule 50 (expression)
    GREATER     reduce using rule 50 (expression)
    GREATER_EQ  reduce using rule 50 (expression)
    LESS        reduce using rule 50 (expression)
    LESS_EQ     reduce using rule 50 (expression)
    EQUAL       reduce using rule 50 (expression)
    NOT_EQ      reduce using rule 50 (expression)
    '+'         reduce using rule 50 (expression)
    '-'         reduce using rule 50 (expression)
    '*'         reduce using rule 50 (expression)
    '/'         reduce using rule 50 (expression)
    FILTER      reduce using rule 50 (expression)
    MAP         reduce using rule 50 (expression)
    ':'         reduce using rule 50 (expression)


State 175

   82 term: expression •

    ')'         reduce using rule 82 (term)
    AND         reduce using rule 82 (term)
    OR          reduce using rule 82 (term)
    GREATER     reduce using rule 82 (term)
    GREATER_EQ  reduce using rule 82 (term)
    LESS        reduce using rule 82 (term)
    LESS_EQ     reduce using rule 82 (term)
    EQUAL       reduce using rule 82 (term)
    NOT_EQ      reduce using rule 82 (term)
    '+'         reduce using rule 82 (term)
    '-'         reduce using rule 82 (term)
    '*'         reduce using rule 82 (term)
    '/'         reduce using rule 82 (term)
    FILTER      reduce using rule 82 (term)
    MAP         reduce using rule 82 (term)
    ':'         reduce using rule 82 (term)


State 176

   53 expression: iden •

    ')'         reduce using rule 53 (expression)
    AND         reduce using rule 53 (expression)
    OR          reduce using rule 53 (expression)
    GREATER     reduce using rule 53 (expression)
    GREATER_EQ  reduce using rule 53 (expression)
    LESS        reduce using rule 53 (expression)
    LESS_EQ     reduce using rule 53 (expression)
    EQUAL       reduce using rule 53 (expression)
    NOT_EQ      reduce using rule 53 (expression)
    '+'         reduce using rule 53 (expression)
    '-'         reduce using rule 53 (expression)
    '*'         reduce using rule 53 (expression)
    '/'         reduce using rule 53 (expression)
    FILTER      reduce using rule 53 (expression)
    MAP         reduce using rule 53 (expression)
    ':'         reduce using rule 53 (expression)


State 177

   52 expression: const •

    ')'         reduce using rule 52 (expression)
    AND         reduce using rule 52 (expression)
    OR          reduce using rule 52 (expression)
    GREATER     reduce using rule 52 (expression)
    GREATER_EQ  reduce using rule 52 (expression)
    LESS        reduce using rule 52 (expression)
    LESS_EQ     reduce using rule 52 (expression)
    EQUAL       reduce using rule 52 (expression)
    NOT_EQ      reduce using rule 52 (expression)
    '+'         reduce using rule 52 (expression)
    '-'         reduce using rule 52 (expression)
    '*'         reduce using rule 52 (expression)
    '/'         reduce using rule 52 (expression)
    FILTER      reduce using rule 52 (expression)
    MAP         reduce using rule 52 (expression)
    ':'         reduce using rule 52 (expression)


State 178

   56 const: number •

    ')'         reduce using rule 56 (const)
    AND         reduce using rule 56 (const)
    OR          reduce using rule 56 (const)
    GREATER     reduce using rule 56 (const)
    GREATER_EQ  reduce using rule 56 (const)
    LESS        reduce using rule 56 (const)
    LESS_EQ     reduce using rule 56 (const)
    EQUAL       reduce using rule 56 (const)
    NOT_EQ      reduce using rule 56 (const)
    '+'         reduce using rule 56 (const)
    '-'         reduce using rule 56 (const)
    '*'         reduce using rule 56 (const)
    '/'         reduce using rule 56 (const)
    FILTER      reduce using rule 56 (const)
    MAP         reduce using rule 56 (const)
    ':'         reduce using rule 56 (const)


State 179

   51 expression: single_operation •

    ')'         reduce using rule 51 (expression)
    AND         reduce using rule 51 (expression)
    OR          reduce using rule 51 (expression)
    GREATER     reduce using rule 51 (expression)
    GREATER_EQ  reduce using rule 51 (expression)
    LESS        reduce using rule 51 (expression)
    LESS_EQ     reduce using rule 51 (expression)
    EQUAL       reduce using rule 51 (expression)
    NOT_EQ      reduce using rule 51 (expression)
    '+'         reduce using rule 51 (expression)
    '-'         reduce using rule 51 (expression)
    '*'         reduce using rule 51 (expression)
    '/'         reduce using rule 51 (expression)
    FILTER      reduce using rule 51 (expression)
    MAP         reduce using rule 51 (expression)
    ':'         reduce using rule 51 (expression)


State 180

   77 arith_binary: arith_binary • '+' term
   78             | arith_binary • '-' term
   90 lst_binary: arith_binary •

    '+'  shift, and go to state 251
    '-'  shift, and go to state 252

    ')'         reduce using rule 90 (lst_binary)
    AND         reduce using rule 90 (lst_binary)
    OR          reduce using rule 90 (lst_binary)
    GREATER     reduce using rule 90 (lst_binary)
    GREATER_EQ  reduce using rule 90 (lst_binary)
    LESS        reduce using rule 90 (lst_binary)
    LESS_EQ     reduce using rule 90 (lst_binary)
    EQUAL       reduce using rule 90 (lst_binary)
    NOT_EQ      reduce using rule 90 (lst_binary)
    FILTER      reduce using rule 90 (lst_binary)
    MAP         reduce using rule 90 (lst_binary)
    ':'         reduce using rule 90 (lst_binary)


State 181

   79 arith_binary: term •
   80 term: term • '*' expression
   81     | term • '/' expression

    '*'  shift, and go to state 253
    '/'  shift, and go to state 254

    ')'         reduce using rule 79 (arith_binary)
    AND         reduce using rule 79 (arith_binary)
    OR          reduce using rule 79 (arith_binary)
    GREATER     reduce using rule 79 (arith_binary)
    GREATER_EQ  reduce using rule 79 (arith_binary)
    LESS        reduce using rule 79 (arith_binary)
    LESS_EQ     reduce using rule 79 (arith_binary)
    EQUAL       reduce using rule 79 (arith_binary)
    NOT_EQ      reduce using rule 79 (arith_binary)
    '+'         reduce using rule 79 (arith_binary)
    '-'         reduce using rule 79 (arith_binary)
    FILTER      reduce using rule 79 (arith_binary)
    MAP         reduce using rule 79 (arith_binary)
    ':'         reduce using rule 79 (arith_binary)


State 182

   74 single_operation: arith_single •

    ')'         reduce using rule 74 (single_operation)
    AND         reduce using rule 74 (single_operation)
    OR          reduce using rule 74 (single_operation)
    GREATER     reduce using rule 74 (single_operation)
    GREATER_EQ  reduce using rule 74 (single_operation)
    LESS        reduce using rule 74 (single_operation)
    LESS_EQ     reduce using rule 74 (single_operation)
    EQUAL       reduce using rule 74 (single_operation)
    NOT_EQ      reduce using rule 74 (single_operation)
    '+'         reduce using rule 74 (single_operation)
    '-'         reduce using rule 74 (single_operation)
    '*'         reduce using rule 74 (single_operation)
    '/'         reduce using rule 74 (single_operation)
    FILTER      reduce using rule 74 (single_operation)
    MAP         reduce using rule 74 (single_operation)
    ':'         reduce using rule 74 (single_operation)


State 183

   75 single_operation: lst_single •

    ')'         reduce using rule 75 (single_operation)
    AND         reduce using rule 75 (single_operation)
    OR          reduce using rule 75 (single_operation)
    GREATER     reduce using rule 75 (single_operation)
    GREATER_EQ  reduce using rule 75 (single_operation)
    LESS        reduce using rule 75 (single_operation)
    LESS_EQ     reduce using rule 75 (single_operation)
    EQUAL       reduce using rule 75 (single_operation)
    NOT_EQ      reduce using rule 75 (single_operation)
    '+'         reduce using rule 75 (single_operation)
    '-'         reduce using rule 75 (single_operation)
    '*'         reduce using rule 75 (single_operation)
    '/'         reduce using rule 75 (single_operation)
    FILTER      reduce using rule 75 (single_operation)
    MAP         reduce using rule 75 (single_operation)
    ':'         reduce using rule 75 (single_operation)


State 184

   65 operation: lst_binary •
   87 lst_binary: lst_binary • FILTER lst_binary
   88           | lst_binary • MAP lst_binary
   89           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 255
    MAP     shift, and go to state 256
    ':'     shift, and go to state 257

    ')'         reduce using rule 65 (operation)
    AND         reduce using rule 65 (operation)
    OR          reduce using rule 65 (operation)
    GREATER     reduce using rule 65 (operation)
    GREATER_EQ  reduce using rule 65 (operation)
    LESS        reduce using rule 65 (operation)
    LESS_EQ     reduce using rule 65 (operation)
    EQUAL       reduce using rule 65 (operation)
    NOT_EQ      reduce using rule 65 (operation)


State 185

   10 var_declaration: unq_declaration ';' •

    error           reduce using rule 10 (var_declaration)
    NUM_INT         reduce using rule 10 (var_declaration)
    NUM_FLOAT       reduce using rule 10 (var_declaration)
    NIL_CNST        reduce using rule 10 (var_declaration)
    ID              reduce using rule 10 (var_declaration)
    RETURN_STM      reduce using rule 10 (var_declaration)
    T_INT           reduce using rule 10 (var_declaration)
    T_FLOAT         reduce using rule 10 (var_declaration)
    IF_STMT         reduce using rule 10 (var_declaration)
    FOR_STMT        reduce using rule 10 (var_declaration)
    OUTPUT_WRITE    reduce using rule 10 (var_declaration)
    OUTPUT_WRITELN  reduce using rule 10 (var_declaration)
    INPUT_READ      reduce using rule 10 (var_declaration)
    '('             reduce using rule 10 (var_declaration)
    '{'             reduce using rule 10 (var_declaration)
    '}'             reduce using rule 10 (var_declaration)
    '+'             reduce using rule 10 (var_declaration)
    '-'             reduce using rule 10 (var_declaration)
    '%'             reduce using rule 10 (var_declaration)
    '?'             reduce using rule 10 (var_declaration)
    '!'             reduce using rule 10 (var_declaration)


State 186

   72 operation: operation AND • operation

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 175
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    operation         go to state 258
    single_operation  go to state 179
    arith_binary      go to state 180
    term              go to state 181
    arith_single      go to state 182
    lst_single        go to state 183
    lst_binary        go to state 184


State 187

   73 operation: operation OR • operation

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 175
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    operation         go to state 259
    single_operation  go to state 179
    arith_binary      go to state 180
    term              go to state 181
    arith_single      go to state 182
    lst_single        go to state 183
    lst_binary        go to state 184


State 188

   66 operation: operation GREATER • operation

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 175
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    operation         go to state 260
    single_operation  go to state 179
    arith_binary      go to state 180
    term              go to state 181
    arith_single      go to state 182
    lst_single        go to state 183
    lst_binary        go to state 184


State 189

   67 operation: operation GREATER_EQ • operation

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 175
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    operation         go to state 261
    single_operation  go to state 179
    arith_binary      go to state 180
    term              go to state 181
    arith_single      go to state 182
    lst_single        go to state 183
    lst_binary        go to state 184


State 190

   68 operation: operation LESS • operation

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 175
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    operation         go to state 262
    single_operation  go to state 179
    arith_binary      go to state 180
    term              go to state 181
    arith_single      go to state 182
    lst_single        go to state 183
    lst_binary        go to state 184


State 191

   69 operation: operation LESS_EQ • operation

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 175
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    operation         go to state 263
    single_operation  go to state 179
    arith_binary      go to state 180
    term              go to state 181
    arith_single      go to state 182
    lst_single        go to state 183
    lst_binary        go to state 184


State 192

   70 operation: operation EQUAL • operation

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 175
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    operation         go to state 264
    single_operation  go to state 179
    arith_binary      go to state 180
    term              go to state 181
    arith_single      go to state 182
    lst_single        go to state 183
    lst_binary        go to state 184


State 193

   71 operation: operation NOT_EQ • operation

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 175
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    operation         go to state 265
    single_operation  go to state 179
    arith_binary      go to state 180
    term              go to state 181
    arith_single      go to state 182
    lst_single        go to state 183
    lst_binary        go to state 184


State 194

   58 number: NUM_INT •

    ')'         reduce using rule 58 (number)
    ','         reduce using rule 58 (number)
    AND         reduce using rule 58 (number)
    OR          reduce using rule 58 (number)
    GREATER     reduce using rule 58 (number)
    GREATER_EQ  reduce using rule 58 (number)
    LESS        reduce using rule 58 (number)
    LESS_EQ     reduce using rule 58 (number)
    EQUAL       reduce using rule 58 (number)
    NOT_EQ      reduce using rule 58 (number)
    '+'         reduce using rule 58 (number)
    '-'         reduce using rule 58 (number)
    '*'         reduce using rule 58 (number)
    '/'         reduce using rule 58 (number)
    FILTER      reduce using rule 58 (number)
    MAP         reduce using rule 58 (number)
    ':'         reduce using rule 58 (number)


State 195

   59 number: NUM_FLOAT •

    ')'         reduce using rule 59 (number)
    ','         reduce using rule 59 (number)
    AND         reduce using rule 59 (number)
    OR          reduce using rule 59 (number)
    GREATER     reduce using rule 59 (number)
    GREATER_EQ  reduce using rule 59 (number)
    LESS        reduce using rule 59 (number)
    LESS_EQ     reduce using rule 59 (number)
    EQUAL       reduce using rule 59 (number)
    NOT_EQ      reduce using rule 59 (number)
    '+'         reduce using rule 59 (number)
    '-'         reduce using rule 59 (number)
    '*'         reduce using rule 59 (number)
    '/'         reduce using rule 59 (number)
    FILTER      reduce using rule 59 (number)
    MAP         reduce using rule 59 (number)
    ':'         reduce using rule 59 (number)


State 196

   57 const: NIL_CNST •

    ')'         reduce using rule 57 (const)
    ','         reduce using rule 57 (const)
    AND         reduce using rule 57 (const)
    OR          reduce using rule 57 (const)
    GREATER     reduce using rule 57 (const)
    GREATER_EQ  reduce using rule 57 (const)
    LESS        reduce using rule 57 (const)
    LESS_EQ     reduce using rule 57 (const)
    EQUAL       reduce using rule 57 (const)
    NOT_EQ      reduce using rule 57 (const)
    '+'         reduce using rule 57 (const)
    '-'         reduce using rule 57 (const)
    '*'         reduce using rule 57 (const)
    '/'         reduce using rule 57 (const)
    FILTER      reduce using rule 57 (const)
    MAP         reduce using rule 57 (const)
    ':'         reduce using rule 57 (const)


State 197

   49 func_calling: ID • '(' $@3 calling_parameters $@4 ')'
   55 iden: ID •

    '('  shift, and go to state 266

    ')'         reduce using rule 55 (iden)
    ','         reduce using rule 55 (iden)
    AND         reduce using rule 55 (iden)
    OR          reduce using rule 55 (iden)
    GREATER     reduce using rule 55 (iden)
    GREATER_EQ  reduce using rule 55 (iden)
    LESS        reduce using rule 55 (iden)
    LESS_EQ     reduce using rule 55 (iden)
    EQUAL       reduce using rule 55 (iden)
    NOT_EQ      reduce using rule 55 (iden)
    '+'         reduce using rule 55 (iden)
    '-'         reduce using rule 55 (iden)
    '*'         reduce using rule 55 (iden)
    '/'         reduce using rule 55 (iden)
    FILTER      reduce using rule 55 (iden)
    MAP         reduce using rule 55 (iden)
    ':'         reduce using rule 55 (iden)


State 198

   54 expression: '(' • operation ')'

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 175
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    operation         go to state 267
    single_operation  go to state 179
    arith_binary      go to state 180
    term              go to state 181
    arith_single      go to state 182
    lst_single        go to state 183
    lst_binary        go to state 184


State 199

   83 arith_single: '+' • expression

    NUM_INT    shift, and go to state 194
    NUM_FLOAT  shift, and go to state 195
    NIL_CNST   shift, and go to state 196
    ID         shift, and go to state 197
    '('        shift, and go to state 198
    '+'        shift, and go to state 199
    '-'        shift, and go to state 200
    '%'        shift, and go to state 201
    '?'        shift, and go to state 202
    '!'        shift, and go to state 203

    func_calling      go to state 204
    expression        go to state 268
    iden              go to state 206
    const             go to state 207
    number            go to state 208
    single_operation  go to state 209
    arith_single      go to state 212
    lst_single        go to state 213


State 200

   84 arith_single: '-' • expression

    NUM_INT    shift, and go to state 194
    NUM_FLOAT  shift, and go to state 195
    NIL_CNST   shift, and go to state 196
    ID         shift, and go to state 197
    '('        shift, and go to state 198
    '+'        shift, and go to state 199
    '-'        shift, and go to state 200
    '%'        shift, and go to state 201
    '?'        shift, and go to state 202
    '!'        shift, and go to state 203

    func_calling      go to state 204
    expression        go to state 269
    iden              go to state 206
    const             go to state 207
    number            go to state 208
    single_operation  go to state 209
    arith_single      go to state 212
    lst_single        go to state 213


State 201

   85 lst_single: '%' • expression

    NUM_INT    shift, and go to state 194
    NUM_FLOAT  shift, and go to state 195
    NIL_CNST   shift, and go to state 196
    ID         shift, and go to state 197
    '('        shift, and go to state 198
    '+'        shift, and go to state 199
    '-'        shift, and go to state 200
    '%'        shift, and go to state 201
    '?'        shift, and go to state 202
    '!'        shift, and go to state 203

    func_calling      go to state 204
    expression        go to state 270
    iden              go to state 206
    const             go to state 207
    number            go to state 208
    single_operation  go to state 209
    arith_single      go to state 212
    lst_single        go to state 213


State 202

   86 lst_single: '?' • expression

    NUM_INT    shift, and go to state 194
    NUM_FLOAT  shift, and go to state 195
    NIL_CNST   shift, and go to state 196
    ID         shift, and go to state 197
    '('        shift, and go to state 198
    '+'        shift, and go to state 199
    '-'        shift, and go to state 200
    '%'        shift, and go to state 201
    '?'        shift, and go to state 202
    '!'        shift, and go to state 203

    func_calling      go to state 204
    expression        go to state 271
    iden              go to state 206
    const             go to state 207
    number            go to state 208
    single_operation  go to state 209
    arith_single      go to state 212
    lst_single        go to state 213


State 203

   76 single_operation: '!' • expression

    NUM_INT    shift, and go to state 194
    NUM_FLOAT  shift, and go to state 195
    NIL_CNST   shift, and go to state 196
    ID         shift, and go to state 197
    '('        shift, and go to state 198
    '+'        shift, and go to state 199
    '-'        shift, and go to state 200
    '%'        shift, and go to state 201
    '?'        shift, and go to state 202
    '!'        shift, and go to state 203

    func_calling      go to state 204
    expression        go to state 272
    iden              go to state 206
    const             go to state 207
    number            go to state 208
    single_operation  go to state 209
    arith_single      go to state 212
    lst_single        go to state 213


State 204

   50 expression: func_calling •

    ')'         reduce using rule 50 (expression)
    ','         reduce using rule 50 (expression)
    AND         reduce using rule 50 (expression)
    OR          reduce using rule 50 (expression)
    GREATER     reduce using rule 50 (expression)
    GREATER_EQ  reduce using rule 50 (expression)
    LESS        reduce using rule 50 (expression)
    LESS_EQ     reduce using rule 50 (expression)
    EQUAL       reduce using rule 50 (expression)
    NOT_EQ      reduce using rule 50 (expression)
    '+'         reduce using rule 50 (expression)
    '-'         reduce using rule 50 (expression)
    '*'         reduce using rule 50 (expression)
    '/'         reduce using rule 50 (expression)
    FILTER      reduce using rule 50 (expression)
    MAP         reduce using rule 50 (expression)
    ':'         reduce using rule 50 (expression)


State 205

   82 term: expression •

    ')'         reduce using rule 82 (term)
    ','         reduce using rule 82 (term)
    AND         reduce using rule 82 (term)
    OR          reduce using rule 82 (term)
    GREATER     reduce using rule 82 (term)
    GREATER_EQ  reduce using rule 82 (term)
    LESS        reduce using rule 82 (term)
    LESS_EQ     reduce using rule 82 (term)
    EQUAL       reduce using rule 82 (term)
    NOT_EQ      reduce using rule 82 (term)
    '+'         reduce using rule 82 (term)
    '-'         reduce using rule 82 (term)
    '*'         reduce using rule 82 (term)
    '/'         reduce using rule 82 (term)
    FILTER      reduce using rule 82 (term)
    MAP         reduce using rule 82 (term)
    ':'         reduce using rule 82 (term)


State 206

   53 expression: iden •

    ')'         reduce using rule 53 (expression)
    ','         reduce using rule 53 (expression)
    AND         reduce using rule 53 (expression)
    OR          reduce using rule 53 (expression)
    GREATER     reduce using rule 53 (expression)
    GREATER_EQ  reduce using rule 53 (expression)
    LESS        reduce using rule 53 (expression)
    LESS_EQ     reduce using rule 53 (expression)
    EQUAL       reduce using rule 53 (expression)
    NOT_EQ      reduce using rule 53 (expression)
    '+'         reduce using rule 53 (expression)
    '-'         reduce using rule 53 (expression)
    '*'         reduce using rule 53 (expression)
    '/'         reduce using rule 53 (expression)
    FILTER      reduce using rule 53 (expression)
    MAP         reduce using rule 53 (expression)
    ':'         reduce using rule 53 (expression)


State 207

   52 expression: const •

    ')'         reduce using rule 52 (expression)
    ','         reduce using rule 52 (expression)
    AND         reduce using rule 52 (expression)
    OR          reduce using rule 52 (expression)
    GREATER     reduce using rule 52 (expression)
    GREATER_EQ  reduce using rule 52 (expression)
    LESS        reduce using rule 52 (expression)
    LESS_EQ     reduce using rule 52 (expression)
    EQUAL       reduce using rule 52 (expression)
    NOT_EQ      reduce using rule 52 (expression)
    '+'         reduce using rule 52 (expression)
    '-'         reduce using rule 52 (expression)
    '*'         reduce using rule 52 (expression)
    '/'         reduce using rule 52 (expression)
    FILTER      reduce using rule 52 (expression)
    MAP         reduce using rule 52 (expression)
    ':'         reduce using rule 52 (expression)


State 208

   56 const: number •

    ')'         reduce using rule 56 (const)
    ','         reduce using rule 56 (const)
    AND         reduce using rule 56 (const)
    OR          reduce using rule 56 (const)
    GREATER     reduce using rule 56 (const)
    GREATER_EQ  reduce using rule 56 (const)
    LESS        reduce using rule 56 (const)
    LESS_EQ     reduce using rule 56 (const)
    EQUAL       reduce using rule 56 (const)
    NOT_EQ      reduce using rule 56 (const)
    '+'         reduce using rule 56 (const)
    '-'         reduce using rule 56 (const)
    '*'         reduce using rule 56 (const)
    '/'         reduce using rule 56 (const)
    FILTER      reduce using rule 56 (const)
    MAP         reduce using rule 56 (const)
    ':'         reduce using rule 56 (const)


State 209

   51 expression: single_operation •

    ')'         reduce using rule 51 (expression)
    ','         reduce using rule 51 (expression)
    AND         reduce using rule 51 (expression)
    OR          reduce using rule 51 (expression)
    GREATER     reduce using rule 51 (expression)
    GREATER_EQ  reduce using rule 51 (expression)
    LESS        reduce using rule 51 (expression)
    LESS_EQ     reduce using rule 51 (expression)
    EQUAL       reduce using rule 51 (expression)
    NOT_EQ      reduce using rule 51 (expression)
    '+'         reduce using rule 51 (expression)
    '-'         reduce using rule 51 (expression)
    '*'         reduce using rule 51 (expression)
    '/'         reduce using rule 51 (expression)
    FILTER      reduce using rule 51 (expression)
    MAP         reduce using rule 51 (expression)
    ':'         reduce using rule 51 (expression)


State 210

   77 arith_binary: arith_binary • '+' term
   78             | arith_binary • '-' term
   90 lst_binary: arith_binary •

    '+'  shift, and go to state 273
    '-'  shift, and go to state 274

    ')'         reduce using rule 90 (lst_binary)
    ','         reduce using rule 90 (lst_binary)
    AND         reduce using rule 90 (lst_binary)
    OR          reduce using rule 90 (lst_binary)
    GREATER     reduce using rule 90 (lst_binary)
    GREATER_EQ  reduce using rule 90 (lst_binary)
    LESS        reduce using rule 90 (lst_binary)
    LESS_EQ     reduce using rule 90 (lst_binary)
    EQUAL       reduce using rule 90 (lst_binary)
    NOT_EQ      reduce using rule 90 (lst_binary)
    FILTER      reduce using rule 90 (lst_binary)
    MAP         reduce using rule 90 (lst_binary)
    ':'         reduce using rule 90 (lst_binary)


State 211

   79 arith_binary: term •
   80 term: term • '*' expression
   81     | term • '/' expression

    '*'  shift, and go to state 275
    '/'  shift, and go to state 276

    ')'         reduce using rule 79 (arith_binary)
    ','         reduce using rule 79 (arith_binary)
    AND         reduce using rule 79 (arith_binary)
    OR          reduce using rule 79 (arith_binary)
    GREATER     reduce using rule 79 (arith_binary)
    GREATER_EQ  reduce using rule 79 (arith_binary)
    LESS        reduce using rule 79 (arith_binary)
    LESS_EQ     reduce using rule 79 (arith_binary)
    EQUAL       reduce using rule 79 (arith_binary)
    NOT_EQ      reduce using rule 79 (arith_binary)
    '+'         reduce using rule 79 (arith_binary)
    '-'         reduce using rule 79 (arith_binary)
    FILTER      reduce using rule 79 (arith_binary)
    MAP         reduce using rule 79 (arith_binary)
    ':'         reduce using rule 79 (arith_binary)


State 212

   74 single_operation: arith_single •

    ')'         reduce using rule 74 (single_operation)
    ','         reduce using rule 74 (single_operation)
    AND         reduce using rule 74 (single_operation)
    OR          reduce using rule 74 (single_operation)
    GREATER     reduce using rule 74 (single_operation)
    GREATER_EQ  reduce using rule 74 (single_operation)
    LESS        reduce using rule 74 (single_operation)
    LESS_EQ     reduce using rule 74 (single_operation)
    EQUAL       reduce using rule 74 (single_operation)
    NOT_EQ      reduce using rule 74 (single_operation)
    '+'         reduce using rule 74 (single_operation)
    '-'         reduce using rule 74 (single_operation)
    '*'         reduce using rule 74 (single_operation)
    '/'         reduce using rule 74 (single_operation)
    FILTER      reduce using rule 74 (single_operation)
    MAP         reduce using rule 74 (single_operation)
    ':'         reduce using rule 74 (single_operation)


State 213

   75 single_operation: lst_single •

    ')'         reduce using rule 75 (single_operation)
    ','         reduce using rule 75 (single_operation)
    AND         reduce using rule 75 (single_operation)
    OR          reduce using rule 75 (single_operation)
    GREATER     reduce using rule 75 (single_operation)
    GREATER_EQ  reduce using rule 75 (single_operation)
    LESS        reduce using rule 75 (single_operation)
    LESS_EQ     reduce using rule 75 (single_operation)
    EQUAL       reduce using rule 75 (single_operation)
    NOT_EQ      reduce using rule 75 (single_operation)
    '+'         reduce using rule 75 (single_operation)
    '-'         reduce using rule 75 (single_operation)
    '*'         reduce using rule 75 (single_operation)
    '/'         reduce using rule 75 (single_operation)
    FILTER      reduce using rule 75 (single_operation)
    MAP         reduce using rule 75 (single_operation)
    ':'         reduce using rule 75 (single_operation)


State 214

   65 operation: lst_binary •
   87 lst_binary: lst_binary • FILTER lst_binary
   88           | lst_binary • MAP lst_binary
   89           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 277
    MAP     shift, and go to state 278
    ':'     shift, and go to state 279

    ')'         reduce using rule 65 (operation)
    ','         reduce using rule 65 (operation)
    AND         reduce using rule 65 (operation)
    OR          reduce using rule 65 (operation)
    GREATER     reduce using rule 65 (operation)
    GREATER_EQ  reduce using rule 65 (operation)
    LESS        reduce using rule 65 (operation)
    LESS_EQ     reduce using rule 65 (operation)
    EQUAL       reduce using rule 65 (operation)
    NOT_EQ      reduce using rule 65 (operation)


State 215

   72 operation: operation AND • operation

    NUM_INT    shift, and go to state 194
    NUM_FLOAT  shift, and go to state 195
    NIL_CNST   shift, and go to state 196
    ID         shift, and go to state 197
    '('        shift, and go to state 198
    '+'        shift, and go to state 199
    '-'        shift, and go to state 200
    '%'        shift, and go to state 201
    '?'        shift, and go to state 202
    '!'        shift, and go to state 203

    func_calling      go to state 204
    expression        go to state 205
    iden              go to state 206
    const             go to state 207
    number            go to state 208
    operation         go to state 280
    single_operation  go to state 209
    arith_binary      go to state 210
    term              go to state 211
    arith_single      go to state 212
    lst_single        go to state 213
    lst_binary        go to state 214


State 216

   73 operation: operation OR • operation

    NUM_INT    shift, and go to state 194
    NUM_FLOAT  shift, and go to state 195
    NIL_CNST   shift, and go to state 196
    ID         shift, and go to state 197
    '('        shift, and go to state 198
    '+'        shift, and go to state 199
    '-'        shift, and go to state 200
    '%'        shift, and go to state 201
    '?'        shift, and go to state 202
    '!'        shift, and go to state 203

    func_calling      go to state 204
    expression        go to state 205
    iden              go to state 206
    const             go to state 207
    number            go to state 208
    operation         go to state 281
    single_operation  go to state 209
    arith_binary      go to state 210
    term              go to state 211
    arith_single      go to state 212
    lst_single        go to state 213
    lst_binary        go to state 214


State 217

   66 operation: operation GREATER • operation

    NUM_INT    shift, and go to state 194
    NUM_FLOAT  shift, and go to state 195
    NIL_CNST   shift, and go to state 196
    ID         shift, and go to state 197
    '('        shift, and go to state 198
    '+'        shift, and go to state 199
    '-'        shift, and go to state 200
    '%'        shift, and go to state 201
    '?'        shift, and go to state 202
    '!'        shift, and go to state 203

    func_calling      go to state 204
    expression        go to state 205
    iden              go to state 206
    const             go to state 207
    number            go to state 208
    operation         go to state 282
    single_operation  go to state 209
    arith_binary      go to state 210
    term              go to state 211
    arith_single      go to state 212
    lst_single        go to state 213
    lst_binary        go to state 214


State 218

   67 operation: operation GREATER_EQ • operation

    NUM_INT    shift, and go to state 194
    NUM_FLOAT  shift, and go to state 195
    NIL_CNST   shift, and go to state 196
    ID         shift, and go to state 197
    '('        shift, and go to state 198
    '+'        shift, and go to state 199
    '-'        shift, and go to state 200
    '%'        shift, and go to state 201
    '?'        shift, and go to state 202
    '!'        shift, and go to state 203

    func_calling      go to state 204
    expression        go to state 205
    iden              go to state 206
    const             go to state 207
    number            go to state 208
    operation         go to state 283
    single_operation  go to state 209
    arith_binary      go to state 210
    term              go to state 211
    arith_single      go to state 212
    lst_single        go to state 213
    lst_binary        go to state 214


State 219

   68 operation: operation LESS • operation

    NUM_INT    shift, and go to state 194
    NUM_FLOAT  shift, and go to state 195
    NIL_CNST   shift, and go to state 196
    ID         shift, and go to state 197
    '('        shift, and go to state 198
    '+'        shift, and go to state 199
    '-'        shift, and go to state 200
    '%'        shift, and go to state 201
    '?'        shift, and go to state 202
    '!'        shift, and go to state 203

    func_calling      go to state 204
    expression        go to state 205
    iden              go to state 206
    const             go to state 207
    number            go to state 208
    operation         go to state 284
    single_operation  go to state 209
    arith_binary      go to state 210
    term              go to state 211
    arith_single      go to state 212
    lst_single        go to state 213
    lst_binary        go to state 214


State 220

   69 operation: operation LESS_EQ • operation

    NUM_INT    shift, and go to state 194
    NUM_FLOAT  shift, and go to state 195
    NIL_CNST   shift, and go to state 196
    ID         shift, and go to state 197
    '('        shift, and go to state 198
    '+'        shift, and go to state 199
    '-'        shift, and go to state 200
    '%'        shift, and go to state 201
    '?'        shift, and go to state 202
    '!'        shift, and go to state 203

    func_calling      go to state 204
    expression        go to state 205
    iden              go to state 206
    const             go to state 207
    number            go to state 208
    operation         go to state 285
    single_operation  go to state 209
    arith_binary      go to state 210
    term              go to state 211
    arith_single      go to state 212
    lst_single        go to state 213
    lst_binary        go to state 214


State 221

   70 operation: operation EQUAL • operation

    NUM_INT    shift, and go to state 194
    NUM_FLOAT  shift, and go to state 195
    NIL_CNST   shift, and go to state 196
    ID         shift, and go to state 197
    '('        shift, and go to state 198
    '+'        shift, and go to state 199
    '-'        shift, and go to state 200
    '%'        shift, and go to state 201
    '?'        shift, and go to state 202
    '!'        shift, and go to state 203

    func_calling      go to state 204
    expression        go to state 205
    iden              go to state 206
    const             go to state 207
    number            go to state 208
    operation         go to state 286
    single_operation  go to state 209
    arith_binary      go to state 210
    term              go to state 211
    arith_single      go to state 212
    lst_single        go to state 213
    lst_binary        go to state 214


State 222

   71 operation: operation NOT_EQ • operation

    NUM_INT    shift, and go to state 194
    NUM_FLOAT  shift, and go to state 195
    NIL_CNST   shift, and go to state 196
    ID         shift, and go to state 197
    '('        shift, and go to state 198
    '+'        shift, and go to state 199
    '-'        shift, and go to state 200
    '%'        shift, and go to state 201
    '?'        shift, and go to state 202
    '!'        shift, and go to state 203

    func_calling      go to state 204
    expression        go to state 205
    iden              go to state 206
    const             go to state 207
    number            go to state 208
    operation         go to state 287
    single_operation  go to state 209
    arith_binary      go to state 210
    term              go to state 211
    arith_single      go to state 212
    lst_single        go to state 213
    lst_binary        go to state 214


State 223

   32 command: error • ';'

    ';'  shift, and go to state 288


State 224

   36 return_stmt: RETURN_STM • operation ';'

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 71
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    operation         go to state 289
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 225

   34 conditional_stmt: IF_STMT • '(' operation ')' command
   35                 | IF_STMT • '(' operation ')' command ELSE_STMT command

    '('  shift, and go to state 290


State 226

   37 iteration: FOR_STMT • '(' loop_condition ')' command

    '('  shift, and go to state 291


State 227

   42 output: OUTPUT_WRITE • '(' operation ')' ';'
   44       | OUTPUT_WRITE • '(' STRING ')' ';'

    '('  shift, and go to state 292


State 228

   43 output: OUTPUT_WRITELN • '(' operation ')' ';'
   45       | OUTPUT_WRITELN • '(' STRING ')' ';'

    '('  shift, and go to state 293


State 229

   46 input: INPUT_READ • '(' operation ')' ';'

    '('  shift, and go to state 294


State 230

   22 command: var_declaration •

    error           reduce using rule 22 (command)
    NUM_INT         reduce using rule 22 (command)
    NUM_FLOAT       reduce using rule 22 (command)
    NIL_CNST        reduce using rule 22 (command)
    ID              reduce using rule 22 (command)
    RETURN_STM      reduce using rule 22 (command)
    T_INT           reduce using rule 22 (command)
    T_FLOAT         reduce using rule 22 (command)
    IF_STMT         reduce using rule 22 (command)
    ELSE_STMT       reduce using rule 22 (command)
    FOR_STMT        reduce using rule 22 (command)
    OUTPUT_WRITE    reduce using rule 22 (command)
    OUTPUT_WRITELN  reduce using rule 22 (command)
    INPUT_READ      reduce using rule 22 (command)
    '('             reduce using rule 22 (command)
    '{'             reduce using rule 22 (command)
    '}'             reduce using rule 22 (command)
    '+'             reduce using rule 22 (command)
    '-'             reduce using rule 22 (command)
    '%'             reduce using rule 22 (command)
    '?'             reduce using rule 22 (command)
    '!'             reduce using rule 22 (command)


State 231

   10 var_declaration: unq_declaration • ';'

    ';'  shift, and go to state 295


State 232

   30 command: $@2 • '{' block_commands '}'

    '{'  shift, and go to state 296


State 233

   23 command: init_variable •

    error           reduce using rule 23 (command)
    NUM_INT         reduce using rule 23 (command)
    NUM_FLOAT       reduce using rule 23 (command)
    NIL_CNST        reduce using rule 23 (command)
    ID              reduce using rule 23 (command)
    RETURN_STM      reduce using rule 23 (command)
    T_INT           reduce using rule 23 (command)
    T_FLOAT         reduce using rule 23 (command)
    IF_STMT         reduce using rule 23 (command)
    ELSE_STMT       reduce using rule 23 (command)
    FOR_STMT        reduce using rule 23 (command)
    OUTPUT_WRITE    reduce using rule 23 (command)
    OUTPUT_WRITELN  reduce using rule 23 (command)
    INPUT_READ      reduce using rule 23 (command)
    '('             reduce using rule 23 (command)
    '{'             reduce using rule 23 (command)
    '}'             reduce using rule 23 (command)
    '+'             reduce using rule 23 (command)
    '-'             reduce using rule 23 (command)
    '%'             reduce using rule 23 (command)
    '?'             reduce using rule 23 (command)
    '!'             reduce using rule 23 (command)


State 234

   24 command: conditional_stmt •

    error           reduce using rule 24 (command)
    NUM_INT         reduce using rule 24 (command)
    NUM_FLOAT       reduce using rule 24 (command)
    NIL_CNST        reduce using rule 24 (command)
    ID              reduce using rule 24 (command)
    RETURN_STM      reduce using rule 24 (command)
    T_INT           reduce using rule 24 (command)
    T_FLOAT         reduce using rule 24 (command)
    IF_STMT         reduce using rule 24 (command)
    ELSE_STMT       reduce using rule 24 (command)
    FOR_STMT        reduce using rule 24 (command)
    OUTPUT_WRITE    reduce using rule 24 (command)
    OUTPUT_WRITELN  reduce using rule 24 (command)
    INPUT_READ      reduce using rule 24 (command)
    '('             reduce using rule 24 (command)
    '{'             reduce using rule 24 (command)
    '}'             reduce using rule 24 (command)
    '+'             reduce using rule 24 (command)
    '-'             reduce using rule 24 (command)
    '%'             reduce using rule 24 (command)
    '?'             reduce using rule 24 (command)
    '!'             reduce using rule 24 (command)


State 235

   25 command: return_stmt •

    error           reduce using rule 25 (command)
    NUM_INT         reduce using rule 25 (command)
    NUM_FLOAT       reduce using rule 25 (command)
    NIL_CNST        reduce using rule 25 (command)
    ID              reduce using rule 25 (command)
    RETURN_STM      reduce using rule 25 (command)
    T_INT           reduce using rule 25 (command)
    T_FLOAT         reduce using rule 25 (command)
    IF_STMT         reduce using rule 25 (command)
    ELSE_STMT       reduce using rule 25 (command)
    FOR_STMT        reduce using rule 25 (command)
    OUTPUT_WRITE    reduce using rule 25 (command)
    OUTPUT_WRITELN  reduce using rule 25 (command)
    INPUT_READ      reduce using rule 25 (command)
    '('             reduce using rule 25 (command)
    '{'             reduce using rule 25 (command)
    '}'             reduce using rule 25 (command)
    '+'             reduce using rule 25 (command)
    '-'             reduce using rule 25 (command)
    '%'             reduce using rule 25 (command)
    '?'             reduce using rule 25 (command)
    '!'             reduce using rule 25 (command)


State 236

   26 command: iteration •

    error           reduce using rule 26 (command)
    NUM_INT         reduce using rule 26 (command)
    NUM_FLOAT       reduce using rule 26 (command)
    NIL_CNST        reduce using rule 26 (command)
    ID              reduce using rule 26 (command)
    RETURN_STM      reduce using rule 26 (command)
    T_INT           reduce using rule 26 (command)
    T_FLOAT         reduce using rule 26 (command)
    IF_STMT         reduce using rule 26 (command)
    ELSE_STMT       reduce using rule 26 (command)
    FOR_STMT        reduce using rule 26 (command)
    OUTPUT_WRITE    reduce using rule 26 (command)
    OUTPUT_WRITELN  reduce using rule 26 (command)
    INPUT_READ      reduce using rule 26 (command)
    '('             reduce using rule 26 (command)
    '{'             reduce using rule 26 (command)
    '}'             reduce using rule 26 (command)
    '+'             reduce using rule 26 (command)
    '-'             reduce using rule 26 (command)
    '%'             reduce using rule 26 (command)
    '?'             reduce using rule 26 (command)
    '!'             reduce using rule 26 (command)


State 237

   33 init_variable: init_stmt • ';'

    ';'  shift, and go to state 297


State 238

   28 command: output •

    error           reduce using rule 28 (command)
    NUM_INT         reduce using rule 28 (command)
    NUM_FLOAT       reduce using rule 28 (command)
    NIL_CNST        reduce using rule 28 (command)
    ID              reduce using rule 28 (command)
    RETURN_STM      reduce using rule 28 (command)
    T_INT           reduce using rule 28 (command)
    T_FLOAT         reduce using rule 28 (command)
    IF_STMT         reduce using rule 28 (command)
    ELSE_STMT       reduce using rule 28 (command)
    FOR_STMT        reduce using rule 28 (command)
    OUTPUT_WRITE    reduce using rule 28 (command)
    OUTPUT_WRITELN  reduce using rule 28 (command)
    INPUT_READ      reduce using rule 28 (command)
    '('             reduce using rule 28 (command)
    '{'             reduce using rule 28 (command)
    '}'             reduce using rule 28 (command)
    '+'             reduce using rule 28 (command)
    '-'             reduce using rule 28 (command)
    '%'             reduce using rule 28 (command)
    '?'             reduce using rule 28 (command)
    '!'             reduce using rule 28 (command)


State 239

   27 command: input •

    error           reduce using rule 27 (command)
    NUM_INT         reduce using rule 27 (command)
    NUM_FLOAT       reduce using rule 27 (command)
    NIL_CNST        reduce using rule 27 (command)
    ID              reduce using rule 27 (command)
    RETURN_STM      reduce using rule 27 (command)
    T_INT           reduce using rule 27 (command)
    T_FLOAT         reduce using rule 27 (command)
    IF_STMT         reduce using rule 27 (command)
    ELSE_STMT       reduce using rule 27 (command)
    FOR_STMT        reduce using rule 27 (command)
    OUTPUT_WRITE    reduce using rule 27 (command)
    OUTPUT_WRITELN  reduce using rule 27 (command)
    INPUT_READ      reduce using rule 27 (command)
    '('             reduce using rule 27 (command)
    '{'             reduce using rule 27 (command)
    '}'             reduce using rule 27 (command)
    '+'             reduce using rule 27 (command)
    '-'             reduce using rule 27 (command)
    '%'             reduce using rule 27 (command)
    '?'             reduce using rule 27 (command)
    '!'             reduce using rule 27 (command)


State 240

   31 command: operation • ';'
   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ';'         shift, and go to state 298
    AND         shift, and go to state 89
    OR          shift, and go to state 90
    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94
    EQUAL       shift, and go to state 95
    NOT_EQ      shift, and go to state 96


State 241

   39 init_stmt: ID • '=' operation

    '='  shift, and go to state 299


State 242

   11 unq_declaration: type ID •

    ')'  reduce using rule 11 (unq_declaration)
    ','  reduce using rule 11 (unq_declaration)


State 243

   11 unq_declaration: type ID •

    ';'  reduce using rule 11 (unq_declaration)


State 244

   49 func_calling: ID '(' • $@3 calling_parameters $@4 ')'

    NUM_INT    reduce using rule 47 ($@3)
    NUM_FLOAT  reduce using rule 47 ($@3)
    NIL_CNST   reduce using rule 47 ($@3)
    ID         reduce using rule 47 ($@3)
    '('        reduce using rule 47 ($@3)
    ')'        reduce using rule 47 ($@3)
    '+'        reduce using rule 47 ($@3)
    '-'        reduce using rule 47 ($@3)
    '%'        reduce using rule 47 ($@3)
    '?'        reduce using rule 47 ($@3)
    '!'        reduce using rule 47 ($@3)

    $@3  go to state 300


State 245

   54 expression: '(' operation • ')'
   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ')'         shift, and go to state 301
    AND         shift, and go to state 186
    OR          shift, and go to state 187
    GREATER     shift, and go to state 188
    GREATER_EQ  shift, and go to state 189
    LESS        shift, and go to state 190
    LESS_EQ     shift, and go to state 191
    EQUAL       shift, and go to state 192
    NOT_EQ      shift, and go to state 193


State 246

   83 arith_single: '+' expression •

    ')'         reduce using rule 83 (arith_single)
    AND         reduce using rule 83 (arith_single)
    OR          reduce using rule 83 (arith_single)
    GREATER     reduce using rule 83 (arith_single)
    GREATER_EQ  reduce using rule 83 (arith_single)
    LESS        reduce using rule 83 (arith_single)
    LESS_EQ     reduce using rule 83 (arith_single)
    EQUAL       reduce using rule 83 (arith_single)
    NOT_EQ      reduce using rule 83 (arith_single)
    '+'         reduce using rule 83 (arith_single)
    '-'         reduce using rule 83 (arith_single)
    '*'         reduce using rule 83 (arith_single)
    '/'         reduce using rule 83 (arith_single)
    FILTER      reduce using rule 83 (arith_single)
    MAP         reduce using rule 83 (arith_single)
    ':'         reduce using rule 83 (arith_single)


State 247

   84 arith_single: '-' expression •

    ')'         reduce using rule 84 (arith_single)
    AND         reduce using rule 84 (arith_single)
    OR          reduce using rule 84 (arith_single)
    GREATER     reduce using rule 84 (arith_single)
    GREATER_EQ  reduce using rule 84 (arith_single)
    LESS        reduce using rule 84 (arith_single)
    LESS_EQ     reduce using rule 84 (arith_single)
    EQUAL       reduce using rule 84 (arith_single)
    NOT_EQ      reduce using rule 84 (arith_single)
    '+'         reduce using rule 84 (arith_single)
    '-'         reduce using rule 84 (arith_single)
    '*'         reduce using rule 84 (arith_single)
    '/'         reduce using rule 84 (arith_single)
    FILTER      reduce using rule 84 (arith_single)
    MAP         reduce using rule 84 (arith_single)
    ':'         reduce using rule 84 (arith_single)


State 248

   85 lst_single: '%' expression •

    ')'         reduce using rule 85 (lst_single)
    AND         reduce using rule 85 (lst_single)
    OR          reduce using rule 85 (lst_single)
    GREATER     reduce using rule 85 (lst_single)
    GREATER_EQ  reduce using rule 85 (lst_single)
    LESS        reduce using rule 85 (lst_single)
    LESS_EQ     reduce using rule 85 (lst_single)
    EQUAL       reduce using rule 85 (lst_single)
    NOT_EQ      reduce using rule 85 (lst_single)
    '+'         reduce using rule 85 (lst_single)
    '-'         reduce using rule 85 (lst_single)
    '*'         reduce using rule 85 (lst_single)
    '/'         reduce using rule 85 (lst_single)
    FILTER      reduce using rule 85 (lst_single)
    MAP         reduce using rule 85 (lst_single)
    ':'         reduce using rule 85 (lst_single)


State 249

   86 lst_single: '?' expression •

    ')'         reduce using rule 86 (lst_single)
    AND         reduce using rule 86 (lst_single)
    OR          reduce using rule 86 (lst_single)
    GREATER     reduce using rule 86 (lst_single)
    GREATER_EQ  reduce using rule 86 (lst_single)
    LESS        reduce using rule 86 (lst_single)
    LESS_EQ     reduce using rule 86 (lst_single)
    EQUAL       reduce using rule 86 (lst_single)
    NOT_EQ      reduce using rule 86 (lst_single)
    '+'         reduce using rule 86 (lst_single)
    '-'         reduce using rule 86 (lst_single)
    '*'         reduce using rule 86 (lst_single)
    '/'         reduce using rule 86 (lst_single)
    FILTER      reduce using rule 86 (lst_single)
    MAP         reduce using rule 86 (lst_single)
    ':'         reduce using rule 86 (lst_single)


State 250

   76 single_operation: '!' expression •

    ')'         reduce using rule 76 (single_operation)
    AND         reduce using rule 76 (single_operation)
    OR          reduce using rule 76 (single_operation)
    GREATER     reduce using rule 76 (single_operation)
    GREATER_EQ  reduce using rule 76 (single_operation)
    LESS        reduce using rule 76 (single_operation)
    LESS_EQ     reduce using rule 76 (single_operation)
    EQUAL       reduce using rule 76 (single_operation)
    NOT_EQ      reduce using rule 76 (single_operation)
    '+'         reduce using rule 76 (single_operation)
    '-'         reduce using rule 76 (single_operation)
    '*'         reduce using rule 76 (single_operation)
    '/'         reduce using rule 76 (single_operation)
    FILTER      reduce using rule 76 (single_operation)
    MAP         reduce using rule 76 (single_operation)
    ':'         reduce using rule 76 (single_operation)


State 251

   77 arith_binary: arith_binary '+' • term

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 175
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    single_operation  go to state 179
    term              go to state 302
    arith_single      go to state 182
    lst_single        go to state 183


State 252

   78 arith_binary: arith_binary '-' • term

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 175
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    single_operation  go to state 179
    term              go to state 303
    arith_single      go to state 182
    lst_single        go to state 183


State 253

   80 term: term '*' • expression

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 304
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    single_operation  go to state 179
    arith_single      go to state 182
    lst_single        go to state 183


State 254

   81 term: term '/' • expression

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 305
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    single_operation  go to state 179
    arith_single      go to state 182
    lst_single        go to state 183


State 255

   87 lst_binary: lst_binary FILTER • lst_binary

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 175
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    single_operation  go to state 179
    arith_binary      go to state 180
    term              go to state 181
    arith_single      go to state 182
    lst_single        go to state 183
    lst_binary        go to state 306


State 256

   88 lst_binary: lst_binary MAP • lst_binary

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 175
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    single_operation  go to state 179
    arith_binary      go to state 180
    term              go to state 181
    arith_single      go to state 182
    lst_single        go to state 183
    lst_binary        go to state 307


State 257

   89 lst_binary: lst_binary ':' • lst_binary

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 175
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    single_operation  go to state 179
    arith_binary      go to state 180
    term              go to state 181
    arith_single      go to state 182
    lst_single        go to state 183
    lst_binary        go to state 308


State 258

   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   72          | operation AND operation •
   73          | operation • OR operation

    GREATER     shift, and go to state 188
    GREATER_EQ  shift, and go to state 189
    LESS        shift, and go to state 190
    LESS_EQ     shift, and go to state 191
    EQUAL       shift, and go to state 192
    NOT_EQ      shift, and go to state 193

    ')'  reduce using rule 72 (operation)
    AND  reduce using rule 72 (operation)
    OR   reduce using rule 72 (operation)


State 259

   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation
   73          | operation OR operation •

    GREATER     shift, and go to state 188
    GREATER_EQ  shift, and go to state 189
    LESS        shift, and go to state 190
    LESS_EQ     shift, and go to state 191
    EQUAL       shift, and go to state 192
    NOT_EQ      shift, and go to state 193

    ')'  reduce using rule 73 (operation)
    AND  reduce using rule 73 (operation)
    OR   reduce using rule 73 (operation)


State 260

   66 operation: operation • GREATER operation
   66          | operation GREATER operation •
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ')'         reduce using rule 66 (operation)
    AND         reduce using rule 66 (operation)
    OR          reduce using rule 66 (operation)
    GREATER     reduce using rule 66 (operation)
    GREATER_EQ  reduce using rule 66 (operation)
    LESS        reduce using rule 66 (operation)
    LESS_EQ     reduce using rule 66 (operation)
    EQUAL       reduce using rule 66 (operation)
    NOT_EQ      reduce using rule 66 (operation)


State 261

   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   67          | operation GREATER_EQ operation •
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ')'         reduce using rule 67 (operation)
    AND         reduce using rule 67 (operation)
    OR          reduce using rule 67 (operation)
    GREATER     reduce using rule 67 (operation)
    GREATER_EQ  reduce using rule 67 (operation)
    LESS        reduce using rule 67 (operation)
    LESS_EQ     reduce using rule 67 (operation)
    EQUAL       reduce using rule 67 (operation)
    NOT_EQ      reduce using rule 67 (operation)


State 262

   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   68          | operation LESS operation •
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ')'         reduce using rule 68 (operation)
    AND         reduce using rule 68 (operation)
    OR          reduce using rule 68 (operation)
    GREATER     reduce using rule 68 (operation)
    GREATER_EQ  reduce using rule 68 (operation)
    LESS        reduce using rule 68 (operation)
    LESS_EQ     reduce using rule 68 (operation)
    EQUAL       reduce using rule 68 (operation)
    NOT_EQ      reduce using rule 68 (operation)


State 263

   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   69          | operation LESS_EQ operation •
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ')'         reduce using rule 69 (operation)
    AND         reduce using rule 69 (operation)
    OR          reduce using rule 69 (operation)
    GREATER     reduce using rule 69 (operation)
    GREATER_EQ  reduce using rule 69 (operation)
    LESS        reduce using rule 69 (operation)
    LESS_EQ     reduce using rule 69 (operation)
    EQUAL       reduce using rule 69 (operation)
    NOT_EQ      reduce using rule 69 (operation)


State 264

   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   70          | operation EQUAL operation •
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    GREATER     shift, and go to state 188
    GREATER_EQ  shift, and go to state 189
    LESS        shift, and go to state 190
    LESS_EQ     shift, and go to state 191

    ')'     reduce using rule 70 (operation)
    AND     reduce using rule 70 (operation)
    OR      reduce using rule 70 (operation)
    EQUAL   reduce using rule 70 (operation)
    NOT_EQ  reduce using rule 70 (operation)


State 265

   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   71          | operation NOT_EQ operation •
   72          | operation • AND operation
   73          | operation • OR operation

    GREATER     shift, and go to state 188
    GREATER_EQ  shift, and go to state 189
    LESS        shift, and go to state 190
    LESS_EQ     shift, and go to state 191

    ')'     reduce using rule 71 (operation)
    AND     reduce using rule 71 (operation)
    OR      reduce using rule 71 (operation)
    EQUAL   reduce using rule 71 (operation)
    NOT_EQ  reduce using rule 71 (operation)


State 266

   49 func_calling: ID '(' • $@3 calling_parameters $@4 ')'

    NUM_INT    reduce using rule 47 ($@3)
    NUM_FLOAT  reduce using rule 47 ($@3)
    NIL_CNST   reduce using rule 47 ($@3)
    ID         reduce using rule 47 ($@3)
    '('        reduce using rule 47 ($@3)
    ')'        reduce using rule 47 ($@3)
    '+'        reduce using rule 47 ($@3)
    '-'        reduce using rule 47 ($@3)
    '%'        reduce using rule 47 ($@3)
    '?'        reduce using rule 47 ($@3)
    '!'        reduce using rule 47 ($@3)

    $@3  go to state 309


State 267

   54 expression: '(' operation • ')'
   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ')'         shift, and go to state 310
    AND         shift, and go to state 186
    OR          shift, and go to state 187
    GREATER     shift, and go to state 188
    GREATER_EQ  shift, and go to state 189
    LESS        shift, and go to state 190
    LESS_EQ     shift, and go to state 191
    EQUAL       shift, and go to state 192
    NOT_EQ      shift, and go to state 193


State 268

   83 arith_single: '+' expression •

    ')'         reduce using rule 83 (arith_single)
    ','         reduce using rule 83 (arith_single)
    AND         reduce using rule 83 (arith_single)
    OR          reduce using rule 83 (arith_single)
    GREATER     reduce using rule 83 (arith_single)
    GREATER_EQ  reduce using rule 83 (arith_single)
    LESS        reduce using rule 83 (arith_single)
    LESS_EQ     reduce using rule 83 (arith_single)
    EQUAL       reduce using rule 83 (arith_single)
    NOT_EQ      reduce using rule 83 (arith_single)
    '+'         reduce using rule 83 (arith_single)
    '-'         reduce using rule 83 (arith_single)
    '*'         reduce using rule 83 (arith_single)
    '/'         reduce using rule 83 (arith_single)
    FILTER      reduce using rule 83 (arith_single)
    MAP         reduce using rule 83 (arith_single)
    ':'         reduce using rule 83 (arith_single)


State 269

   84 arith_single: '-' expression •

    ')'         reduce using rule 84 (arith_single)
    ','         reduce using rule 84 (arith_single)
    AND         reduce using rule 84 (arith_single)
    OR          reduce using rule 84 (arith_single)
    GREATER     reduce using rule 84 (arith_single)
    GREATER_EQ  reduce using rule 84 (arith_single)
    LESS        reduce using rule 84 (arith_single)
    LESS_EQ     reduce using rule 84 (arith_single)
    EQUAL       reduce using rule 84 (arith_single)
    NOT_EQ      reduce using rule 84 (arith_single)
    '+'         reduce using rule 84 (arith_single)
    '-'         reduce using rule 84 (arith_single)
    '*'         reduce using rule 84 (arith_single)
    '/'         reduce using rule 84 (arith_single)
    FILTER      reduce using rule 84 (arith_single)
    MAP         reduce using rule 84 (arith_single)
    ':'         reduce using rule 84 (arith_single)


State 270

   85 lst_single: '%' expression •

    ')'         reduce using rule 85 (lst_single)
    ','         reduce using rule 85 (lst_single)
    AND         reduce using rule 85 (lst_single)
    OR          reduce using rule 85 (lst_single)
    GREATER     reduce using rule 85 (lst_single)
    GREATER_EQ  reduce using rule 85 (lst_single)
    LESS        reduce using rule 85 (lst_single)
    LESS_EQ     reduce using rule 85 (lst_single)
    EQUAL       reduce using rule 85 (lst_single)
    NOT_EQ      reduce using rule 85 (lst_single)
    '+'         reduce using rule 85 (lst_single)
    '-'         reduce using rule 85 (lst_single)
    '*'         reduce using rule 85 (lst_single)
    '/'         reduce using rule 85 (lst_single)
    FILTER      reduce using rule 85 (lst_single)
    MAP         reduce using rule 85 (lst_single)
    ':'         reduce using rule 85 (lst_single)


State 271

   86 lst_single: '?' expression •

    ')'         reduce using rule 86 (lst_single)
    ','         reduce using rule 86 (lst_single)
    AND         reduce using rule 86 (lst_single)
    OR          reduce using rule 86 (lst_single)
    GREATER     reduce using rule 86 (lst_single)
    GREATER_EQ  reduce using rule 86 (lst_single)
    LESS        reduce using rule 86 (lst_single)
    LESS_EQ     reduce using rule 86 (lst_single)
    EQUAL       reduce using rule 86 (lst_single)
    NOT_EQ      reduce using rule 86 (lst_single)
    '+'         reduce using rule 86 (lst_single)
    '-'         reduce using rule 86 (lst_single)
    '*'         reduce using rule 86 (lst_single)
    '/'         reduce using rule 86 (lst_single)
    FILTER      reduce using rule 86 (lst_single)
    MAP         reduce using rule 86 (lst_single)
    ':'         reduce using rule 86 (lst_single)


State 272

   76 single_operation: '!' expression •

    ')'         reduce using rule 76 (single_operation)
    ','         reduce using rule 76 (single_operation)
    AND         reduce using rule 76 (single_operation)
    OR          reduce using rule 76 (single_operation)
    GREATER     reduce using rule 76 (single_operation)
    GREATER_EQ  reduce using rule 76 (single_operation)
    LESS        reduce using rule 76 (single_operation)
    LESS_EQ     reduce using rule 76 (single_operation)
    EQUAL       reduce using rule 76 (single_operation)
    NOT_EQ      reduce using rule 76 (single_operation)
    '+'         reduce using rule 76 (single_operation)
    '-'         reduce using rule 76 (single_operation)
    '*'         reduce using rule 76 (single_operation)
    '/'         reduce using rule 76 (single_operation)
    FILTER      reduce using rule 76 (single_operation)
    MAP         reduce using rule 76 (single_operation)
    ':'         reduce using rule 76 (single_operation)


State 273

   77 arith_binary: arith_binary '+' • term

    NUM_INT    shift, and go to state 194
    NUM_FLOAT  shift, and go to state 195
    NIL_CNST   shift, and go to state 196
    ID         shift, and go to state 197
    '('        shift, and go to state 198
    '+'        shift, and go to state 199
    '-'        shift, and go to state 200
    '%'        shift, and go to state 201
    '?'        shift, and go to state 202
    '!'        shift, and go to state 203

    func_calling      go to state 204
    expression        go to state 205
    iden              go to state 206
    const             go to state 207
    number            go to state 208
    single_operation  go to state 209
    term              go to state 311
    arith_single      go to state 212
    lst_single        go to state 213


State 274

   78 arith_binary: arith_binary '-' • term

    NUM_INT    shift, and go to state 194
    NUM_FLOAT  shift, and go to state 195
    NIL_CNST   shift, and go to state 196
    ID         shift, and go to state 197
    '('        shift, and go to state 198
    '+'        shift, and go to state 199
    '-'        shift, and go to state 200
    '%'        shift, and go to state 201
    '?'        shift, and go to state 202
    '!'        shift, and go to state 203

    func_calling      go to state 204
    expression        go to state 205
    iden              go to state 206
    const             go to state 207
    number            go to state 208
    single_operation  go to state 209
    term              go to state 312
    arith_single      go to state 212
    lst_single        go to state 213


State 275

   80 term: term '*' • expression

    NUM_INT    shift, and go to state 194
    NUM_FLOAT  shift, and go to state 195
    NIL_CNST   shift, and go to state 196
    ID         shift, and go to state 197
    '('        shift, and go to state 198
    '+'        shift, and go to state 199
    '-'        shift, and go to state 200
    '%'        shift, and go to state 201
    '?'        shift, and go to state 202
    '!'        shift, and go to state 203

    func_calling      go to state 204
    expression        go to state 313
    iden              go to state 206
    const             go to state 207
    number            go to state 208
    single_operation  go to state 209
    arith_single      go to state 212
    lst_single        go to state 213


State 276

   81 term: term '/' • expression

    NUM_INT    shift, and go to state 194
    NUM_FLOAT  shift, and go to state 195
    NIL_CNST   shift, and go to state 196
    ID         shift, and go to state 197
    '('        shift, and go to state 198
    '+'        shift, and go to state 199
    '-'        shift, and go to state 200
    '%'        shift, and go to state 201
    '?'        shift, and go to state 202
    '!'        shift, and go to state 203

    func_calling      go to state 204
    expression        go to state 314
    iden              go to state 206
    const             go to state 207
    number            go to state 208
    single_operation  go to state 209
    arith_single      go to state 212
    lst_single        go to state 213


State 277

   87 lst_binary: lst_binary FILTER • lst_binary

    NUM_INT    shift, and go to state 194
    NUM_FLOAT  shift, and go to state 195
    NIL_CNST   shift, and go to state 196
    ID         shift, and go to state 197
    '('        shift, and go to state 198
    '+'        shift, and go to state 199
    '-'        shift, and go to state 200
    '%'        shift, and go to state 201
    '?'        shift, and go to state 202
    '!'        shift, and go to state 203

    func_calling      go to state 204
    expression        go to state 205
    iden              go to state 206
    const             go to state 207
    number            go to state 208
    single_operation  go to state 209
    arith_binary      go to state 210
    term              go to state 211
    arith_single      go to state 212
    lst_single        go to state 213
    lst_binary        go to state 315


State 278

   88 lst_binary: lst_binary MAP • lst_binary

    NUM_INT    shift, and go to state 194
    NUM_FLOAT  shift, and go to state 195
    NIL_CNST   shift, and go to state 196
    ID         shift, and go to state 197
    '('        shift, and go to state 198
    '+'        shift, and go to state 199
    '-'        shift, and go to state 200
    '%'        shift, and go to state 201
    '?'        shift, and go to state 202
    '!'        shift, and go to state 203

    func_calling      go to state 204
    expression        go to state 205
    iden              go to state 206
    const             go to state 207
    number            go to state 208
    single_operation  go to state 209
    arith_binary      go to state 210
    term              go to state 211
    arith_single      go to state 212
    lst_single        go to state 213
    lst_binary        go to state 316


State 279

   89 lst_binary: lst_binary ':' • lst_binary

    NUM_INT    shift, and go to state 194
    NUM_FLOAT  shift, and go to state 195
    NIL_CNST   shift, and go to state 196
    ID         shift, and go to state 197
    '('        shift, and go to state 198
    '+'        shift, and go to state 199
    '-'        shift, and go to state 200
    '%'        shift, and go to state 201
    '?'        shift, and go to state 202
    '!'        shift, and go to state 203

    func_calling      go to state 204
    expression        go to state 205
    iden              go to state 206
    const             go to state 207
    number            go to state 208
    single_operation  go to state 209
    arith_binary      go to state 210
    term              go to state 211
    arith_single      go to state 212
    lst_single        go to state 213
    lst_binary        go to state 317


State 280

   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   72          | operation AND operation •
   73          | operation • OR operation

    GREATER     shift, and go to state 217
    GREATER_EQ  shift, and go to state 218
    LESS        shift, and go to state 219
    LESS_EQ     shift, and go to state 220
    EQUAL       shift, and go to state 221
    NOT_EQ      shift, and go to state 222

    ')'  reduce using rule 72 (operation)
    ','  reduce using rule 72 (operation)
    AND  reduce using rule 72 (operation)
    OR   reduce using rule 72 (operation)


State 281

   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation
   73          | operation OR operation •

    GREATER     shift, and go to state 217
    GREATER_EQ  shift, and go to state 218
    LESS        shift, and go to state 219
    LESS_EQ     shift, and go to state 220
    EQUAL       shift, and go to state 221
    NOT_EQ      shift, and go to state 222

    ')'  reduce using rule 73 (operation)
    ','  reduce using rule 73 (operation)
    AND  reduce using rule 73 (operation)
    OR   reduce using rule 73 (operation)


State 282

   66 operation: operation • GREATER operation
   66          | operation GREATER operation •
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ')'         reduce using rule 66 (operation)
    ','         reduce using rule 66 (operation)
    AND         reduce using rule 66 (operation)
    OR          reduce using rule 66 (operation)
    GREATER     reduce using rule 66 (operation)
    GREATER_EQ  reduce using rule 66 (operation)
    LESS        reduce using rule 66 (operation)
    LESS_EQ     reduce using rule 66 (operation)
    EQUAL       reduce using rule 66 (operation)
    NOT_EQ      reduce using rule 66 (operation)


State 283

   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   67          | operation GREATER_EQ operation •
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ')'         reduce using rule 67 (operation)
    ','         reduce using rule 67 (operation)
    AND         reduce using rule 67 (operation)
    OR          reduce using rule 67 (operation)
    GREATER     reduce using rule 67 (operation)
    GREATER_EQ  reduce using rule 67 (operation)
    LESS        reduce using rule 67 (operation)
    LESS_EQ     reduce using rule 67 (operation)
    EQUAL       reduce using rule 67 (operation)
    NOT_EQ      reduce using rule 67 (operation)


State 284

   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   68          | operation LESS operation •
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ')'         reduce using rule 68 (operation)
    ','         reduce using rule 68 (operation)
    AND         reduce using rule 68 (operation)
    OR          reduce using rule 68 (operation)
    GREATER     reduce using rule 68 (operation)
    GREATER_EQ  reduce using rule 68 (operation)
    LESS        reduce using rule 68 (operation)
    LESS_EQ     reduce using rule 68 (operation)
    EQUAL       reduce using rule 68 (operation)
    NOT_EQ      reduce using rule 68 (operation)


State 285

   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   69          | operation LESS_EQ operation •
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ')'         reduce using rule 69 (operation)
    ','         reduce using rule 69 (operation)
    AND         reduce using rule 69 (operation)
    OR          reduce using rule 69 (operation)
    GREATER     reduce using rule 69 (operation)
    GREATER_EQ  reduce using rule 69 (operation)
    LESS        reduce using rule 69 (operation)
    LESS_EQ     reduce using rule 69 (operation)
    EQUAL       reduce using rule 69 (operation)
    NOT_EQ      reduce using rule 69 (operation)


State 286

   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   70          | operation EQUAL operation •
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    GREATER     shift, and go to state 217
    GREATER_EQ  shift, and go to state 218
    LESS        shift, and go to state 219
    LESS_EQ     shift, and go to state 220

    ')'     reduce using rule 70 (operation)
    ','     reduce using rule 70 (operation)
    AND     reduce using rule 70 (operation)
    OR      reduce using rule 70 (operation)
    EQUAL   reduce using rule 70 (operation)
    NOT_EQ  reduce using rule 70 (operation)


State 287

   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   71          | operation NOT_EQ operation •
   72          | operation • AND operation
   73          | operation • OR operation

    GREATER     shift, and go to state 217
    GREATER_EQ  shift, and go to state 218
    LESS        shift, and go to state 219
    LESS_EQ     shift, and go to state 220

    ')'     reduce using rule 71 (operation)
    ','     reduce using rule 71 (operation)
    AND     reduce using rule 71 (operation)
    OR      reduce using rule 71 (operation)
    EQUAL   reduce using rule 71 (operation)
    NOT_EQ  reduce using rule 71 (operation)


State 288

   32 command: error ';' •

    error           reduce using rule 32 (command)
    NUM_INT         reduce using rule 32 (command)
    NUM_FLOAT       reduce using rule 32 (command)
    NIL_CNST        reduce using rule 32 (command)
    ID              reduce using rule 32 (command)
    RETURN_STM      reduce using rule 32 (command)
    T_INT           reduce using rule 32 (command)
    T_FLOAT         reduce using rule 32 (command)
    IF_STMT         reduce using rule 32 (command)
    ELSE_STMT       reduce using rule 32 (command)
    FOR_STMT        reduce using rule 32 (command)
    OUTPUT_WRITE    reduce using rule 32 (command)
    OUTPUT_WRITELN  reduce using rule 32 (command)
    INPUT_READ      reduce using rule 32 (command)
    '('             reduce using rule 32 (command)
    '{'             reduce using rule 32 (command)
    '}'             reduce using rule 32 (command)
    '+'             reduce using rule 32 (command)
    '-'             reduce using rule 32 (command)
    '%'             reduce using rule 32 (command)
    '?'             reduce using rule 32 (command)
    '!'             reduce using rule 32 (command)


State 289

   36 return_stmt: RETURN_STM operation • ';'
   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ';'         shift, and go to state 318
    AND         shift, and go to state 89
    OR          shift, and go to state 90
    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94
    EQUAL       shift, and go to state 95
    NOT_EQ      shift, and go to state 96


State 290

   34 conditional_stmt: IF_STMT '(' • operation ')' command
   35                 | IF_STMT '(' • operation ')' command ELSE_STMT command

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 175
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    operation         go to state 319
    single_operation  go to state 179
    arith_binary      go to state 180
    term              go to state 181
    arith_single      go to state 182
    lst_single        go to state 183
    lst_binary        go to state 184


State 291

   37 iteration: FOR_STMT '(' • loop_condition ')' command

    ID  shift, and go to state 108

    loop_condition  go to state 320
    init_stmt       go to state 110


State 292

   42 output: OUTPUT_WRITE '(' • operation ')' ';'
   44       | OUTPUT_WRITE '(' • STRING ')' ';'

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    STRING     shift, and go to state 321
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 175
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    operation         go to state 322
    single_operation  go to state 179
    arith_binary      go to state 180
    term              go to state 181
    arith_single      go to state 182
    lst_single        go to state 183
    lst_binary        go to state 184


State 293

   43 output: OUTPUT_WRITELN '(' • operation ')' ';'
   45       | OUTPUT_WRITELN '(' • STRING ')' ';'

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    STRING     shift, and go to state 323
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 175
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    operation         go to state 324
    single_operation  go to state 179
    arith_binary      go to state 180
    term              go to state 181
    arith_single      go to state 182
    lst_single        go to state 183
    lst_binary        go to state 184


State 294

   46 input: INPUT_READ '(' • operation ')' ';'

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 175
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    operation         go to state 325
    single_operation  go to state 179
    arith_binary      go to state 180
    term              go to state 181
    arith_single      go to state 182
    lst_single        go to state 183
    lst_binary        go to state 184


State 295

   10 var_declaration: unq_declaration ';' •

    error           reduce using rule 10 (var_declaration)
    NUM_INT         reduce using rule 10 (var_declaration)
    NUM_FLOAT       reduce using rule 10 (var_declaration)
    NIL_CNST        reduce using rule 10 (var_declaration)
    ID              reduce using rule 10 (var_declaration)
    RETURN_STM      reduce using rule 10 (var_declaration)
    T_INT           reduce using rule 10 (var_declaration)
    T_FLOAT         reduce using rule 10 (var_declaration)
    IF_STMT         reduce using rule 10 (var_declaration)
    ELSE_STMT       reduce using rule 10 (var_declaration)
    FOR_STMT        reduce using rule 10 (var_declaration)
    OUTPUT_WRITE    reduce using rule 10 (var_declaration)
    OUTPUT_WRITELN  reduce using rule 10 (var_declaration)
    INPUT_READ      reduce using rule 10 (var_declaration)
    '('             reduce using rule 10 (var_declaration)
    '{'             reduce using rule 10 (var_declaration)
    '}'             reduce using rule 10 (var_declaration)
    '+'             reduce using rule 10 (var_declaration)
    '-'             reduce using rule 10 (var_declaration)
    '%'             reduce using rule 10 (var_declaration)
    '?'             reduce using rule 10 (var_declaration)
    '!'             reduce using rule 10 (var_declaration)


State 296

   30 command: $@2 '{' • block_commands '}'

    error           shift, and go to state 27
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 32
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 33
    FOR_STMT        shift, and go to state 34
    OUTPUT_WRITE    shift, and go to state 35
    OUTPUT_WRITELN  shift, and go to state 36
    INPUT_READ      shift, and go to state 37
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 29 ($@2)

    var_declaration   go to state 44
    unq_declaration   go to state 45
    block_commands    go to state 326
    command           go to state 47
    $@2               go to state 48
    init_variable     go to state 49
    conditional_stmt  go to state 50
    return_stmt       go to state 51
    iteration         go to state 52
    init_stmt         go to state 53
    output            go to state 54
    input             go to state 55
    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    type              go to state 163
    type_lst          go to state 11
    type_number       go to state 12
    operation         go to state 61
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 297

   33 init_variable: init_stmt ';' •

    error           reduce using rule 33 (init_variable)
    NUM_INT         reduce using rule 33 (init_variable)
    NUM_FLOAT       reduce using rule 33 (init_variable)
    NIL_CNST        reduce using rule 33 (init_variable)
    ID              reduce using rule 33 (init_variable)
    RETURN_STM      reduce using rule 33 (init_variable)
    T_INT           reduce using rule 33 (init_variable)
    T_FLOAT         reduce using rule 33 (init_variable)
    IF_STMT         reduce using rule 33 (init_variable)
    ELSE_STMT       reduce using rule 33 (init_variable)
    FOR_STMT        reduce using rule 33 (init_variable)
    OUTPUT_WRITE    reduce using rule 33 (init_variable)
    OUTPUT_WRITELN  reduce using rule 33 (init_variable)
    INPUT_READ      reduce using rule 33 (init_variable)
    '('             reduce using rule 33 (init_variable)
    '{'             reduce using rule 33 (init_variable)
    '}'             reduce using rule 33 (init_variable)
    '+'             reduce using rule 33 (init_variable)
    '-'             reduce using rule 33 (init_variable)
    '%'             reduce using rule 33 (init_variable)
    '?'             reduce using rule 33 (init_variable)
    '!'             reduce using rule 33 (init_variable)


State 298

   31 command: operation ';' •

    error           reduce using rule 31 (command)
    NUM_INT         reduce using rule 31 (command)
    NUM_FLOAT       reduce using rule 31 (command)
    NIL_CNST        reduce using rule 31 (command)
    ID              reduce using rule 31 (command)
    RETURN_STM      reduce using rule 31 (command)
    T_INT           reduce using rule 31 (command)
    T_FLOAT         reduce using rule 31 (command)
    IF_STMT         reduce using rule 31 (command)
    ELSE_STMT       reduce using rule 31 (command)
    FOR_STMT        reduce using rule 31 (command)
    OUTPUT_WRITE    reduce using rule 31 (command)
    OUTPUT_WRITELN  reduce using rule 31 (command)
    INPUT_READ      reduce using rule 31 (command)
    '('             reduce using rule 31 (command)
    '{'             reduce using rule 31 (command)
    '}'             reduce using rule 31 (command)
    '+'             reduce using rule 31 (command)
    '-'             reduce using rule 31 (command)
    '%'             reduce using rule 31 (command)
    '?'             reduce using rule 31 (command)
    '!'             reduce using rule 31 (command)


State 299

   39 init_stmt: ID '=' • operation

    NUM_INT    shift, and go to state 164
    NUM_FLOAT  shift, and go to state 165
    NIL_CNST   shift, and go to state 166
    ID         shift, and go to state 167
    '('        shift, and go to state 168
    '+'        shift, and go to state 169
    '-'        shift, and go to state 170
    '%'        shift, and go to state 171
    '?'        shift, and go to state 172
    '!'        shift, and go to state 173

    func_calling      go to state 174
    expression        go to state 175
    iden              go to state 176
    const             go to state 177
    number            go to state 178
    operation         go to state 327
    single_operation  go to state 179
    arith_binary      go to state 180
    term              go to state 181
    arith_single      go to state 182
    lst_single        go to state 183
    lst_binary        go to state 184


State 300

   49 func_calling: ID '(' $@3 • calling_parameters $@4 ')'

    NUM_INT    shift, and go to state 194
    NUM_FLOAT  shift, and go to state 195
    NIL_CNST   shift, and go to state 196
    ID         shift, and go to state 197
    '('        shift, and go to state 198
    '+'        shift, and go to state 199
    '-'        shift, and go to state 200
    '%'        shift, and go to state 201
    '?'        shift, and go to state 202
    '!'        shift, and go to state 203

    ')'  reduce using rule 17 (calling_parameters)

    calling_parameters      go to state 328
    lst_calling_parameters  go to state 134
    func_calling            go to state 204
    expression              go to state 205
    iden                    go to state 206
    const                   go to state 207
    number                  go to state 208
    operation               go to state 135
    single_operation        go to state 209
    arith_binary            go to state 210
    term                    go to state 211
    arith_single            go to state 212
    lst_single              go to state 213
    lst_binary              go to state 214


State 301

   54 expression: '(' operation ')' •

    ')'         reduce using rule 54 (expression)
    AND         reduce using rule 54 (expression)
    OR          reduce using rule 54 (expression)
    GREATER     reduce using rule 54 (expression)
    GREATER_EQ  reduce using rule 54 (expression)
    LESS        reduce using rule 54 (expression)
    LESS_EQ     reduce using rule 54 (expression)
    EQUAL       reduce using rule 54 (expression)
    NOT_EQ      reduce using rule 54 (expression)
    '+'         reduce using rule 54 (expression)
    '-'         reduce using rule 54 (expression)
    '*'         reduce using rule 54 (expression)
    '/'         reduce using rule 54 (expression)
    FILTER      reduce using rule 54 (expression)
    MAP         reduce using rule 54 (expression)
    ':'         reduce using rule 54 (expression)


State 302

   77 arith_binary: arith_binary '+' term •
   80 term: term • '*' expression
   81     | term • '/' expression

    '*'  shift, and go to state 253
    '/'  shift, and go to state 254

    ')'         reduce using rule 77 (arith_binary)
    AND         reduce using rule 77 (arith_binary)
    OR          reduce using rule 77 (arith_binary)
    GREATER     reduce using rule 77 (arith_binary)
    GREATER_EQ  reduce using rule 77 (arith_binary)
    LESS        reduce using rule 77 (arith_binary)
    LESS_EQ     reduce using rule 77 (arith_binary)
    EQUAL       reduce using rule 77 (arith_binary)
    NOT_EQ      reduce using rule 77 (arith_binary)
    '+'         reduce using rule 77 (arith_binary)
    '-'         reduce using rule 77 (arith_binary)
    FILTER      reduce using rule 77 (arith_binary)
    MAP         reduce using rule 77 (arith_binary)
    ':'         reduce using rule 77 (arith_binary)


State 303

   78 arith_binary: arith_binary '-' term •
   80 term: term • '*' expression
   81     | term • '/' expression

    '*'  shift, and go to state 253
    '/'  shift, and go to state 254

    ')'         reduce using rule 78 (arith_binary)
    AND         reduce using rule 78 (arith_binary)
    OR          reduce using rule 78 (arith_binary)
    GREATER     reduce using rule 78 (arith_binary)
    GREATER_EQ  reduce using rule 78 (arith_binary)
    LESS        reduce using rule 78 (arith_binary)
    LESS_EQ     reduce using rule 78 (arith_binary)
    EQUAL       reduce using rule 78 (arith_binary)
    NOT_EQ      reduce using rule 78 (arith_binary)
    '+'         reduce using rule 78 (arith_binary)
    '-'         reduce using rule 78 (arith_binary)
    FILTER      reduce using rule 78 (arith_binary)
    MAP         reduce using rule 78 (arith_binary)
    ':'         reduce using rule 78 (arith_binary)


State 304

   80 term: term '*' expression •

    ')'         reduce using rule 80 (term)
    AND         reduce using rule 80 (term)
    OR          reduce using rule 80 (term)
    GREATER     reduce using rule 80 (term)
    GREATER_EQ  reduce using rule 80 (term)
    LESS        reduce using rule 80 (term)
    LESS_EQ     reduce using rule 80 (term)
    EQUAL       reduce using rule 80 (term)
    NOT_EQ      reduce using rule 80 (term)
    '+'         reduce using rule 80 (term)
    '-'         reduce using rule 80 (term)
    '*'         reduce using rule 80 (term)
    '/'         reduce using rule 80 (term)
    FILTER      reduce using rule 80 (term)
    MAP         reduce using rule 80 (term)
    ':'         reduce using rule 80 (term)


State 305

   81 term: term '/' expression •

    ')'         reduce using rule 81 (term)
    AND         reduce using rule 81 (term)
    OR          reduce using rule 81 (term)
    GREATER     reduce using rule 81 (term)
    GREATER_EQ  reduce using rule 81 (term)
    LESS        reduce using rule 81 (term)
    LESS_EQ     reduce using rule 81 (term)
    EQUAL       reduce using rule 81 (term)
    NOT_EQ      reduce using rule 81 (term)
    '+'         reduce using rule 81 (term)
    '-'         reduce using rule 81 (term)
    '*'         reduce using rule 81 (term)
    '/'         reduce using rule 81 (term)
    FILTER      reduce using rule 81 (term)
    MAP         reduce using rule 81 (term)
    ':'         reduce using rule 81 (term)


State 306

   87 lst_binary: lst_binary • FILTER lst_binary
   87           | lst_binary FILTER lst_binary •
   88           | lst_binary • MAP lst_binary
   89           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 255
    MAP     shift, and go to state 256
    ':'     shift, and go to state 257

    ')'         reduce using rule 87 (lst_binary)
    AND         reduce using rule 87 (lst_binary)
    OR          reduce using rule 87 (lst_binary)
    GREATER     reduce using rule 87 (lst_binary)
    GREATER_EQ  reduce using rule 87 (lst_binary)
    LESS        reduce using rule 87 (lst_binary)
    LESS_EQ     reduce using rule 87 (lst_binary)
    EQUAL       reduce using rule 87 (lst_binary)
    NOT_EQ      reduce using rule 87 (lst_binary)


State 307

   87 lst_binary: lst_binary • FILTER lst_binary
   88           | lst_binary • MAP lst_binary
   88           | lst_binary MAP lst_binary •
   89           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 255
    MAP     shift, and go to state 256
    ':'     shift, and go to state 257

    ')'         reduce using rule 88 (lst_binary)
    AND         reduce using rule 88 (lst_binary)
    OR          reduce using rule 88 (lst_binary)
    GREATER     reduce using rule 88 (lst_binary)
    GREATER_EQ  reduce using rule 88 (lst_binary)
    LESS        reduce using rule 88 (lst_binary)
    LESS_EQ     reduce using rule 88 (lst_binary)
    EQUAL       reduce using rule 88 (lst_binary)
    NOT_EQ      reduce using rule 88 (lst_binary)


State 308

   87 lst_binary: lst_binary • FILTER lst_binary
   88           | lst_binary • MAP lst_binary
   89           | lst_binary • ':' lst_binary
   89           | lst_binary ':' lst_binary •

    FILTER  shift, and go to state 255
    MAP     shift, and go to state 256
    ':'     shift, and go to state 257

    ')'         reduce using rule 89 (lst_binary)
    AND         reduce using rule 89 (lst_binary)
    OR          reduce using rule 89 (lst_binary)
    GREATER     reduce using rule 89 (lst_binary)
    GREATER_EQ  reduce using rule 89 (lst_binary)
    LESS        reduce using rule 89 (lst_binary)
    LESS_EQ     reduce using rule 89 (lst_binary)
    EQUAL       reduce using rule 89 (lst_binary)
    NOT_EQ      reduce using rule 89 (lst_binary)


State 309

   49 func_calling: ID '(' $@3 • calling_parameters $@4 ')'

    NUM_INT    shift, and go to state 194
    NUM_FLOAT  shift, and go to state 195
    NIL_CNST   shift, and go to state 196
    ID         shift, and go to state 197
    '('        shift, and go to state 198
    '+'        shift, and go to state 199
    '-'        shift, and go to state 200
    '%'        shift, and go to state 201
    '?'        shift, and go to state 202
    '!'        shift, and go to state 203

    ')'  reduce using rule 17 (calling_parameters)

    calling_parameters      go to state 329
    lst_calling_parameters  go to state 134
    func_calling            go to state 204
    expression              go to state 205
    iden                    go to state 206
    const                   go to state 207
    number                  go to state 208
    operation               go to state 135
    single_operation        go to state 209
    arith_binary            go to state 210
    term                    go to state 211
    arith_single            go to state 212
    lst_single              go to state 213
    lst_binary              go to state 214


State 310

   54 expression: '(' operation ')' •

    ')'         reduce using rule 54 (expression)
    ','         reduce using rule 54 (expression)
    AND         reduce using rule 54 (expression)
    OR          reduce using rule 54 (expression)
    GREATER     reduce using rule 54 (expression)
    GREATER_EQ  reduce using rule 54 (expression)
    LESS        reduce using rule 54 (expression)
    LESS_EQ     reduce using rule 54 (expression)
    EQUAL       reduce using rule 54 (expression)
    NOT_EQ      reduce using rule 54 (expression)
    '+'         reduce using rule 54 (expression)
    '-'         reduce using rule 54 (expression)
    '*'         reduce using rule 54 (expression)
    '/'         reduce using rule 54 (expression)
    FILTER      reduce using rule 54 (expression)
    MAP         reduce using rule 54 (expression)
    ':'         reduce using rule 54 (expression)


State 311

   77 arith_binary: arith_binary '+' term •
   80 term: term • '*' expression
   81     | term • '/' expression

    '*'  shift, and go to state 275
    '/'  shift, and go to state 276

    ')'         reduce using rule 77 (arith_binary)
    ','         reduce using rule 77 (arith_binary)
    AND         reduce using rule 77 (arith_binary)
    OR          reduce using rule 77 (arith_binary)
    GREATER     reduce using rule 77 (arith_binary)
    GREATER_EQ  reduce using rule 77 (arith_binary)
    LESS        reduce using rule 77 (arith_binary)
    LESS_EQ     reduce using rule 77 (arith_binary)
    EQUAL       reduce using rule 77 (arith_binary)
    NOT_EQ      reduce using rule 77 (arith_binary)
    '+'         reduce using rule 77 (arith_binary)
    '-'         reduce using rule 77 (arith_binary)
    FILTER      reduce using rule 77 (arith_binary)
    MAP         reduce using rule 77 (arith_binary)
    ':'         reduce using rule 77 (arith_binary)


State 312

   78 arith_binary: arith_binary '-' term •
   80 term: term • '*' expression
   81     | term • '/' expression

    '*'  shift, and go to state 275
    '/'  shift, and go to state 276

    ')'         reduce using rule 78 (arith_binary)
    ','         reduce using rule 78 (arith_binary)
    AND         reduce using rule 78 (arith_binary)
    OR          reduce using rule 78 (arith_binary)
    GREATER     reduce using rule 78 (arith_binary)
    GREATER_EQ  reduce using rule 78 (arith_binary)
    LESS        reduce using rule 78 (arith_binary)
    LESS_EQ     reduce using rule 78 (arith_binary)
    EQUAL       reduce using rule 78 (arith_binary)
    NOT_EQ      reduce using rule 78 (arith_binary)
    '+'         reduce using rule 78 (arith_binary)
    '-'         reduce using rule 78 (arith_binary)
    FILTER      reduce using rule 78 (arith_binary)
    MAP         reduce using rule 78 (arith_binary)
    ':'         reduce using rule 78 (arith_binary)


State 313

   80 term: term '*' expression •

    ')'         reduce using rule 80 (term)
    ','         reduce using rule 80 (term)
    AND         reduce using rule 80 (term)
    OR          reduce using rule 80 (term)
    GREATER     reduce using rule 80 (term)
    GREATER_EQ  reduce using rule 80 (term)
    LESS        reduce using rule 80 (term)
    LESS_EQ     reduce using rule 80 (term)
    EQUAL       reduce using rule 80 (term)
    NOT_EQ      reduce using rule 80 (term)
    '+'         reduce using rule 80 (term)
    '-'         reduce using rule 80 (term)
    '*'         reduce using rule 80 (term)
    '/'         reduce using rule 80 (term)
    FILTER      reduce using rule 80 (term)
    MAP         reduce using rule 80 (term)
    ':'         reduce using rule 80 (term)


State 314

   81 term: term '/' expression •

    ')'         reduce using rule 81 (term)
    ','         reduce using rule 81 (term)
    AND         reduce using rule 81 (term)
    OR          reduce using rule 81 (term)
    GREATER     reduce using rule 81 (term)
    GREATER_EQ  reduce using rule 81 (term)
    LESS        reduce using rule 81 (term)
    LESS_EQ     reduce using rule 81 (term)
    EQUAL       reduce using rule 81 (term)
    NOT_EQ      reduce using rule 81 (term)
    '+'         reduce using rule 81 (term)
    '-'         reduce using rule 81 (term)
    '*'         reduce using rule 81 (term)
    '/'         reduce using rule 81 (term)
    FILTER      reduce using rule 81 (term)
    MAP         reduce using rule 81 (term)
    ':'         reduce using rule 81 (term)


State 315

   87 lst_binary: lst_binary • FILTER lst_binary
   87           | lst_binary FILTER lst_binary •
   88           | lst_binary • MAP lst_binary
   89           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 277
    MAP     shift, and go to state 278
    ':'     shift, and go to state 279

    ')'         reduce using rule 87 (lst_binary)
    ','         reduce using rule 87 (lst_binary)
    AND         reduce using rule 87 (lst_binary)
    OR          reduce using rule 87 (lst_binary)
    GREATER     reduce using rule 87 (lst_binary)
    GREATER_EQ  reduce using rule 87 (lst_binary)
    LESS        reduce using rule 87 (lst_binary)
    LESS_EQ     reduce using rule 87 (lst_binary)
    EQUAL       reduce using rule 87 (lst_binary)
    NOT_EQ      reduce using rule 87 (lst_binary)


State 316

   87 lst_binary: lst_binary • FILTER lst_binary
   88           | lst_binary • MAP lst_binary
   88           | lst_binary MAP lst_binary •
   89           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 277
    MAP     shift, and go to state 278
    ':'     shift, and go to state 279

    ')'         reduce using rule 88 (lst_binary)
    ','         reduce using rule 88 (lst_binary)
    AND         reduce using rule 88 (lst_binary)
    OR          reduce using rule 88 (lst_binary)
    GREATER     reduce using rule 88 (lst_binary)
    GREATER_EQ  reduce using rule 88 (lst_binary)
    LESS        reduce using rule 88 (lst_binary)
    LESS_EQ     reduce using rule 88 (lst_binary)
    EQUAL       reduce using rule 88 (lst_binary)
    NOT_EQ      reduce using rule 88 (lst_binary)


State 317

   87 lst_binary: lst_binary • FILTER lst_binary
   88           | lst_binary • MAP lst_binary
   89           | lst_binary • ':' lst_binary
   89           | lst_binary ':' lst_binary •

    FILTER  shift, and go to state 277
    MAP     shift, and go to state 278
    ':'     shift, and go to state 279

    ')'         reduce using rule 89 (lst_binary)
    ','         reduce using rule 89 (lst_binary)
    AND         reduce using rule 89 (lst_binary)
    OR          reduce using rule 89 (lst_binary)
    GREATER     reduce using rule 89 (lst_binary)
    GREATER_EQ  reduce using rule 89 (lst_binary)
    LESS        reduce using rule 89 (lst_binary)
    LESS_EQ     reduce using rule 89 (lst_binary)
    EQUAL       reduce using rule 89 (lst_binary)
    NOT_EQ      reduce using rule 89 (lst_binary)


State 318

   36 return_stmt: RETURN_STM operation ';' •

    error           reduce using rule 36 (return_stmt)
    NUM_INT         reduce using rule 36 (return_stmt)
    NUM_FLOAT       reduce using rule 36 (return_stmt)
    NIL_CNST        reduce using rule 36 (return_stmt)
    ID              reduce using rule 36 (return_stmt)
    RETURN_STM      reduce using rule 36 (return_stmt)
    T_INT           reduce using rule 36 (return_stmt)
    T_FLOAT         reduce using rule 36 (return_stmt)
    IF_STMT         reduce using rule 36 (return_stmt)
    ELSE_STMT       reduce using rule 36 (return_stmt)
    FOR_STMT        reduce using rule 36 (return_stmt)
    OUTPUT_WRITE    reduce using rule 36 (return_stmt)
    OUTPUT_WRITELN  reduce using rule 36 (return_stmt)
    INPUT_READ      reduce using rule 36 (return_stmt)
    '('             reduce using rule 36 (return_stmt)
    '{'             reduce using rule 36 (return_stmt)
    '}'             reduce using rule 36 (return_stmt)
    '+'             reduce using rule 36 (return_stmt)
    '-'             reduce using rule 36 (return_stmt)
    '%'             reduce using rule 36 (return_stmt)
    '?'             reduce using rule 36 (return_stmt)
    '!'             reduce using rule 36 (return_stmt)


State 319

   34 conditional_stmt: IF_STMT '(' operation • ')' command
   35                 | IF_STMT '(' operation • ')' command ELSE_STMT command
   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ')'         shift, and go to state 330
    AND         shift, and go to state 186
    OR          shift, and go to state 187
    GREATER     shift, and go to state 188
    GREATER_EQ  shift, and go to state 189
    LESS        shift, and go to state 190
    LESS_EQ     shift, and go to state 191
    EQUAL       shift, and go to state 192
    NOT_EQ      shift, and go to state 193


State 320

   37 iteration: FOR_STMT '(' loop_condition • ')' command

    ')'  shift, and go to state 331


State 321

   44 output: OUTPUT_WRITE '(' STRING • ')' ';'

    ')'  shift, and go to state 332


State 322

   42 output: OUTPUT_WRITE '(' operation • ')' ';'
   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ')'         shift, and go to state 333
    AND         shift, and go to state 186
    OR          shift, and go to state 187
    GREATER     shift, and go to state 188
    GREATER_EQ  shift, and go to state 189
    LESS        shift, and go to state 190
    LESS_EQ     shift, and go to state 191
    EQUAL       shift, and go to state 192
    NOT_EQ      shift, and go to state 193


State 323

   45 output: OUTPUT_WRITELN '(' STRING • ')' ';'

    ')'  shift, and go to state 334


State 324

   43 output: OUTPUT_WRITELN '(' operation • ')' ';'
   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ')'         shift, and go to state 335
    AND         shift, and go to state 186
    OR          shift, and go to state 187
    GREATER     shift, and go to state 188
    GREATER_EQ  shift, and go to state 189
    LESS        shift, and go to state 190
    LESS_EQ     shift, and go to state 191
    EQUAL       shift, and go to state 192
    NOT_EQ      shift, and go to state 193


State 325

   46 input: INPUT_READ '(' operation • ')' ';'
   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    ')'         shift, and go to state 336
    AND         shift, and go to state 186
    OR          shift, and go to state 187
    GREATER     shift, and go to state 188
    GREATER_EQ  shift, and go to state 189
    LESS        shift, and go to state 190
    LESS_EQ     shift, and go to state 191
    EQUAL       shift, and go to state 192
    NOT_EQ      shift, and go to state 193


State 326

   30 command: $@2 '{' block_commands • '}'

    '}'  shift, and go to state 337


State 327

   39 init_stmt: ID '=' operation •
   66 operation: operation • GREATER operation
   67          | operation • GREATER_EQ operation
   68          | operation • LESS operation
   69          | operation • LESS_EQ operation
   70          | operation • EQUAL operation
   71          | operation • NOT_EQ operation
   72          | operation • AND operation
   73          | operation • OR operation

    AND         shift, and go to state 186
    OR          shift, and go to state 187
    GREATER     shift, and go to state 188
    GREATER_EQ  shift, and go to state 189
    LESS        shift, and go to state 190
    LESS_EQ     shift, and go to state 191
    EQUAL       shift, and go to state 192
    NOT_EQ      shift, and go to state 193

    ')'  reduce using rule 39 (init_stmt)


State 328

   49 func_calling: ID '(' $@3 calling_parameters • $@4 ')'

    ')'  reduce using rule 48 ($@4)

    $@4  go to state 338


State 329

   49 func_calling: ID '(' $@3 calling_parameters • $@4 ')'

    ')'  reduce using rule 48 ($@4)

    $@4  go to state 339


State 330

   34 conditional_stmt: IF_STMT '(' operation ')' • command
   35                 | IF_STMT '(' operation ')' • command ELSE_STMT command

    error           shift, and go to state 223
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 224
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 225
    FOR_STMT        shift, and go to state 226
    OUTPUT_WRITE    shift, and go to state 227
    OUTPUT_WRITELN  shift, and go to state 228
    INPUT_READ      shift, and go to state 229
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 29 ($@2)

    var_declaration   go to state 230
    unq_declaration   go to state 231
    command           go to state 340
    $@2               go to state 232
    init_variable     go to state 233
    conditional_stmt  go to state 234
    return_stmt       go to state 235
    iteration         go to state 236
    init_stmt         go to state 237
    output            go to state 238
    input             go to state 239
    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    type              go to state 163
    type_lst          go to state 11
    type_number       go to state 12
    operation         go to state 240
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 331

   37 iteration: FOR_STMT '(' loop_condition ')' • command

    error           shift, and go to state 223
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 224
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 225
    FOR_STMT        shift, and go to state 226
    OUTPUT_WRITE    shift, and go to state 227
    OUTPUT_WRITELN  shift, and go to state 228
    INPUT_READ      shift, and go to state 229
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 29 ($@2)

    var_declaration   go to state 230
    unq_declaration   go to state 231
    command           go to state 341
    $@2               go to state 232
    init_variable     go to state 233
    conditional_stmt  go to state 234
    return_stmt       go to state 235
    iteration         go to state 236
    init_stmt         go to state 237
    output            go to state 238
    input             go to state 239
    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    type              go to state 163
    type_lst          go to state 11
    type_number       go to state 12
    operation         go to state 240
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 332

   44 output: OUTPUT_WRITE '(' STRING ')' • ';'

    ';'  shift, and go to state 342


State 333

   42 output: OUTPUT_WRITE '(' operation ')' • ';'

    ';'  shift, and go to state 343


State 334

   45 output: OUTPUT_WRITELN '(' STRING ')' • ';'

    ';'  shift, and go to state 344


State 335

   43 output: OUTPUT_WRITELN '(' operation ')' • ';'

    ';'  shift, and go to state 345


State 336

   46 input: INPUT_READ '(' operation ')' • ';'

    ';'  shift, and go to state 346


State 337

   30 command: $@2 '{' block_commands '}' •

    error           reduce using rule 30 (command)
    NUM_INT         reduce using rule 30 (command)
    NUM_FLOAT       reduce using rule 30 (command)
    NIL_CNST        reduce using rule 30 (command)
    ID              reduce using rule 30 (command)
    RETURN_STM      reduce using rule 30 (command)
    T_INT           reduce using rule 30 (command)
    T_FLOAT         reduce using rule 30 (command)
    IF_STMT         reduce using rule 30 (command)
    ELSE_STMT       reduce using rule 30 (command)
    FOR_STMT        reduce using rule 30 (command)
    OUTPUT_WRITE    reduce using rule 30 (command)
    OUTPUT_WRITELN  reduce using rule 30 (command)
    INPUT_READ      reduce using rule 30 (command)
    '('             reduce using rule 30 (command)
    '{'             reduce using rule 30 (command)
    '}'             reduce using rule 30 (command)
    '+'             reduce using rule 30 (command)
    '-'             reduce using rule 30 (command)
    '%'             reduce using rule 30 (command)
    '?'             reduce using rule 30 (command)
    '!'             reduce using rule 30 (command)


State 338

   49 func_calling: ID '(' $@3 calling_parameters $@4 • ')'

    ')'  shift, and go to state 347


State 339

   49 func_calling: ID '(' $@3 calling_parameters $@4 • ')'

    ')'  shift, and go to state 348


State 340

   34 conditional_stmt: IF_STMT '(' operation ')' command •
   35                 | IF_STMT '(' operation ')' command • ELSE_STMT command

    ELSE_STMT  shift, and go to state 349

    error           reduce using rule 34 (conditional_stmt)
    NUM_INT         reduce using rule 34 (conditional_stmt)
    NUM_FLOAT       reduce using rule 34 (conditional_stmt)
    NIL_CNST        reduce using rule 34 (conditional_stmt)
    ID              reduce using rule 34 (conditional_stmt)
    RETURN_STM      reduce using rule 34 (conditional_stmt)
    T_INT           reduce using rule 34 (conditional_stmt)
    T_FLOAT         reduce using rule 34 (conditional_stmt)
    IF_STMT         reduce using rule 34 (conditional_stmt)
    FOR_STMT        reduce using rule 34 (conditional_stmt)
    OUTPUT_WRITE    reduce using rule 34 (conditional_stmt)
    OUTPUT_WRITELN  reduce using rule 34 (conditional_stmt)
    INPUT_READ      reduce using rule 34 (conditional_stmt)
    '('             reduce using rule 34 (conditional_stmt)
    '{'             reduce using rule 34 (conditional_stmt)
    '}'             reduce using rule 34 (conditional_stmt)
    '+'             reduce using rule 34 (conditional_stmt)
    '-'             reduce using rule 34 (conditional_stmt)
    '%'             reduce using rule 34 (conditional_stmt)
    '?'             reduce using rule 34 (conditional_stmt)
    '!'             reduce using rule 34 (conditional_stmt)


State 341

   37 iteration: FOR_STMT '(' loop_condition ')' command •

    error           reduce using rule 37 (iteration)
    NUM_INT         reduce using rule 37 (iteration)
    NUM_FLOAT       reduce using rule 37 (iteration)
    NIL_CNST        reduce using rule 37 (iteration)
    ID              reduce using rule 37 (iteration)
    RETURN_STM      reduce using rule 37 (iteration)
    T_INT           reduce using rule 37 (iteration)
    T_FLOAT         reduce using rule 37 (iteration)
    IF_STMT         reduce using rule 37 (iteration)
    ELSE_STMT       reduce using rule 37 (iteration)
    FOR_STMT        reduce using rule 37 (iteration)
    OUTPUT_WRITE    reduce using rule 37 (iteration)
    OUTPUT_WRITELN  reduce using rule 37 (iteration)
    INPUT_READ      reduce using rule 37 (iteration)
    '('             reduce using rule 37 (iteration)
    '{'             reduce using rule 37 (iteration)
    '}'             reduce using rule 37 (iteration)
    '+'             reduce using rule 37 (iteration)
    '-'             reduce using rule 37 (iteration)
    '%'             reduce using rule 37 (iteration)
    '?'             reduce using rule 37 (iteration)
    '!'             reduce using rule 37 (iteration)


State 342

   44 output: OUTPUT_WRITE '(' STRING ')' ';' •

    error           reduce using rule 44 (output)
    NUM_INT         reduce using rule 44 (output)
    NUM_FLOAT       reduce using rule 44 (output)
    NIL_CNST        reduce using rule 44 (output)
    ID              reduce using rule 44 (output)
    RETURN_STM      reduce using rule 44 (output)
    T_INT           reduce using rule 44 (output)
    T_FLOAT         reduce using rule 44 (output)
    IF_STMT         reduce using rule 44 (output)
    ELSE_STMT       reduce using rule 44 (output)
    FOR_STMT        reduce using rule 44 (output)
    OUTPUT_WRITE    reduce using rule 44 (output)
    OUTPUT_WRITELN  reduce using rule 44 (output)
    INPUT_READ      reduce using rule 44 (output)
    '('             reduce using rule 44 (output)
    '{'             reduce using rule 44 (output)
    '}'             reduce using rule 44 (output)
    '+'             reduce using rule 44 (output)
    '-'             reduce using rule 44 (output)
    '%'             reduce using rule 44 (output)
    '?'             reduce using rule 44 (output)
    '!'             reduce using rule 44 (output)


State 343

   42 output: OUTPUT_WRITE '(' operation ')' ';' •

    error           reduce using rule 42 (output)
    NUM_INT         reduce using rule 42 (output)
    NUM_FLOAT       reduce using rule 42 (output)
    NIL_CNST        reduce using rule 42 (output)
    ID              reduce using rule 42 (output)
    RETURN_STM      reduce using rule 42 (output)
    T_INT           reduce using rule 42 (output)
    T_FLOAT         reduce using rule 42 (output)
    IF_STMT         reduce using rule 42 (output)
    ELSE_STMT       reduce using rule 42 (output)
    FOR_STMT        reduce using rule 42 (output)
    OUTPUT_WRITE    reduce using rule 42 (output)
    OUTPUT_WRITELN  reduce using rule 42 (output)
    INPUT_READ      reduce using rule 42 (output)
    '('             reduce using rule 42 (output)
    '{'             reduce using rule 42 (output)
    '}'             reduce using rule 42 (output)
    '+'             reduce using rule 42 (output)
    '-'             reduce using rule 42 (output)
    '%'             reduce using rule 42 (output)
    '?'             reduce using rule 42 (output)
    '!'             reduce using rule 42 (output)


State 344

   45 output: OUTPUT_WRITELN '(' STRING ')' ';' •

    error           reduce using rule 45 (output)
    NUM_INT         reduce using rule 45 (output)
    NUM_FLOAT       reduce using rule 45 (output)
    NIL_CNST        reduce using rule 45 (output)
    ID              reduce using rule 45 (output)
    RETURN_STM      reduce using rule 45 (output)
    T_INT           reduce using rule 45 (output)
    T_FLOAT         reduce using rule 45 (output)
    IF_STMT         reduce using rule 45 (output)
    ELSE_STMT       reduce using rule 45 (output)
    FOR_STMT        reduce using rule 45 (output)
    OUTPUT_WRITE    reduce using rule 45 (output)
    OUTPUT_WRITELN  reduce using rule 45 (output)
    INPUT_READ      reduce using rule 45 (output)
    '('             reduce using rule 45 (output)
    '{'             reduce using rule 45 (output)
    '}'             reduce using rule 45 (output)
    '+'             reduce using rule 45 (output)
    '-'             reduce using rule 45 (output)
    '%'             reduce using rule 45 (output)
    '?'             reduce using rule 45 (output)
    '!'             reduce using rule 45 (output)


State 345

   43 output: OUTPUT_WRITELN '(' operation ')' ';' •

    error           reduce using rule 43 (output)
    NUM_INT         reduce using rule 43 (output)
    NUM_FLOAT       reduce using rule 43 (output)
    NIL_CNST        reduce using rule 43 (output)
    ID              reduce using rule 43 (output)
    RETURN_STM      reduce using rule 43 (output)
    T_INT           reduce using rule 43 (output)
    T_FLOAT         reduce using rule 43 (output)
    IF_STMT         reduce using rule 43 (output)
    ELSE_STMT       reduce using rule 43 (output)
    FOR_STMT        reduce using rule 43 (output)
    OUTPUT_WRITE    reduce using rule 43 (output)
    OUTPUT_WRITELN  reduce using rule 43 (output)
    INPUT_READ      reduce using rule 43 (output)
    '('             reduce using rule 43 (output)
    '{'             reduce using rule 43 (output)
    '}'             reduce using rule 43 (output)
    '+'             reduce using rule 43 (output)
    '-'             reduce using rule 43 (output)
    '%'             reduce using rule 43 (output)
    '?'             reduce using rule 43 (output)
    '!'             reduce using rule 43 (output)


State 346

   46 input: INPUT_READ '(' operation ')' ';' •

    error           reduce using rule 46 (input)
    NUM_INT         reduce using rule 46 (input)
    NUM_FLOAT       reduce using rule 46 (input)
    NIL_CNST        reduce using rule 46 (input)
    ID              reduce using rule 46 (input)
    RETURN_STM      reduce using rule 46 (input)
    T_INT           reduce using rule 46 (input)
    T_FLOAT         reduce using rule 46 (input)
    IF_STMT         reduce using rule 46 (input)
    ELSE_STMT       reduce using rule 46 (input)
    FOR_STMT        reduce using rule 46 (input)
    OUTPUT_WRITE    reduce using rule 46 (input)
    OUTPUT_WRITELN  reduce using rule 46 (input)
    INPUT_READ      reduce using rule 46 (input)
    '('             reduce using rule 46 (input)
    '{'             reduce using rule 46 (input)
    '}'             reduce using rule 46 (input)
    '+'             reduce using rule 46 (input)
    '-'             reduce using rule 46 (input)
    '%'             reduce using rule 46 (input)
    '?'             reduce using rule 46 (input)
    '!'             reduce using rule 46 (input)


State 347

   49 func_calling: ID '(' $@3 calling_parameters $@4 ')' •

    ')'         reduce using rule 49 (func_calling)
    AND         reduce using rule 49 (func_calling)
    OR          reduce using rule 49 (func_calling)
    GREATER     reduce using rule 49 (func_calling)
    GREATER_EQ  reduce using rule 49 (func_calling)
    LESS        reduce using rule 49 (func_calling)
    LESS_EQ     reduce using rule 49 (func_calling)
    EQUAL       reduce using rule 49 (func_calling)
    NOT_EQ      reduce using rule 49 (func_calling)
    '+'         reduce using rule 49 (func_calling)
    '-'         reduce using rule 49 (func_calling)
    '*'         reduce using rule 49 (func_calling)
    '/'         reduce using rule 49 (func_calling)
    FILTER      reduce using rule 49 (func_calling)
    MAP         reduce using rule 49 (func_calling)
    ':'         reduce using rule 49 (func_calling)


State 348

   49 func_calling: ID '(' $@3 calling_parameters $@4 ')' •

    ')'         reduce using rule 49 (func_calling)
    ','         reduce using rule 49 (func_calling)
    AND         reduce using rule 49 (func_calling)
    OR          reduce using rule 49 (func_calling)
    GREATER     reduce using rule 49 (func_calling)
    GREATER_EQ  reduce using rule 49 (func_calling)
    LESS        reduce using rule 49 (func_calling)
    LESS_EQ     reduce using rule 49 (func_calling)
    EQUAL       reduce using rule 49 (func_calling)
    NOT_EQ      reduce using rule 49 (func_calling)
    '+'         reduce using rule 49 (func_calling)
    '-'         reduce using rule 49 (func_calling)
    '*'         reduce using rule 49 (func_calling)
    '/'         reduce using rule 49 (func_calling)
    FILTER      reduce using rule 49 (func_calling)
    MAP         reduce using rule 49 (func_calling)
    ':'         reduce using rule 49 (func_calling)


State 349

   35 conditional_stmt: IF_STMT '(' operation ')' command ELSE_STMT • command

    error           shift, and go to state 223
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 224
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 225
    FOR_STMT        shift, and go to state 226
    OUTPUT_WRITE    shift, and go to state 227
    OUTPUT_WRITELN  shift, and go to state 228
    INPUT_READ      shift, and go to state 229
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 29 ($@2)

    var_declaration   go to state 230
    unq_declaration   go to state 231
    command           go to state 350
    $@2               go to state 232
    init_variable     go to state 233
    conditional_stmt  go to state 234
    return_stmt       go to state 235
    iteration         go to state 236
    init_stmt         go to state 237
    output            go to state 238
    input             go to state 239
    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    type              go to state 163
    type_lst          go to state 11
    type_number       go to state 12
    operation         go to state 240
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 350

   35 conditional_stmt: IF_STMT '(' operation ')' command ELSE_STMT command •

    error           reduce using rule 35 (conditional_stmt)
    NUM_INT         reduce using rule 35 (conditional_stmt)
    NUM_FLOAT       reduce using rule 35 (conditional_stmt)
    NIL_CNST        reduce using rule 35 (conditional_stmt)
    ID              reduce using rule 35 (conditional_stmt)
    RETURN_STM      reduce using rule 35 (conditional_stmt)
    T_INT           reduce using rule 35 (conditional_stmt)
    T_FLOAT         reduce using rule 35 (conditional_stmt)
    IF_STMT         reduce using rule 35 (conditional_stmt)
    ELSE_STMT       reduce using rule 35 (conditional_stmt)
    FOR_STMT        reduce using rule 35 (conditional_stmt)
    OUTPUT_WRITE    reduce using rule 35 (conditional_stmt)
    OUTPUT_WRITELN  reduce using rule 35 (conditional_stmt)
    INPUT_READ      reduce using rule 35 (conditional_stmt)
    '('             reduce using rule 35 (conditional_stmt)
    '{'             reduce using rule 35 (conditional_stmt)
    '}'             reduce using rule 35 (conditional_stmt)
    '+'             reduce using rule 35 (conditional_stmt)
    '-'             reduce using rule 35 (conditional_stmt)
    '%'             reduce using rule 35 (conditional_stmt)
    '?'             reduce using rule 35 (conditional_stmt)
    '!'             reduce using rule 35 (conditional_stmt)
