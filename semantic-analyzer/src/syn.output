Grammar

    0 $accept: program $end

    1 program: lst_declarations
    2        | %empty

    3 lst_declarations: declaration lst_declarations
    4                 | declaration

    5 declaration: func_declaration
    6            | var_declaration
    7            | error

    8 $@1: %empty

    9 func_declaration: unq_declaration $@1 '(' parameters ')' '{' block_commands '}'

   10 var_declaration: unq_declaration ';'

   11 unq_declaration: type ID

   12 parameters: lst_parameters
   13           | %empty

   14 lst_parameters: unq_declaration ',' lst_parameters
   15               | unq_declaration

   16 calling_parameters: lst_calling_parameters
   17                   | %empty

   18 lst_calling_parameters: operation ',' lst_calling_parameters
   19                       | operation

   20 block_commands: command block_commands
   21               | command

   22 command: var_declaration
   23        | init_variable
   24        | conditional_stmt
   25        | return_stmt
   26        | iteration
   27        | input
   28        | output

   29 $@2: %empty

   30 command: $@2 '{' block_commands '}'
   31        | operation ';'
   32        | error ';'
   33        | error

   34 init_variable: init_stmt ';'

   35 init_stmt: iden '=' operation

   36 conditional_stmt: IF_STMT '(' operation ')' command
   37                 | IF_STMT '(' operation ')' command ELSE_STMT command

   38 return_stmt: RETURN_STM operation ';'

   39 iteration: FOR_STMT '(' loop_condition ')' command

   40 loop_condition: update_stmt ';' stop_stmt ';' update_stmt

   41 update_stmt: init_stmt
   42            | %empty

   43 stop_stmt: operation
   44          | %empty

   45 output: OUTPUT_WRITE '(' operation ')' ';'
   46       | OUTPUT_WRITELN '(' operation ')' ';'
   47       | OUTPUT_WRITE '(' STRING ')' ';'
   48       | OUTPUT_WRITELN '(' STRING ')' ';'

   49 input: INPUT_READ '(' iden ')' ';'

   50 $@3: %empty

   51 $@4: %empty

   52 func_calling: ID '(' $@3 calling_parameters $@4 ')'

   53 expression: func_calling
   54           | single_operation
   55           | const
   56           | iden
   57           | '(' operation ')'

   58 iden: ID

   59 const: number
   60      | NIL_CNST

   61 number: NUM_INT
   62       | NUM_FLOAT

   63 type: type_lst
   64     | type_number

   65 type_lst: type_number T_LIST

   66 type_number: T_INT
   67            | T_FLOAT

   68 operation: lst_binary
   69          | operation GREATER operation
   70          | operation GREATER_EQ operation
   71          | operation LESS operation
   72          | operation LESS_EQ operation
   73          | operation EQUAL operation
   74          | operation NOT_EQ operation
   75          | operation AND operation
   76          | operation OR operation

   77 single_operation: arith_single
   78                 | lst_single
   79                 | '!' expression

   80 arith_binary: arith_binary '+' term
   81             | arith_binary '-' term
   82             | term

   83 term: term '*' expression
   84     | term '/' expression
   85     | expression

   86 arith_single: '+' expression
   87             | '-' expression

   88 lst_single: '%' expression
   89           | '?' expression

   90 lst_binary: lst_binary FILTER lst_binary
   91           | lst_binary MAP lst_binary
   92           | lst_binary ':' lst_binary
   93           | arith_binary


Terminals, with rules where they appear

    $end (0) 0
    '!' <token> (33) 79
    '%' <token> (37) 88
    '(' <token> (40) 9 36 37 39 45 46 47 48 49 52 57
    ')' <token> (41) 9 36 37 39 45 46 47 48 49 52 57
    '*' <token> (42) 83
    '+' <token> (43) 80 86
    ',' <token> (44) 14 18
    '-' <token> (45) 81 87
    '/' <token> (47) 84
    ':' <token> (58) 92
    ';' <token> (59) 10 31 32 34 38 40 45 46 47 48 49
    '=' <token> (61) 35
    '?' <token> (63) 89
    '{' <token> (123) 9 30
    '}' <token> (125) 9 30
    error (256) 7 32 33
    NUM_INT <token> (258) 61
    NUM_FLOAT <token> (259) 62
    STRING <token> (260) 47 48
    NIL_CNST <token> (261) 60
    ID <token> (262) 11 52 58
    RETURN_STM <token> (263) 38
    T_INT <token> (264) 66
    T_FLOAT <token> (265) 67
    T_LIST <token> (266) 65
    IF_STMT <token> (267) 36 37
    ELSE_STMT <token> (268) 37
    FOR_STMT <token> (269) 39
    OUTPUT_WRITE <token> (270) 45 47
    OUTPUT_WRITELN <token> (271) 46 48
    INPUT_READ <token> (272) 49
    AND <token> (273) 75
    OR <token> (274) 76
    GREATER <token> (275) 69
    GREATER_EQ <token> (276) 70
    LESS <token> (277) 71
    LESS_EQ <token> (278) 72
    EQUAL <token> (279) 73
    NOT_EQ <token> (280) 74
    FILTER <token> (281) 90
    MAP <token> (282) 91


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    program <node> (44)
        on left: 1 2
        on right: 0
    lst_declarations <node> (45)
        on left: 3 4
        on right: 1 3
    declaration <node> (46)
        on left: 5 6 7
        on right: 3 4
    func_declaration <node> (47)
        on left: 9
        on right: 5
    $@1 (48)
        on left: 8
        on right: 9
    var_declaration <node> (49)
        on left: 10
        on right: 6 22
    unq_declaration <node> (50)
        on left: 11
        on right: 9 10 14 15
    parameters <node> (51)
        on left: 12 13
        on right: 9
    lst_parameters <node> (52)
        on left: 14 15
        on right: 12 14
    calling_parameters <node> (53)
        on left: 16 17
        on right: 52
    lst_calling_parameters <node> (54)
        on left: 18 19
        on right: 16 18
    block_commands <node> (55)
        on left: 20 21
        on right: 9 20 30
    command <node> (56)
        on left: 22 23 24 25 26 27 28 30 31 32 33
        on right: 20 21 36 37 39
    $@2 (57)
        on left: 29
        on right: 30
    init_variable <node> (58)
        on left: 34
        on right: 23
    init_stmt <node> (59)
        on left: 35
        on right: 34 41
    conditional_stmt <node> (60)
        on left: 36 37
        on right: 24
    return_stmt <node> (61)
        on left: 38
        on right: 25
    iteration <node> (62)
        on left: 39
        on right: 26
    loop_condition <node> (63)
        on left: 40
        on right: 39
    update_stmt <node> (64)
        on left: 41 42
        on right: 40
    stop_stmt <node> (65)
        on left: 43 44
        on right: 40
    output <node> (66)
        on left: 45 46 47 48
        on right: 28
    input <node> (67)
        on left: 49
        on right: 27
    func_calling <node> (68)
        on left: 52
        on right: 53
    $@3 (69)
        on left: 50
        on right: 52
    $@4 (70)
        on left: 51
        on right: 52
    expression <node> (71)
        on left: 53 54 55 56 57
        on right: 79 83 84 85 86 87 88 89
    iden <node> (72)
        on left: 58
        on right: 35 49 56
    const <node> (73)
        on left: 59 60
        on right: 55
    number <node> (74)
        on left: 61 62
        on right: 59
    type <node> (75)
        on left: 63 64
        on right: 11
    type_lst <node> (76)
        on left: 65
        on right: 63
    type_number <node> (77)
        on left: 66 67
        on right: 64 65
    operation <node> (78)
        on left: 68 69 70 71 72 73 74 75 76
        on right: 18 19 31 35 36 37 38 43 45 46 57 69 70 71 72 73 74 75 76
    single_operation <node> (79)
        on left: 77 78 79
        on right: 54
    arith_binary <node> (80)
        on left: 80 81 82
        on right: 80 81 93
    term <node> (81)
        on left: 83 84 85
        on right: 80 81 82 83 84
    arith_single <node> (82)
        on left: 86 87
        on right: 77
    lst_single <node> (83)
        on left: 88 89
        on right: 78
    lst_binary <node> (84)
        on left: 90 91 92 93
        on right: 68 90 91 92


State 0

    0 $accept: • program $end

    error    shift, and go to state 1
    T_INT    shift, and go to state 2
    T_FLOAT  shift, and go to state 3

    $end  reduce using rule 2 (program)

    program           go to state 4
    lst_declarations  go to state 5
    declaration       go to state 6
    func_declaration  go to state 7
    var_declaration   go to state 8
    unq_declaration   go to state 9
    type              go to state 10
    type_lst          go to state 11
    type_number       go to state 12


State 1

    7 declaration: error •

    $end     reduce using rule 7 (declaration)
    error    reduce using rule 7 (declaration)
    T_INT    reduce using rule 7 (declaration)
    T_FLOAT  reduce using rule 7 (declaration)


State 2

   66 type_number: T_INT •

    ID      reduce using rule 66 (type_number)
    T_LIST  reduce using rule 66 (type_number)


State 3

   67 type_number: T_FLOAT •

    ID      reduce using rule 67 (type_number)
    T_LIST  reduce using rule 67 (type_number)


State 4

    0 $accept: program • $end

    $end  shift, and go to state 13


State 5

    1 program: lst_declarations •

    $end  reduce using rule 1 (program)


State 6

    3 lst_declarations: declaration • lst_declarations
    4                 | declaration •

    error    shift, and go to state 1
    T_INT    shift, and go to state 2
    T_FLOAT  shift, and go to state 3

    $end  reduce using rule 4 (lst_declarations)

    lst_declarations  go to state 14
    declaration       go to state 6
    func_declaration  go to state 7
    var_declaration   go to state 8
    unq_declaration   go to state 9
    type              go to state 10
    type_lst          go to state 11
    type_number       go to state 12


State 7

    5 declaration: func_declaration •

    $end     reduce using rule 5 (declaration)
    error    reduce using rule 5 (declaration)
    T_INT    reduce using rule 5 (declaration)
    T_FLOAT  reduce using rule 5 (declaration)


State 8

    6 declaration: var_declaration •

    $end     reduce using rule 6 (declaration)
    error    reduce using rule 6 (declaration)
    T_INT    reduce using rule 6 (declaration)
    T_FLOAT  reduce using rule 6 (declaration)


State 9

    9 func_declaration: unq_declaration • $@1 '(' parameters ')' '{' block_commands '}'
   10 var_declaration: unq_declaration • ';'

    ';'  shift, and go to state 15

    '('  reduce using rule 8 ($@1)

    $@1  go to state 16


State 10

   11 unq_declaration: type • ID

    ID  shift, and go to state 17


State 11

   63 type: type_lst •

    ID  reduce using rule 63 (type)


State 12

   64 type: type_number •
   65 type_lst: type_number • T_LIST

    T_LIST  shift, and go to state 18

    ID  reduce using rule 64 (type)


State 13

    0 $accept: program $end •

    $default  accept


State 14

    3 lst_declarations: declaration lst_declarations •

    $end  reduce using rule 3 (lst_declarations)


State 15

   10 var_declaration: unq_declaration ';' •

    $end     reduce using rule 10 (var_declaration)
    error    reduce using rule 10 (var_declaration)
    T_INT    reduce using rule 10 (var_declaration)
    T_FLOAT  reduce using rule 10 (var_declaration)


State 16

    9 func_declaration: unq_declaration $@1 • '(' parameters ')' '{' block_commands '}'

    '('  shift, and go to state 19


State 17

   11 unq_declaration: type ID •

    '('  reduce using rule 11 (unq_declaration)
    ';'  reduce using rule 11 (unq_declaration)


State 18

   65 type_lst: type_number T_LIST •

    ID  reduce using rule 65 (type_lst)


State 19

    9 func_declaration: unq_declaration $@1 '(' • parameters ')' '{' block_commands '}'

    T_INT    shift, and go to state 2
    T_FLOAT  shift, and go to state 3

    ')'  reduce using rule 13 (parameters)

    unq_declaration  go to state 20
    parameters       go to state 21
    lst_parameters   go to state 22
    type             go to state 164
    type_lst         go to state 11
    type_number      go to state 12


State 20

   14 lst_parameters: unq_declaration • ',' lst_parameters
   15               | unq_declaration •

    ','  shift, and go to state 23

    ')'  reduce using rule 15 (lst_parameters)


State 21

    9 func_declaration: unq_declaration $@1 '(' parameters • ')' '{' block_commands '}'

    ')'  shift, and go to state 24


State 22

   12 parameters: lst_parameters •

    ')'  reduce using rule 12 (parameters)


State 23

   14 lst_parameters: unq_declaration ',' • lst_parameters

    T_INT    shift, and go to state 2
    T_FLOAT  shift, and go to state 3

    unq_declaration  go to state 20
    lst_parameters   go to state 25
    type             go to state 164
    type_lst         go to state 11
    type_number      go to state 12


State 24

    9 func_declaration: unq_declaration $@1 '(' parameters ')' • '{' block_commands '}'

    '{'  shift, and go to state 26


State 25

   14 lst_parameters: unq_declaration ',' lst_parameters •

    ')'  reduce using rule 14 (lst_parameters)


State 26

    9 func_declaration: unq_declaration $@1 '(' parameters ')' '{' • block_commands '}'

    error           shift, and go to state 27
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 32
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 33
    FOR_STMT        shift, and go to state 34
    OUTPUT_WRITE    shift, and go to state 35
    OUTPUT_WRITELN  shift, and go to state 36
    INPUT_READ      shift, and go to state 37
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 29 ($@2)

    var_declaration   go to state 44
    unq_declaration   go to state 45
    block_commands    go to state 46
    command           go to state 47
    $@2               go to state 48
    init_variable     go to state 49
    init_stmt         go to state 50
    conditional_stmt  go to state 51
    return_stmt       go to state 52
    iteration         go to state 53
    output            go to state 54
    input             go to state 55
    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    type              go to state 165
    type_lst          go to state 11
    type_number       go to state 12
    operation         go to state 61
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 27

   32 command: error • ';'
   33        | error •

    ';'  shift, and go to state 68

    error           reduce using rule 33 (command)
    NUM_INT         reduce using rule 33 (command)
    NUM_FLOAT       reduce using rule 33 (command)
    NIL_CNST        reduce using rule 33 (command)
    ID              reduce using rule 33 (command)
    RETURN_STM      reduce using rule 33 (command)
    T_INT           reduce using rule 33 (command)
    T_FLOAT         reduce using rule 33 (command)
    IF_STMT         reduce using rule 33 (command)
    FOR_STMT        reduce using rule 33 (command)
    OUTPUT_WRITE    reduce using rule 33 (command)
    OUTPUT_WRITELN  reduce using rule 33 (command)
    INPUT_READ      reduce using rule 33 (command)
    '('             reduce using rule 33 (command)
    '{'             reduce using rule 33 (command)
    '}'             reduce using rule 33 (command)
    '+'             reduce using rule 33 (command)
    '-'             reduce using rule 33 (command)
    '%'             reduce using rule 33 (command)
    '?'             reduce using rule 33 (command)
    '!'             reduce using rule 33 (command)


State 28

   61 number: NUM_INT •

    ';'         reduce using rule 61 (number)
    AND         reduce using rule 61 (number)
    OR          reduce using rule 61 (number)
    GREATER     reduce using rule 61 (number)
    GREATER_EQ  reduce using rule 61 (number)
    LESS        reduce using rule 61 (number)
    LESS_EQ     reduce using rule 61 (number)
    EQUAL       reduce using rule 61 (number)
    NOT_EQ      reduce using rule 61 (number)
    '+'         reduce using rule 61 (number)
    '-'         reduce using rule 61 (number)
    '*'         reduce using rule 61 (number)
    '/'         reduce using rule 61 (number)
    FILTER      reduce using rule 61 (number)
    MAP         reduce using rule 61 (number)
    ':'         reduce using rule 61 (number)


State 29

   62 number: NUM_FLOAT •

    ';'         reduce using rule 62 (number)
    AND         reduce using rule 62 (number)
    OR          reduce using rule 62 (number)
    GREATER     reduce using rule 62 (number)
    GREATER_EQ  reduce using rule 62 (number)
    LESS        reduce using rule 62 (number)
    LESS_EQ     reduce using rule 62 (number)
    EQUAL       reduce using rule 62 (number)
    NOT_EQ      reduce using rule 62 (number)
    '+'         reduce using rule 62 (number)
    '-'         reduce using rule 62 (number)
    '*'         reduce using rule 62 (number)
    '/'         reduce using rule 62 (number)
    FILTER      reduce using rule 62 (number)
    MAP         reduce using rule 62 (number)
    ':'         reduce using rule 62 (number)


State 30

   60 const: NIL_CNST •

    ';'         reduce using rule 60 (const)
    AND         reduce using rule 60 (const)
    OR          reduce using rule 60 (const)
    GREATER     reduce using rule 60 (const)
    GREATER_EQ  reduce using rule 60 (const)
    LESS        reduce using rule 60 (const)
    LESS_EQ     reduce using rule 60 (const)
    EQUAL       reduce using rule 60 (const)
    NOT_EQ      reduce using rule 60 (const)
    '+'         reduce using rule 60 (const)
    '-'         reduce using rule 60 (const)
    '*'         reduce using rule 60 (const)
    '/'         reduce using rule 60 (const)
    FILTER      reduce using rule 60 (const)
    MAP         reduce using rule 60 (const)
    ':'         reduce using rule 60 (const)


State 31

   52 func_calling: ID • '(' $@3 calling_parameters $@4 ')'
   58 iden: ID •

    '('  shift, and go to state 69

    ';'         reduce using rule 58 (iden)
    AND         reduce using rule 58 (iden)
    OR          reduce using rule 58 (iden)
    GREATER     reduce using rule 58 (iden)
    GREATER_EQ  reduce using rule 58 (iden)
    LESS        reduce using rule 58 (iden)
    LESS_EQ     reduce using rule 58 (iden)
    EQUAL       reduce using rule 58 (iden)
    NOT_EQ      reduce using rule 58 (iden)
    '+'         reduce using rule 58 (iden)
    '-'         reduce using rule 58 (iden)
    '*'         reduce using rule 58 (iden)
    '/'         reduce using rule 58 (iden)
    FILTER      reduce using rule 58 (iden)
    MAP         reduce using rule 58 (iden)
    ':'         reduce using rule 58 (iden)
    '='         reduce using rule 58 (iden)


State 32

   38 return_stmt: RETURN_STM • operation ';'

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 70
    const             go to state 59
    number            go to state 60
    operation         go to state 71
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 33

   36 conditional_stmt: IF_STMT • '(' operation ')' command
   37                 | IF_STMT • '(' operation ')' command ELSE_STMT command

    '('  shift, and go to state 72


State 34

   39 iteration: FOR_STMT • '(' loop_condition ')' command

    '('  shift, and go to state 73


State 35

   45 output: OUTPUT_WRITE • '(' operation ')' ';'
   47       | OUTPUT_WRITE • '(' STRING ')' ';'

    '('  shift, and go to state 74


State 36

   46 output: OUTPUT_WRITELN • '(' operation ')' ';'
   48       | OUTPUT_WRITELN • '(' STRING ')' ';'

    '('  shift, and go to state 75


State 37

   49 input: INPUT_READ • '(' iden ')' ';'

    '('  shift, and go to state 76


State 38

   57 expression: '(' • operation ')'

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 178
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    operation         go to state 77
    single_operation  go to state 182
    arith_binary      go to state 183
    term              go to state 184
    arith_single      go to state 185
    lst_single        go to state 186
    lst_binary        go to state 187


State 39

   86 arith_single: '+' • expression

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 78
    iden              go to state 70
    const             go to state 59
    number            go to state 60
    single_operation  go to state 62
    arith_single      go to state 65
    lst_single        go to state 66


State 40

   87 arith_single: '-' • expression

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 79
    iden              go to state 70
    const             go to state 59
    number            go to state 60
    single_operation  go to state 62
    arith_single      go to state 65
    lst_single        go to state 66


State 41

   88 lst_single: '%' • expression

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 80
    iden              go to state 70
    const             go to state 59
    number            go to state 60
    single_operation  go to state 62
    arith_single      go to state 65
    lst_single        go to state 66


State 42

   89 lst_single: '?' • expression

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 81
    iden              go to state 70
    const             go to state 59
    number            go to state 60
    single_operation  go to state 62
    arith_single      go to state 65
    lst_single        go to state 66


State 43

   79 single_operation: '!' • expression

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 82
    iden              go to state 70
    const             go to state 59
    number            go to state 60
    single_operation  go to state 62
    arith_single      go to state 65
    lst_single        go to state 66


State 44

   22 command: var_declaration •

    error           reduce using rule 22 (command)
    NUM_INT         reduce using rule 22 (command)
    NUM_FLOAT       reduce using rule 22 (command)
    NIL_CNST        reduce using rule 22 (command)
    ID              reduce using rule 22 (command)
    RETURN_STM      reduce using rule 22 (command)
    T_INT           reduce using rule 22 (command)
    T_FLOAT         reduce using rule 22 (command)
    IF_STMT         reduce using rule 22 (command)
    FOR_STMT        reduce using rule 22 (command)
    OUTPUT_WRITE    reduce using rule 22 (command)
    OUTPUT_WRITELN  reduce using rule 22 (command)
    INPUT_READ      reduce using rule 22 (command)
    '('             reduce using rule 22 (command)
    '{'             reduce using rule 22 (command)
    '}'             reduce using rule 22 (command)
    '+'             reduce using rule 22 (command)
    '-'             reduce using rule 22 (command)
    '%'             reduce using rule 22 (command)
    '?'             reduce using rule 22 (command)
    '!'             reduce using rule 22 (command)


State 45

   10 var_declaration: unq_declaration • ';'

    ';'  shift, and go to state 188


State 46

    9 func_declaration: unq_declaration $@1 '(' parameters ')' '{' block_commands • '}'

    '}'  shift, and go to state 83


State 47

   20 block_commands: command • block_commands
   21               | command •

    error           shift, and go to state 27
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 32
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 33
    FOR_STMT        shift, and go to state 34
    OUTPUT_WRITE    shift, and go to state 35
    OUTPUT_WRITELN  shift, and go to state 36
    INPUT_READ      shift, and go to state 37
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 29 ($@2)
    '}'  reduce using rule 21 (block_commands)

    var_declaration   go to state 44
    unq_declaration   go to state 45
    block_commands    go to state 84
    command           go to state 47
    $@2               go to state 48
    init_variable     go to state 49
    init_stmt         go to state 50
    conditional_stmt  go to state 51
    return_stmt       go to state 52
    iteration         go to state 53
    output            go to state 54
    input             go to state 55
    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    type              go to state 165
    type_lst          go to state 11
    type_number       go to state 12
    operation         go to state 61
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 48

   30 command: $@2 • '{' block_commands '}'

    '{'  shift, and go to state 85


State 49

   23 command: init_variable •

    error           reduce using rule 23 (command)
    NUM_INT         reduce using rule 23 (command)
    NUM_FLOAT       reduce using rule 23 (command)
    NIL_CNST        reduce using rule 23 (command)
    ID              reduce using rule 23 (command)
    RETURN_STM      reduce using rule 23 (command)
    T_INT           reduce using rule 23 (command)
    T_FLOAT         reduce using rule 23 (command)
    IF_STMT         reduce using rule 23 (command)
    FOR_STMT        reduce using rule 23 (command)
    OUTPUT_WRITE    reduce using rule 23 (command)
    OUTPUT_WRITELN  reduce using rule 23 (command)
    INPUT_READ      reduce using rule 23 (command)
    '('             reduce using rule 23 (command)
    '{'             reduce using rule 23 (command)
    '}'             reduce using rule 23 (command)
    '+'             reduce using rule 23 (command)
    '-'             reduce using rule 23 (command)
    '%'             reduce using rule 23 (command)
    '?'             reduce using rule 23 (command)
    '!'             reduce using rule 23 (command)


State 50

   34 init_variable: init_stmt • ';'

    ';'  shift, and go to state 86


State 51

   24 command: conditional_stmt •

    error           reduce using rule 24 (command)
    NUM_INT         reduce using rule 24 (command)
    NUM_FLOAT       reduce using rule 24 (command)
    NIL_CNST        reduce using rule 24 (command)
    ID              reduce using rule 24 (command)
    RETURN_STM      reduce using rule 24 (command)
    T_INT           reduce using rule 24 (command)
    T_FLOAT         reduce using rule 24 (command)
    IF_STMT         reduce using rule 24 (command)
    FOR_STMT        reduce using rule 24 (command)
    OUTPUT_WRITE    reduce using rule 24 (command)
    OUTPUT_WRITELN  reduce using rule 24 (command)
    INPUT_READ      reduce using rule 24 (command)
    '('             reduce using rule 24 (command)
    '{'             reduce using rule 24 (command)
    '}'             reduce using rule 24 (command)
    '+'             reduce using rule 24 (command)
    '-'             reduce using rule 24 (command)
    '%'             reduce using rule 24 (command)
    '?'             reduce using rule 24 (command)
    '!'             reduce using rule 24 (command)


State 52

   25 command: return_stmt •

    error           reduce using rule 25 (command)
    NUM_INT         reduce using rule 25 (command)
    NUM_FLOAT       reduce using rule 25 (command)
    NIL_CNST        reduce using rule 25 (command)
    ID              reduce using rule 25 (command)
    RETURN_STM      reduce using rule 25 (command)
    T_INT           reduce using rule 25 (command)
    T_FLOAT         reduce using rule 25 (command)
    IF_STMT         reduce using rule 25 (command)
    FOR_STMT        reduce using rule 25 (command)
    OUTPUT_WRITE    reduce using rule 25 (command)
    OUTPUT_WRITELN  reduce using rule 25 (command)
    INPUT_READ      reduce using rule 25 (command)
    '('             reduce using rule 25 (command)
    '{'             reduce using rule 25 (command)
    '}'             reduce using rule 25 (command)
    '+'             reduce using rule 25 (command)
    '-'             reduce using rule 25 (command)
    '%'             reduce using rule 25 (command)
    '?'             reduce using rule 25 (command)
    '!'             reduce using rule 25 (command)


State 53

   26 command: iteration •

    error           reduce using rule 26 (command)
    NUM_INT         reduce using rule 26 (command)
    NUM_FLOAT       reduce using rule 26 (command)
    NIL_CNST        reduce using rule 26 (command)
    ID              reduce using rule 26 (command)
    RETURN_STM      reduce using rule 26 (command)
    T_INT           reduce using rule 26 (command)
    T_FLOAT         reduce using rule 26 (command)
    IF_STMT         reduce using rule 26 (command)
    FOR_STMT        reduce using rule 26 (command)
    OUTPUT_WRITE    reduce using rule 26 (command)
    OUTPUT_WRITELN  reduce using rule 26 (command)
    INPUT_READ      reduce using rule 26 (command)
    '('             reduce using rule 26 (command)
    '{'             reduce using rule 26 (command)
    '}'             reduce using rule 26 (command)
    '+'             reduce using rule 26 (command)
    '-'             reduce using rule 26 (command)
    '%'             reduce using rule 26 (command)
    '?'             reduce using rule 26 (command)
    '!'             reduce using rule 26 (command)


State 54

   28 command: output •

    error           reduce using rule 28 (command)
    NUM_INT         reduce using rule 28 (command)
    NUM_FLOAT       reduce using rule 28 (command)
    NIL_CNST        reduce using rule 28 (command)
    ID              reduce using rule 28 (command)
    RETURN_STM      reduce using rule 28 (command)
    T_INT           reduce using rule 28 (command)
    T_FLOAT         reduce using rule 28 (command)
    IF_STMT         reduce using rule 28 (command)
    FOR_STMT        reduce using rule 28 (command)
    OUTPUT_WRITE    reduce using rule 28 (command)
    OUTPUT_WRITELN  reduce using rule 28 (command)
    INPUT_READ      reduce using rule 28 (command)
    '('             reduce using rule 28 (command)
    '{'             reduce using rule 28 (command)
    '}'             reduce using rule 28 (command)
    '+'             reduce using rule 28 (command)
    '-'             reduce using rule 28 (command)
    '%'             reduce using rule 28 (command)
    '?'             reduce using rule 28 (command)
    '!'             reduce using rule 28 (command)


State 55

   27 command: input •

    error           reduce using rule 27 (command)
    NUM_INT         reduce using rule 27 (command)
    NUM_FLOAT       reduce using rule 27 (command)
    NIL_CNST        reduce using rule 27 (command)
    ID              reduce using rule 27 (command)
    RETURN_STM      reduce using rule 27 (command)
    T_INT           reduce using rule 27 (command)
    T_FLOAT         reduce using rule 27 (command)
    IF_STMT         reduce using rule 27 (command)
    FOR_STMT        reduce using rule 27 (command)
    OUTPUT_WRITE    reduce using rule 27 (command)
    OUTPUT_WRITELN  reduce using rule 27 (command)
    INPUT_READ      reduce using rule 27 (command)
    '('             reduce using rule 27 (command)
    '{'             reduce using rule 27 (command)
    '}'             reduce using rule 27 (command)
    '+'             reduce using rule 27 (command)
    '-'             reduce using rule 27 (command)
    '%'             reduce using rule 27 (command)
    '?'             reduce using rule 27 (command)
    '!'             reduce using rule 27 (command)


State 56

   53 expression: func_calling •

    ';'         reduce using rule 53 (expression)
    AND         reduce using rule 53 (expression)
    OR          reduce using rule 53 (expression)
    GREATER     reduce using rule 53 (expression)
    GREATER_EQ  reduce using rule 53 (expression)
    LESS        reduce using rule 53 (expression)
    LESS_EQ     reduce using rule 53 (expression)
    EQUAL       reduce using rule 53 (expression)
    NOT_EQ      reduce using rule 53 (expression)
    '+'         reduce using rule 53 (expression)
    '-'         reduce using rule 53 (expression)
    '*'         reduce using rule 53 (expression)
    '/'         reduce using rule 53 (expression)
    FILTER      reduce using rule 53 (expression)
    MAP         reduce using rule 53 (expression)
    ':'         reduce using rule 53 (expression)


State 57

   85 term: expression •

    ';'         reduce using rule 85 (term)
    AND         reduce using rule 85 (term)
    OR          reduce using rule 85 (term)
    GREATER     reduce using rule 85 (term)
    GREATER_EQ  reduce using rule 85 (term)
    LESS        reduce using rule 85 (term)
    LESS_EQ     reduce using rule 85 (term)
    EQUAL       reduce using rule 85 (term)
    NOT_EQ      reduce using rule 85 (term)
    '+'         reduce using rule 85 (term)
    '-'         reduce using rule 85 (term)
    '*'         reduce using rule 85 (term)
    '/'         reduce using rule 85 (term)
    FILTER      reduce using rule 85 (term)
    MAP         reduce using rule 85 (term)
    ':'         reduce using rule 85 (term)


State 58

   35 init_stmt: iden • '=' operation
   56 expression: iden •

    '='  shift, and go to state 87

    ';'         reduce using rule 56 (expression)
    AND         reduce using rule 56 (expression)
    OR          reduce using rule 56 (expression)
    GREATER     reduce using rule 56 (expression)
    GREATER_EQ  reduce using rule 56 (expression)
    LESS        reduce using rule 56 (expression)
    LESS_EQ     reduce using rule 56 (expression)
    EQUAL       reduce using rule 56 (expression)
    NOT_EQ      reduce using rule 56 (expression)
    '+'         reduce using rule 56 (expression)
    '-'         reduce using rule 56 (expression)
    '*'         reduce using rule 56 (expression)
    '/'         reduce using rule 56 (expression)
    FILTER      reduce using rule 56 (expression)
    MAP         reduce using rule 56 (expression)
    ':'         reduce using rule 56 (expression)


State 59

   55 expression: const •

    ';'         reduce using rule 55 (expression)
    AND         reduce using rule 55 (expression)
    OR          reduce using rule 55 (expression)
    GREATER     reduce using rule 55 (expression)
    GREATER_EQ  reduce using rule 55 (expression)
    LESS        reduce using rule 55 (expression)
    LESS_EQ     reduce using rule 55 (expression)
    EQUAL       reduce using rule 55 (expression)
    NOT_EQ      reduce using rule 55 (expression)
    '+'         reduce using rule 55 (expression)
    '-'         reduce using rule 55 (expression)
    '*'         reduce using rule 55 (expression)
    '/'         reduce using rule 55 (expression)
    FILTER      reduce using rule 55 (expression)
    MAP         reduce using rule 55 (expression)
    ':'         reduce using rule 55 (expression)


State 60

   59 const: number •

    ';'         reduce using rule 59 (const)
    AND         reduce using rule 59 (const)
    OR          reduce using rule 59 (const)
    GREATER     reduce using rule 59 (const)
    GREATER_EQ  reduce using rule 59 (const)
    LESS        reduce using rule 59 (const)
    LESS_EQ     reduce using rule 59 (const)
    EQUAL       reduce using rule 59 (const)
    NOT_EQ      reduce using rule 59 (const)
    '+'         reduce using rule 59 (const)
    '-'         reduce using rule 59 (const)
    '*'         reduce using rule 59 (const)
    '/'         reduce using rule 59 (const)
    FILTER      reduce using rule 59 (const)
    MAP         reduce using rule 59 (const)
    ':'         reduce using rule 59 (const)


State 61

   31 command: operation • ';'
   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    ';'         shift, and go to state 88
    AND         shift, and go to state 89
    OR          shift, and go to state 90
    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94
    EQUAL       shift, and go to state 95
    NOT_EQ      shift, and go to state 96


State 62

   54 expression: single_operation •

    ';'         reduce using rule 54 (expression)
    AND         reduce using rule 54 (expression)
    OR          reduce using rule 54 (expression)
    GREATER     reduce using rule 54 (expression)
    GREATER_EQ  reduce using rule 54 (expression)
    LESS        reduce using rule 54 (expression)
    LESS_EQ     reduce using rule 54 (expression)
    EQUAL       reduce using rule 54 (expression)
    NOT_EQ      reduce using rule 54 (expression)
    '+'         reduce using rule 54 (expression)
    '-'         reduce using rule 54 (expression)
    '*'         reduce using rule 54 (expression)
    '/'         reduce using rule 54 (expression)
    FILTER      reduce using rule 54 (expression)
    MAP         reduce using rule 54 (expression)
    ':'         reduce using rule 54 (expression)


State 63

   80 arith_binary: arith_binary • '+' term
   81             | arith_binary • '-' term
   93 lst_binary: arith_binary •

    '+'  shift, and go to state 97
    '-'  shift, and go to state 98

    ';'         reduce using rule 93 (lst_binary)
    AND         reduce using rule 93 (lst_binary)
    OR          reduce using rule 93 (lst_binary)
    GREATER     reduce using rule 93 (lst_binary)
    GREATER_EQ  reduce using rule 93 (lst_binary)
    LESS        reduce using rule 93 (lst_binary)
    LESS_EQ     reduce using rule 93 (lst_binary)
    EQUAL       reduce using rule 93 (lst_binary)
    NOT_EQ      reduce using rule 93 (lst_binary)
    FILTER      reduce using rule 93 (lst_binary)
    MAP         reduce using rule 93 (lst_binary)
    ':'         reduce using rule 93 (lst_binary)


State 64

   82 arith_binary: term •
   83 term: term • '*' expression
   84     | term • '/' expression

    '*'  shift, and go to state 99
    '/'  shift, and go to state 100

    ';'         reduce using rule 82 (arith_binary)
    AND         reduce using rule 82 (arith_binary)
    OR          reduce using rule 82 (arith_binary)
    GREATER     reduce using rule 82 (arith_binary)
    GREATER_EQ  reduce using rule 82 (arith_binary)
    LESS        reduce using rule 82 (arith_binary)
    LESS_EQ     reduce using rule 82 (arith_binary)
    EQUAL       reduce using rule 82 (arith_binary)
    NOT_EQ      reduce using rule 82 (arith_binary)
    '+'         reduce using rule 82 (arith_binary)
    '-'         reduce using rule 82 (arith_binary)
    FILTER      reduce using rule 82 (arith_binary)
    MAP         reduce using rule 82 (arith_binary)
    ':'         reduce using rule 82 (arith_binary)


State 65

   77 single_operation: arith_single •

    ';'         reduce using rule 77 (single_operation)
    AND         reduce using rule 77 (single_operation)
    OR          reduce using rule 77 (single_operation)
    GREATER     reduce using rule 77 (single_operation)
    GREATER_EQ  reduce using rule 77 (single_operation)
    LESS        reduce using rule 77 (single_operation)
    LESS_EQ     reduce using rule 77 (single_operation)
    EQUAL       reduce using rule 77 (single_operation)
    NOT_EQ      reduce using rule 77 (single_operation)
    '+'         reduce using rule 77 (single_operation)
    '-'         reduce using rule 77 (single_operation)
    '*'         reduce using rule 77 (single_operation)
    '/'         reduce using rule 77 (single_operation)
    FILTER      reduce using rule 77 (single_operation)
    MAP         reduce using rule 77 (single_operation)
    ':'         reduce using rule 77 (single_operation)


State 66

   78 single_operation: lst_single •

    ';'         reduce using rule 78 (single_operation)
    AND         reduce using rule 78 (single_operation)
    OR          reduce using rule 78 (single_operation)
    GREATER     reduce using rule 78 (single_operation)
    GREATER_EQ  reduce using rule 78 (single_operation)
    LESS        reduce using rule 78 (single_operation)
    LESS_EQ     reduce using rule 78 (single_operation)
    EQUAL       reduce using rule 78 (single_operation)
    NOT_EQ      reduce using rule 78 (single_operation)
    '+'         reduce using rule 78 (single_operation)
    '-'         reduce using rule 78 (single_operation)
    '*'         reduce using rule 78 (single_operation)
    '/'         reduce using rule 78 (single_operation)
    FILTER      reduce using rule 78 (single_operation)
    MAP         reduce using rule 78 (single_operation)
    ':'         reduce using rule 78 (single_operation)


State 67

   68 operation: lst_binary •
   90 lst_binary: lst_binary • FILTER lst_binary
   91           | lst_binary • MAP lst_binary
   92           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 101
    MAP     shift, and go to state 102
    ':'     shift, and go to state 103

    ';'         reduce using rule 68 (operation)
    AND         reduce using rule 68 (operation)
    OR          reduce using rule 68 (operation)
    GREATER     reduce using rule 68 (operation)
    GREATER_EQ  reduce using rule 68 (operation)
    LESS        reduce using rule 68 (operation)
    LESS_EQ     reduce using rule 68 (operation)
    EQUAL       reduce using rule 68 (operation)
    NOT_EQ      reduce using rule 68 (operation)


State 68

   32 command: error ';' •

    error           reduce using rule 32 (command)
    NUM_INT         reduce using rule 32 (command)
    NUM_FLOAT       reduce using rule 32 (command)
    NIL_CNST        reduce using rule 32 (command)
    ID              reduce using rule 32 (command)
    RETURN_STM      reduce using rule 32 (command)
    T_INT           reduce using rule 32 (command)
    T_FLOAT         reduce using rule 32 (command)
    IF_STMT         reduce using rule 32 (command)
    FOR_STMT        reduce using rule 32 (command)
    OUTPUT_WRITE    reduce using rule 32 (command)
    OUTPUT_WRITELN  reduce using rule 32 (command)
    INPUT_READ      reduce using rule 32 (command)
    '('             reduce using rule 32 (command)
    '{'             reduce using rule 32 (command)
    '}'             reduce using rule 32 (command)
    '+'             reduce using rule 32 (command)
    '-'             reduce using rule 32 (command)
    '%'             reduce using rule 32 (command)
    '?'             reduce using rule 32 (command)
    '!'             reduce using rule 32 (command)


State 69

   52 func_calling: ID '(' • $@3 calling_parameters $@4 ')'

    NUM_INT    reduce using rule 50 ($@3)
    NUM_FLOAT  reduce using rule 50 ($@3)
    NIL_CNST   reduce using rule 50 ($@3)
    ID         reduce using rule 50 ($@3)
    '('        reduce using rule 50 ($@3)
    ')'        reduce using rule 50 ($@3)
    '+'        reduce using rule 50 ($@3)
    '-'        reduce using rule 50 ($@3)
    '%'        reduce using rule 50 ($@3)
    '?'        reduce using rule 50 ($@3)
    '!'        reduce using rule 50 ($@3)

    $@3  go to state 104


State 70

   56 expression: iden •

    ';'         reduce using rule 56 (expression)
    AND         reduce using rule 56 (expression)
    OR          reduce using rule 56 (expression)
    GREATER     reduce using rule 56 (expression)
    GREATER_EQ  reduce using rule 56 (expression)
    LESS        reduce using rule 56 (expression)
    LESS_EQ     reduce using rule 56 (expression)
    EQUAL       reduce using rule 56 (expression)
    NOT_EQ      reduce using rule 56 (expression)
    '+'         reduce using rule 56 (expression)
    '-'         reduce using rule 56 (expression)
    '*'         reduce using rule 56 (expression)
    '/'         reduce using rule 56 (expression)
    FILTER      reduce using rule 56 (expression)
    MAP         reduce using rule 56 (expression)
    ':'         reduce using rule 56 (expression)


State 71

   38 return_stmt: RETURN_STM operation • ';'
   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    ';'         shift, and go to state 105
    AND         shift, and go to state 89
    OR          shift, and go to state 90
    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94
    EQUAL       shift, and go to state 95
    NOT_EQ      shift, and go to state 96


State 72

   36 conditional_stmt: IF_STMT '(' • operation ')' command
   37                 | IF_STMT '(' • operation ')' command ELSE_STMT command

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 178
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    operation         go to state 106
    single_operation  go to state 182
    arith_binary      go to state 183
    term              go to state 184
    arith_single      go to state 185
    lst_single        go to state 186
    lst_binary        go to state 187


State 73

   39 iteration: FOR_STMT '(' • loop_condition ')' command

    ID  shift, and go to state 107

    ';'  reduce using rule 42 (update_stmt)

    init_stmt       go to state 108
    loop_condition  go to state 109
    update_stmt     go to state 110
    iden            go to state 111


State 74

   45 output: OUTPUT_WRITE '(' • operation ')' ';'
   47       | OUTPUT_WRITE '(' • STRING ')' ';'

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    STRING     shift, and go to state 112
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 178
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    operation         go to state 113
    single_operation  go to state 182
    arith_binary      go to state 183
    term              go to state 184
    arith_single      go to state 185
    lst_single        go to state 186
    lst_binary        go to state 187


State 75

   46 output: OUTPUT_WRITELN '(' • operation ')' ';'
   48       | OUTPUT_WRITELN '(' • STRING ')' ';'

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    STRING     shift, and go to state 114
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 178
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    operation         go to state 115
    single_operation  go to state 182
    arith_binary      go to state 183
    term              go to state 184
    arith_single      go to state 185
    lst_single        go to state 186
    lst_binary        go to state 187


State 76

   49 input: INPUT_READ '(' • iden ')' ';'

    ID  shift, and go to state 189

    iden  go to state 116


State 77

   57 expression: '(' operation • ')'
   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    ')'         shift, and go to state 117
    AND         shift, and go to state 190
    OR          shift, and go to state 191
    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195
    EQUAL       shift, and go to state 196
    NOT_EQ      shift, and go to state 197


State 78

   86 arith_single: '+' expression •

    ';'         reduce using rule 86 (arith_single)
    AND         reduce using rule 86 (arith_single)
    OR          reduce using rule 86 (arith_single)
    GREATER     reduce using rule 86 (arith_single)
    GREATER_EQ  reduce using rule 86 (arith_single)
    LESS        reduce using rule 86 (arith_single)
    LESS_EQ     reduce using rule 86 (arith_single)
    EQUAL       reduce using rule 86 (arith_single)
    NOT_EQ      reduce using rule 86 (arith_single)
    '+'         reduce using rule 86 (arith_single)
    '-'         reduce using rule 86 (arith_single)
    '*'         reduce using rule 86 (arith_single)
    '/'         reduce using rule 86 (arith_single)
    FILTER      reduce using rule 86 (arith_single)
    MAP         reduce using rule 86 (arith_single)
    ':'         reduce using rule 86 (arith_single)


State 79

   87 arith_single: '-' expression •

    ';'         reduce using rule 87 (arith_single)
    AND         reduce using rule 87 (arith_single)
    OR          reduce using rule 87 (arith_single)
    GREATER     reduce using rule 87 (arith_single)
    GREATER_EQ  reduce using rule 87 (arith_single)
    LESS        reduce using rule 87 (arith_single)
    LESS_EQ     reduce using rule 87 (arith_single)
    EQUAL       reduce using rule 87 (arith_single)
    NOT_EQ      reduce using rule 87 (arith_single)
    '+'         reduce using rule 87 (arith_single)
    '-'         reduce using rule 87 (arith_single)
    '*'         reduce using rule 87 (arith_single)
    '/'         reduce using rule 87 (arith_single)
    FILTER      reduce using rule 87 (arith_single)
    MAP         reduce using rule 87 (arith_single)
    ':'         reduce using rule 87 (arith_single)


State 80

   88 lst_single: '%' expression •

    ';'         reduce using rule 88 (lst_single)
    AND         reduce using rule 88 (lst_single)
    OR          reduce using rule 88 (lst_single)
    GREATER     reduce using rule 88 (lst_single)
    GREATER_EQ  reduce using rule 88 (lst_single)
    LESS        reduce using rule 88 (lst_single)
    LESS_EQ     reduce using rule 88 (lst_single)
    EQUAL       reduce using rule 88 (lst_single)
    NOT_EQ      reduce using rule 88 (lst_single)
    '+'         reduce using rule 88 (lst_single)
    '-'         reduce using rule 88 (lst_single)
    '*'         reduce using rule 88 (lst_single)
    '/'         reduce using rule 88 (lst_single)
    FILTER      reduce using rule 88 (lst_single)
    MAP         reduce using rule 88 (lst_single)
    ':'         reduce using rule 88 (lst_single)


State 81

   89 lst_single: '?' expression •

    ';'         reduce using rule 89 (lst_single)
    AND         reduce using rule 89 (lst_single)
    OR          reduce using rule 89 (lst_single)
    GREATER     reduce using rule 89 (lst_single)
    GREATER_EQ  reduce using rule 89 (lst_single)
    LESS        reduce using rule 89 (lst_single)
    LESS_EQ     reduce using rule 89 (lst_single)
    EQUAL       reduce using rule 89 (lst_single)
    NOT_EQ      reduce using rule 89 (lst_single)
    '+'         reduce using rule 89 (lst_single)
    '-'         reduce using rule 89 (lst_single)
    '*'         reduce using rule 89 (lst_single)
    '/'         reduce using rule 89 (lst_single)
    FILTER      reduce using rule 89 (lst_single)
    MAP         reduce using rule 89 (lst_single)
    ':'         reduce using rule 89 (lst_single)


State 82

   79 single_operation: '!' expression •

    ';'         reduce using rule 79 (single_operation)
    AND         reduce using rule 79 (single_operation)
    OR          reduce using rule 79 (single_operation)
    GREATER     reduce using rule 79 (single_operation)
    GREATER_EQ  reduce using rule 79 (single_operation)
    LESS        reduce using rule 79 (single_operation)
    LESS_EQ     reduce using rule 79 (single_operation)
    EQUAL       reduce using rule 79 (single_operation)
    NOT_EQ      reduce using rule 79 (single_operation)
    '+'         reduce using rule 79 (single_operation)
    '-'         reduce using rule 79 (single_operation)
    '*'         reduce using rule 79 (single_operation)
    '/'         reduce using rule 79 (single_operation)
    FILTER      reduce using rule 79 (single_operation)
    MAP         reduce using rule 79 (single_operation)
    ':'         reduce using rule 79 (single_operation)


State 83

    9 func_declaration: unq_declaration $@1 '(' parameters ')' '{' block_commands '}' •

    $end     reduce using rule 9 (func_declaration)
    error    reduce using rule 9 (func_declaration)
    T_INT    reduce using rule 9 (func_declaration)
    T_FLOAT  reduce using rule 9 (func_declaration)


State 84

   20 block_commands: command block_commands •

    '}'  reduce using rule 20 (block_commands)


State 85

   30 command: $@2 '{' • block_commands '}'

    error           shift, and go to state 27
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 32
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 33
    FOR_STMT        shift, and go to state 34
    OUTPUT_WRITE    shift, and go to state 35
    OUTPUT_WRITELN  shift, and go to state 36
    INPUT_READ      shift, and go to state 37
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 29 ($@2)

    var_declaration   go to state 44
    unq_declaration   go to state 45
    block_commands    go to state 118
    command           go to state 47
    $@2               go to state 48
    init_variable     go to state 49
    init_stmt         go to state 50
    conditional_stmt  go to state 51
    return_stmt       go to state 52
    iteration         go to state 53
    output            go to state 54
    input             go to state 55
    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    type              go to state 165
    type_lst          go to state 11
    type_number       go to state 12
    operation         go to state 61
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 86

   34 init_variable: init_stmt ';' •

    error           reduce using rule 34 (init_variable)
    NUM_INT         reduce using rule 34 (init_variable)
    NUM_FLOAT       reduce using rule 34 (init_variable)
    NIL_CNST        reduce using rule 34 (init_variable)
    ID              reduce using rule 34 (init_variable)
    RETURN_STM      reduce using rule 34 (init_variable)
    T_INT           reduce using rule 34 (init_variable)
    T_FLOAT         reduce using rule 34 (init_variable)
    IF_STMT         reduce using rule 34 (init_variable)
    FOR_STMT        reduce using rule 34 (init_variable)
    OUTPUT_WRITE    reduce using rule 34 (init_variable)
    OUTPUT_WRITELN  reduce using rule 34 (init_variable)
    INPUT_READ      reduce using rule 34 (init_variable)
    '('             reduce using rule 34 (init_variable)
    '{'             reduce using rule 34 (init_variable)
    '}'             reduce using rule 34 (init_variable)
    '+'             reduce using rule 34 (init_variable)
    '-'             reduce using rule 34 (init_variable)
    '%'             reduce using rule 34 (init_variable)
    '?'             reduce using rule 34 (init_variable)
    '!'             reduce using rule 34 (init_variable)


State 87

   35 init_stmt: iden '=' • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 70
    const             go to state 59
    number            go to state 60
    operation         go to state 119
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 88

   31 command: operation ';' •

    error           reduce using rule 31 (command)
    NUM_INT         reduce using rule 31 (command)
    NUM_FLOAT       reduce using rule 31 (command)
    NIL_CNST        reduce using rule 31 (command)
    ID              reduce using rule 31 (command)
    RETURN_STM      reduce using rule 31 (command)
    T_INT           reduce using rule 31 (command)
    T_FLOAT         reduce using rule 31 (command)
    IF_STMT         reduce using rule 31 (command)
    FOR_STMT        reduce using rule 31 (command)
    OUTPUT_WRITE    reduce using rule 31 (command)
    OUTPUT_WRITELN  reduce using rule 31 (command)
    INPUT_READ      reduce using rule 31 (command)
    '('             reduce using rule 31 (command)
    '{'             reduce using rule 31 (command)
    '}'             reduce using rule 31 (command)
    '+'             reduce using rule 31 (command)
    '-'             reduce using rule 31 (command)
    '%'             reduce using rule 31 (command)
    '?'             reduce using rule 31 (command)
    '!'             reduce using rule 31 (command)


State 89

   75 operation: operation AND • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 70
    const             go to state 59
    number            go to state 60
    operation         go to state 120
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 90

   76 operation: operation OR • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 70
    const             go to state 59
    number            go to state 60
    operation         go to state 121
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 91

   69 operation: operation GREATER • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 70
    const             go to state 59
    number            go to state 60
    operation         go to state 122
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 92

   70 operation: operation GREATER_EQ • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 70
    const             go to state 59
    number            go to state 60
    operation         go to state 123
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 93

   71 operation: operation LESS • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 70
    const             go to state 59
    number            go to state 60
    operation         go to state 124
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 94

   72 operation: operation LESS_EQ • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 70
    const             go to state 59
    number            go to state 60
    operation         go to state 125
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 95

   73 operation: operation EQUAL • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 70
    const             go to state 59
    number            go to state 60
    operation         go to state 126
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 96

   74 operation: operation NOT_EQ • operation

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 70
    const             go to state 59
    number            go to state 60
    operation         go to state 127
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 97

   80 arith_binary: arith_binary '+' • term

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 70
    const             go to state 59
    number            go to state 60
    single_operation  go to state 62
    term              go to state 128
    arith_single      go to state 65
    lst_single        go to state 66


State 98

   81 arith_binary: arith_binary '-' • term

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 70
    const             go to state 59
    number            go to state 60
    single_operation  go to state 62
    term              go to state 129
    arith_single      go to state 65
    lst_single        go to state 66


State 99

   83 term: term '*' • expression

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 130
    iden              go to state 70
    const             go to state 59
    number            go to state 60
    single_operation  go to state 62
    arith_single      go to state 65
    lst_single        go to state 66


State 100

   84 term: term '/' • expression

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 131
    iden              go to state 70
    const             go to state 59
    number            go to state 60
    single_operation  go to state 62
    arith_single      go to state 65
    lst_single        go to state 66


State 101

   90 lst_binary: lst_binary FILTER • lst_binary

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 70
    const             go to state 59
    number            go to state 60
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 132


State 102

   91 lst_binary: lst_binary MAP • lst_binary

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 70
    const             go to state 59
    number            go to state 60
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 133


State 103

   92 lst_binary: lst_binary ':' • lst_binary

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 70
    const             go to state 59
    number            go to state 60
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 134


State 104

   52 func_calling: ID '(' $@3 • calling_parameters $@4 ')'

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    ')'  reduce using rule 17 (calling_parameters)

    calling_parameters      go to state 135
    lst_calling_parameters  go to state 136
    func_calling            go to state 208
    expression              go to state 209
    iden                    go to state 210
    const                   go to state 211
    number                  go to state 212
    operation               go to state 137
    single_operation        go to state 213
    arith_binary            go to state 214
    term                    go to state 215
    arith_single            go to state 216
    lst_single              go to state 217
    lst_binary              go to state 218


State 105

   38 return_stmt: RETURN_STM operation ';' •

    error           reduce using rule 38 (return_stmt)
    NUM_INT         reduce using rule 38 (return_stmt)
    NUM_FLOAT       reduce using rule 38 (return_stmt)
    NIL_CNST        reduce using rule 38 (return_stmt)
    ID              reduce using rule 38 (return_stmt)
    RETURN_STM      reduce using rule 38 (return_stmt)
    T_INT           reduce using rule 38 (return_stmt)
    T_FLOAT         reduce using rule 38 (return_stmt)
    IF_STMT         reduce using rule 38 (return_stmt)
    FOR_STMT        reduce using rule 38 (return_stmt)
    OUTPUT_WRITE    reduce using rule 38 (return_stmt)
    OUTPUT_WRITELN  reduce using rule 38 (return_stmt)
    INPUT_READ      reduce using rule 38 (return_stmt)
    '('             reduce using rule 38 (return_stmt)
    '{'             reduce using rule 38 (return_stmt)
    '}'             reduce using rule 38 (return_stmt)
    '+'             reduce using rule 38 (return_stmt)
    '-'             reduce using rule 38 (return_stmt)
    '%'             reduce using rule 38 (return_stmt)
    '?'             reduce using rule 38 (return_stmt)
    '!'             reduce using rule 38 (return_stmt)


State 106

   36 conditional_stmt: IF_STMT '(' operation • ')' command
   37                 | IF_STMT '(' operation • ')' command ELSE_STMT command
   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    ')'         shift, and go to state 138
    AND         shift, and go to state 190
    OR          shift, and go to state 191
    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195
    EQUAL       shift, and go to state 196
    NOT_EQ      shift, and go to state 197


State 107

   58 iden: ID •

    '='  reduce using rule 58 (iden)


State 108

   41 update_stmt: init_stmt •

    ';'  reduce using rule 41 (update_stmt)


State 109

   39 iteration: FOR_STMT '(' loop_condition • ')' command

    ')'  shift, and go to state 139


State 110

   40 loop_condition: update_stmt • ';' stop_stmt ';' update_stmt

    ';'  shift, and go to state 140


State 111

   35 init_stmt: iden • '=' operation

    '='  shift, and go to state 87


State 112

   47 output: OUTPUT_WRITE '(' STRING • ')' ';'

    ')'  shift, and go to state 141


State 113

   45 output: OUTPUT_WRITE '(' operation • ')' ';'
   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    ')'         shift, and go to state 142
    AND         shift, and go to state 190
    OR          shift, and go to state 191
    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195
    EQUAL       shift, and go to state 196
    NOT_EQ      shift, and go to state 197


State 114

   48 output: OUTPUT_WRITELN '(' STRING • ')' ';'

    ')'  shift, and go to state 143


State 115

   46 output: OUTPUT_WRITELN '(' operation • ')' ';'
   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    ')'         shift, and go to state 144
    AND         shift, and go to state 190
    OR          shift, and go to state 191
    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195
    EQUAL       shift, and go to state 196
    NOT_EQ      shift, and go to state 197


State 116

   49 input: INPUT_READ '(' iden • ')' ';'

    ')'  shift, and go to state 145


State 117

   57 expression: '(' operation ')' •

    ';'         reduce using rule 57 (expression)
    AND         reduce using rule 57 (expression)
    OR          reduce using rule 57 (expression)
    GREATER     reduce using rule 57 (expression)
    GREATER_EQ  reduce using rule 57 (expression)
    LESS        reduce using rule 57 (expression)
    LESS_EQ     reduce using rule 57 (expression)
    EQUAL       reduce using rule 57 (expression)
    NOT_EQ      reduce using rule 57 (expression)
    '+'         reduce using rule 57 (expression)
    '-'         reduce using rule 57 (expression)
    '*'         reduce using rule 57 (expression)
    '/'         reduce using rule 57 (expression)
    FILTER      reduce using rule 57 (expression)
    MAP         reduce using rule 57 (expression)
    ':'         reduce using rule 57 (expression)


State 118

   30 command: $@2 '{' block_commands • '}'

    '}'  shift, and go to state 146


State 119

   35 init_stmt: iden '=' operation •
   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    AND         shift, and go to state 89
    OR          shift, and go to state 90
    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94
    EQUAL       shift, and go to state 95
    NOT_EQ      shift, and go to state 96

    ';'  reduce using rule 35 (init_stmt)


State 120

   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   75          | operation AND operation •
   76          | operation • OR operation

    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94
    EQUAL       shift, and go to state 95
    NOT_EQ      shift, and go to state 96

    ';'  reduce using rule 75 (operation)
    AND  reduce using rule 75 (operation)
    OR   reduce using rule 75 (operation)


State 121

   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation
   76          | operation OR operation •

    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94
    EQUAL       shift, and go to state 95
    NOT_EQ      shift, and go to state 96

    ';'  reduce using rule 76 (operation)
    AND  reduce using rule 76 (operation)
    OR   reduce using rule 76 (operation)


State 122

   69 operation: operation • GREATER operation
   69          | operation GREATER operation •
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    ';'         reduce using rule 69 (operation)
    AND         reduce using rule 69 (operation)
    OR          reduce using rule 69 (operation)
    GREATER     reduce using rule 69 (operation)
    GREATER_EQ  reduce using rule 69 (operation)
    LESS        reduce using rule 69 (operation)
    LESS_EQ     reduce using rule 69 (operation)
    EQUAL       reduce using rule 69 (operation)
    NOT_EQ      reduce using rule 69 (operation)


State 123

   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   70          | operation GREATER_EQ operation •
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    ';'         reduce using rule 70 (operation)
    AND         reduce using rule 70 (operation)
    OR          reduce using rule 70 (operation)
    GREATER     reduce using rule 70 (operation)
    GREATER_EQ  reduce using rule 70 (operation)
    LESS        reduce using rule 70 (operation)
    LESS_EQ     reduce using rule 70 (operation)
    EQUAL       reduce using rule 70 (operation)
    NOT_EQ      reduce using rule 70 (operation)


State 124

   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   71          | operation LESS operation •
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    ';'         reduce using rule 71 (operation)
    AND         reduce using rule 71 (operation)
    OR          reduce using rule 71 (operation)
    GREATER     reduce using rule 71 (operation)
    GREATER_EQ  reduce using rule 71 (operation)
    LESS        reduce using rule 71 (operation)
    LESS_EQ     reduce using rule 71 (operation)
    EQUAL       reduce using rule 71 (operation)
    NOT_EQ      reduce using rule 71 (operation)


State 125

   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   72          | operation LESS_EQ operation •
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    ';'         reduce using rule 72 (operation)
    AND         reduce using rule 72 (operation)
    OR          reduce using rule 72 (operation)
    GREATER     reduce using rule 72 (operation)
    GREATER_EQ  reduce using rule 72 (operation)
    LESS        reduce using rule 72 (operation)
    LESS_EQ     reduce using rule 72 (operation)
    EQUAL       reduce using rule 72 (operation)
    NOT_EQ      reduce using rule 72 (operation)


State 126

   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   73          | operation EQUAL operation •
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94

    ';'     reduce using rule 73 (operation)
    AND     reduce using rule 73 (operation)
    OR      reduce using rule 73 (operation)
    EQUAL   reduce using rule 73 (operation)
    NOT_EQ  reduce using rule 73 (operation)


State 127

   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   74          | operation NOT_EQ operation •
   75          | operation • AND operation
   76          | operation • OR operation

    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94

    ';'     reduce using rule 74 (operation)
    AND     reduce using rule 74 (operation)
    OR      reduce using rule 74 (operation)
    EQUAL   reduce using rule 74 (operation)
    NOT_EQ  reduce using rule 74 (operation)


State 128

   80 arith_binary: arith_binary '+' term •
   83 term: term • '*' expression
   84     | term • '/' expression

    '*'  shift, and go to state 99
    '/'  shift, and go to state 100

    ';'         reduce using rule 80 (arith_binary)
    AND         reduce using rule 80 (arith_binary)
    OR          reduce using rule 80 (arith_binary)
    GREATER     reduce using rule 80 (arith_binary)
    GREATER_EQ  reduce using rule 80 (arith_binary)
    LESS        reduce using rule 80 (arith_binary)
    LESS_EQ     reduce using rule 80 (arith_binary)
    EQUAL       reduce using rule 80 (arith_binary)
    NOT_EQ      reduce using rule 80 (arith_binary)
    '+'         reduce using rule 80 (arith_binary)
    '-'         reduce using rule 80 (arith_binary)
    FILTER      reduce using rule 80 (arith_binary)
    MAP         reduce using rule 80 (arith_binary)
    ':'         reduce using rule 80 (arith_binary)


State 129

   81 arith_binary: arith_binary '-' term •
   83 term: term • '*' expression
   84     | term • '/' expression

    '*'  shift, and go to state 99
    '/'  shift, and go to state 100

    ';'         reduce using rule 81 (arith_binary)
    AND         reduce using rule 81 (arith_binary)
    OR          reduce using rule 81 (arith_binary)
    GREATER     reduce using rule 81 (arith_binary)
    GREATER_EQ  reduce using rule 81 (arith_binary)
    LESS        reduce using rule 81 (arith_binary)
    LESS_EQ     reduce using rule 81 (arith_binary)
    EQUAL       reduce using rule 81 (arith_binary)
    NOT_EQ      reduce using rule 81 (arith_binary)
    '+'         reduce using rule 81 (arith_binary)
    '-'         reduce using rule 81 (arith_binary)
    FILTER      reduce using rule 81 (arith_binary)
    MAP         reduce using rule 81 (arith_binary)
    ':'         reduce using rule 81 (arith_binary)


State 130

   83 term: term '*' expression •

    ';'         reduce using rule 83 (term)
    AND         reduce using rule 83 (term)
    OR          reduce using rule 83 (term)
    GREATER     reduce using rule 83 (term)
    GREATER_EQ  reduce using rule 83 (term)
    LESS        reduce using rule 83 (term)
    LESS_EQ     reduce using rule 83 (term)
    EQUAL       reduce using rule 83 (term)
    NOT_EQ      reduce using rule 83 (term)
    '+'         reduce using rule 83 (term)
    '-'         reduce using rule 83 (term)
    '*'         reduce using rule 83 (term)
    '/'         reduce using rule 83 (term)
    FILTER      reduce using rule 83 (term)
    MAP         reduce using rule 83 (term)
    ':'         reduce using rule 83 (term)


State 131

   84 term: term '/' expression •

    ';'         reduce using rule 84 (term)
    AND         reduce using rule 84 (term)
    OR          reduce using rule 84 (term)
    GREATER     reduce using rule 84 (term)
    GREATER_EQ  reduce using rule 84 (term)
    LESS        reduce using rule 84 (term)
    LESS_EQ     reduce using rule 84 (term)
    EQUAL       reduce using rule 84 (term)
    NOT_EQ      reduce using rule 84 (term)
    '+'         reduce using rule 84 (term)
    '-'         reduce using rule 84 (term)
    '*'         reduce using rule 84 (term)
    '/'         reduce using rule 84 (term)
    FILTER      reduce using rule 84 (term)
    MAP         reduce using rule 84 (term)
    ':'         reduce using rule 84 (term)


State 132

   90 lst_binary: lst_binary • FILTER lst_binary
   90           | lst_binary FILTER lst_binary •
   91           | lst_binary • MAP lst_binary
   92           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 101
    MAP     shift, and go to state 102
    ':'     shift, and go to state 103

    ';'         reduce using rule 90 (lst_binary)
    AND         reduce using rule 90 (lst_binary)
    OR          reduce using rule 90 (lst_binary)
    GREATER     reduce using rule 90 (lst_binary)
    GREATER_EQ  reduce using rule 90 (lst_binary)
    LESS        reduce using rule 90 (lst_binary)
    LESS_EQ     reduce using rule 90 (lst_binary)
    EQUAL       reduce using rule 90 (lst_binary)
    NOT_EQ      reduce using rule 90 (lst_binary)


State 133

   90 lst_binary: lst_binary • FILTER lst_binary
   91           | lst_binary • MAP lst_binary
   91           | lst_binary MAP lst_binary •
   92           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 101
    MAP     shift, and go to state 102
    ':'     shift, and go to state 103

    ';'         reduce using rule 91 (lst_binary)
    AND         reduce using rule 91 (lst_binary)
    OR          reduce using rule 91 (lst_binary)
    GREATER     reduce using rule 91 (lst_binary)
    GREATER_EQ  reduce using rule 91 (lst_binary)
    LESS        reduce using rule 91 (lst_binary)
    LESS_EQ     reduce using rule 91 (lst_binary)
    EQUAL       reduce using rule 91 (lst_binary)
    NOT_EQ      reduce using rule 91 (lst_binary)


State 134

   90 lst_binary: lst_binary • FILTER lst_binary
   91           | lst_binary • MAP lst_binary
   92           | lst_binary • ':' lst_binary
   92           | lst_binary ':' lst_binary •

    FILTER  shift, and go to state 101
    MAP     shift, and go to state 102
    ':'     shift, and go to state 103

    ';'         reduce using rule 92 (lst_binary)
    AND         reduce using rule 92 (lst_binary)
    OR          reduce using rule 92 (lst_binary)
    GREATER     reduce using rule 92 (lst_binary)
    GREATER_EQ  reduce using rule 92 (lst_binary)
    LESS        reduce using rule 92 (lst_binary)
    LESS_EQ     reduce using rule 92 (lst_binary)
    EQUAL       reduce using rule 92 (lst_binary)
    NOT_EQ      reduce using rule 92 (lst_binary)


State 135

   52 func_calling: ID '(' $@3 calling_parameters • $@4 ')'

    ')'  reduce using rule 51 ($@4)

    $@4  go to state 147


State 136

   16 calling_parameters: lst_calling_parameters •

    ')'  reduce using rule 16 (calling_parameters)


State 137

   18 lst_calling_parameters: operation • ',' lst_calling_parameters
   19                       | operation •
   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    ','         shift, and go to state 148
    AND         shift, and go to state 219
    OR          shift, and go to state 220
    GREATER     shift, and go to state 221
    GREATER_EQ  shift, and go to state 222
    LESS        shift, and go to state 223
    LESS_EQ     shift, and go to state 224
    EQUAL       shift, and go to state 225
    NOT_EQ      shift, and go to state 226

    ')'  reduce using rule 19 (lst_calling_parameters)


State 138

   36 conditional_stmt: IF_STMT '(' operation ')' • command
   37                 | IF_STMT '(' operation ')' • command ELSE_STMT command

    error           shift, and go to state 227
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 228
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 229
    FOR_STMT        shift, and go to state 230
    OUTPUT_WRITE    shift, and go to state 231
    OUTPUT_WRITELN  shift, and go to state 232
    INPUT_READ      shift, and go to state 233
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 29 ($@2)

    var_declaration   go to state 234
    unq_declaration   go to state 235
    command           go to state 149
    $@2               go to state 236
    init_variable     go to state 237
    init_stmt         go to state 238
    conditional_stmt  go to state 239
    return_stmt       go to state 240
    iteration         go to state 241
    output            go to state 242
    input             go to state 243
    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    type              go to state 165
    type_lst          go to state 11
    type_number       go to state 12
    operation         go to state 244
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 139

   39 iteration: FOR_STMT '(' loop_condition ')' • command

    error           shift, and go to state 27
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 32
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 33
    FOR_STMT        shift, and go to state 34
    OUTPUT_WRITE    shift, and go to state 35
    OUTPUT_WRITELN  shift, and go to state 36
    INPUT_READ      shift, and go to state 37
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 29 ($@2)

    var_declaration   go to state 44
    unq_declaration   go to state 45
    command           go to state 150
    $@2               go to state 48
    init_variable     go to state 49
    init_stmt         go to state 50
    conditional_stmt  go to state 51
    return_stmt       go to state 52
    iteration         go to state 53
    output            go to state 54
    input             go to state 55
    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    type              go to state 165
    type_lst          go to state 11
    type_number       go to state 12
    operation         go to state 61
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 140

   40 loop_condition: update_stmt ';' • stop_stmt ';' update_stmt

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    ';'  reduce using rule 44 (stop_stmt)

    stop_stmt         go to state 151
    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 70
    const             go to state 59
    number            go to state 60
    operation         go to state 152
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 141

   47 output: OUTPUT_WRITE '(' STRING ')' • ';'

    ';'  shift, and go to state 153


State 142

   45 output: OUTPUT_WRITE '(' operation ')' • ';'

    ';'  shift, and go to state 154


State 143

   48 output: OUTPUT_WRITELN '(' STRING ')' • ';'

    ';'  shift, and go to state 155


State 144

   46 output: OUTPUT_WRITELN '(' operation ')' • ';'

    ';'  shift, and go to state 156


State 145

   49 input: INPUT_READ '(' iden ')' • ';'

    ';'  shift, and go to state 157


State 146

   30 command: $@2 '{' block_commands '}' •

    error           reduce using rule 30 (command)
    NUM_INT         reduce using rule 30 (command)
    NUM_FLOAT       reduce using rule 30 (command)
    NIL_CNST        reduce using rule 30 (command)
    ID              reduce using rule 30 (command)
    RETURN_STM      reduce using rule 30 (command)
    T_INT           reduce using rule 30 (command)
    T_FLOAT         reduce using rule 30 (command)
    IF_STMT         reduce using rule 30 (command)
    FOR_STMT        reduce using rule 30 (command)
    OUTPUT_WRITE    reduce using rule 30 (command)
    OUTPUT_WRITELN  reduce using rule 30 (command)
    INPUT_READ      reduce using rule 30 (command)
    '('             reduce using rule 30 (command)
    '{'             reduce using rule 30 (command)
    '}'             reduce using rule 30 (command)
    '+'             reduce using rule 30 (command)
    '-'             reduce using rule 30 (command)
    '%'             reduce using rule 30 (command)
    '?'             reduce using rule 30 (command)
    '!'             reduce using rule 30 (command)


State 147

   52 func_calling: ID '(' $@3 calling_parameters $@4 • ')'

    ')'  shift, and go to state 158


State 148

   18 lst_calling_parameters: operation ',' • lst_calling_parameters

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    lst_calling_parameters  go to state 159
    func_calling            go to state 208
    expression              go to state 209
    iden                    go to state 210
    const                   go to state 211
    number                  go to state 212
    operation               go to state 137
    single_operation        go to state 213
    arith_binary            go to state 214
    term                    go to state 215
    arith_single            go to state 216
    lst_single              go to state 217
    lst_binary              go to state 218


State 149

   36 conditional_stmt: IF_STMT '(' operation ')' command •
   37                 | IF_STMT '(' operation ')' command • ELSE_STMT command

    ELSE_STMT  shift, and go to state 160

    error           reduce using rule 36 (conditional_stmt)
    NUM_INT         reduce using rule 36 (conditional_stmt)
    NUM_FLOAT       reduce using rule 36 (conditional_stmt)
    NIL_CNST        reduce using rule 36 (conditional_stmt)
    ID              reduce using rule 36 (conditional_stmt)
    RETURN_STM      reduce using rule 36 (conditional_stmt)
    T_INT           reduce using rule 36 (conditional_stmt)
    T_FLOAT         reduce using rule 36 (conditional_stmt)
    IF_STMT         reduce using rule 36 (conditional_stmt)
    FOR_STMT        reduce using rule 36 (conditional_stmt)
    OUTPUT_WRITE    reduce using rule 36 (conditional_stmt)
    OUTPUT_WRITELN  reduce using rule 36 (conditional_stmt)
    INPUT_READ      reduce using rule 36 (conditional_stmt)
    '('             reduce using rule 36 (conditional_stmt)
    '{'             reduce using rule 36 (conditional_stmt)
    '}'             reduce using rule 36 (conditional_stmt)
    '+'             reduce using rule 36 (conditional_stmt)
    '-'             reduce using rule 36 (conditional_stmt)
    '%'             reduce using rule 36 (conditional_stmt)
    '?'             reduce using rule 36 (conditional_stmt)
    '!'             reduce using rule 36 (conditional_stmt)


State 150

   39 iteration: FOR_STMT '(' loop_condition ')' command •

    error           reduce using rule 39 (iteration)
    NUM_INT         reduce using rule 39 (iteration)
    NUM_FLOAT       reduce using rule 39 (iteration)
    NIL_CNST        reduce using rule 39 (iteration)
    ID              reduce using rule 39 (iteration)
    RETURN_STM      reduce using rule 39 (iteration)
    T_INT           reduce using rule 39 (iteration)
    T_FLOAT         reduce using rule 39 (iteration)
    IF_STMT         reduce using rule 39 (iteration)
    FOR_STMT        reduce using rule 39 (iteration)
    OUTPUT_WRITE    reduce using rule 39 (iteration)
    OUTPUT_WRITELN  reduce using rule 39 (iteration)
    INPUT_READ      reduce using rule 39 (iteration)
    '('             reduce using rule 39 (iteration)
    '{'             reduce using rule 39 (iteration)
    '}'             reduce using rule 39 (iteration)
    '+'             reduce using rule 39 (iteration)
    '-'             reduce using rule 39 (iteration)
    '%'             reduce using rule 39 (iteration)
    '?'             reduce using rule 39 (iteration)
    '!'             reduce using rule 39 (iteration)


State 151

   40 loop_condition: update_stmt ';' stop_stmt • ';' update_stmt

    ';'  shift, and go to state 161


State 152

   43 stop_stmt: operation •
   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    AND         shift, and go to state 89
    OR          shift, and go to state 90
    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94
    EQUAL       shift, and go to state 95
    NOT_EQ      shift, and go to state 96

    ';'  reduce using rule 43 (stop_stmt)


State 153

   47 output: OUTPUT_WRITE '(' STRING ')' ';' •

    error           reduce using rule 47 (output)
    NUM_INT         reduce using rule 47 (output)
    NUM_FLOAT       reduce using rule 47 (output)
    NIL_CNST        reduce using rule 47 (output)
    ID              reduce using rule 47 (output)
    RETURN_STM      reduce using rule 47 (output)
    T_INT           reduce using rule 47 (output)
    T_FLOAT         reduce using rule 47 (output)
    IF_STMT         reduce using rule 47 (output)
    FOR_STMT        reduce using rule 47 (output)
    OUTPUT_WRITE    reduce using rule 47 (output)
    OUTPUT_WRITELN  reduce using rule 47 (output)
    INPUT_READ      reduce using rule 47 (output)
    '('             reduce using rule 47 (output)
    '{'             reduce using rule 47 (output)
    '}'             reduce using rule 47 (output)
    '+'             reduce using rule 47 (output)
    '-'             reduce using rule 47 (output)
    '%'             reduce using rule 47 (output)
    '?'             reduce using rule 47 (output)
    '!'             reduce using rule 47 (output)


State 154

   45 output: OUTPUT_WRITE '(' operation ')' ';' •

    error           reduce using rule 45 (output)
    NUM_INT         reduce using rule 45 (output)
    NUM_FLOAT       reduce using rule 45 (output)
    NIL_CNST        reduce using rule 45 (output)
    ID              reduce using rule 45 (output)
    RETURN_STM      reduce using rule 45 (output)
    T_INT           reduce using rule 45 (output)
    T_FLOAT         reduce using rule 45 (output)
    IF_STMT         reduce using rule 45 (output)
    FOR_STMT        reduce using rule 45 (output)
    OUTPUT_WRITE    reduce using rule 45 (output)
    OUTPUT_WRITELN  reduce using rule 45 (output)
    INPUT_READ      reduce using rule 45 (output)
    '('             reduce using rule 45 (output)
    '{'             reduce using rule 45 (output)
    '}'             reduce using rule 45 (output)
    '+'             reduce using rule 45 (output)
    '-'             reduce using rule 45 (output)
    '%'             reduce using rule 45 (output)
    '?'             reduce using rule 45 (output)
    '!'             reduce using rule 45 (output)


State 155

   48 output: OUTPUT_WRITELN '(' STRING ')' ';' •

    error           reduce using rule 48 (output)
    NUM_INT         reduce using rule 48 (output)
    NUM_FLOAT       reduce using rule 48 (output)
    NIL_CNST        reduce using rule 48 (output)
    ID              reduce using rule 48 (output)
    RETURN_STM      reduce using rule 48 (output)
    T_INT           reduce using rule 48 (output)
    T_FLOAT         reduce using rule 48 (output)
    IF_STMT         reduce using rule 48 (output)
    FOR_STMT        reduce using rule 48 (output)
    OUTPUT_WRITE    reduce using rule 48 (output)
    OUTPUT_WRITELN  reduce using rule 48 (output)
    INPUT_READ      reduce using rule 48 (output)
    '('             reduce using rule 48 (output)
    '{'             reduce using rule 48 (output)
    '}'             reduce using rule 48 (output)
    '+'             reduce using rule 48 (output)
    '-'             reduce using rule 48 (output)
    '%'             reduce using rule 48 (output)
    '?'             reduce using rule 48 (output)
    '!'             reduce using rule 48 (output)


State 156

   46 output: OUTPUT_WRITELN '(' operation ')' ';' •

    error           reduce using rule 46 (output)
    NUM_INT         reduce using rule 46 (output)
    NUM_FLOAT       reduce using rule 46 (output)
    NIL_CNST        reduce using rule 46 (output)
    ID              reduce using rule 46 (output)
    RETURN_STM      reduce using rule 46 (output)
    T_INT           reduce using rule 46 (output)
    T_FLOAT         reduce using rule 46 (output)
    IF_STMT         reduce using rule 46 (output)
    FOR_STMT        reduce using rule 46 (output)
    OUTPUT_WRITE    reduce using rule 46 (output)
    OUTPUT_WRITELN  reduce using rule 46 (output)
    INPUT_READ      reduce using rule 46 (output)
    '('             reduce using rule 46 (output)
    '{'             reduce using rule 46 (output)
    '}'             reduce using rule 46 (output)
    '+'             reduce using rule 46 (output)
    '-'             reduce using rule 46 (output)
    '%'             reduce using rule 46 (output)
    '?'             reduce using rule 46 (output)
    '!'             reduce using rule 46 (output)


State 157

   49 input: INPUT_READ '(' iden ')' ';' •

    error           reduce using rule 49 (input)
    NUM_INT         reduce using rule 49 (input)
    NUM_FLOAT       reduce using rule 49 (input)
    NIL_CNST        reduce using rule 49 (input)
    ID              reduce using rule 49 (input)
    RETURN_STM      reduce using rule 49 (input)
    T_INT           reduce using rule 49 (input)
    T_FLOAT         reduce using rule 49 (input)
    IF_STMT         reduce using rule 49 (input)
    FOR_STMT        reduce using rule 49 (input)
    OUTPUT_WRITE    reduce using rule 49 (input)
    OUTPUT_WRITELN  reduce using rule 49 (input)
    INPUT_READ      reduce using rule 49 (input)
    '('             reduce using rule 49 (input)
    '{'             reduce using rule 49 (input)
    '}'             reduce using rule 49 (input)
    '+'             reduce using rule 49 (input)
    '-'             reduce using rule 49 (input)
    '%'             reduce using rule 49 (input)
    '?'             reduce using rule 49 (input)
    '!'             reduce using rule 49 (input)


State 158

   52 func_calling: ID '(' $@3 calling_parameters $@4 ')' •

    ';'         reduce using rule 52 (func_calling)
    AND         reduce using rule 52 (func_calling)
    OR          reduce using rule 52 (func_calling)
    GREATER     reduce using rule 52 (func_calling)
    GREATER_EQ  reduce using rule 52 (func_calling)
    LESS        reduce using rule 52 (func_calling)
    LESS_EQ     reduce using rule 52 (func_calling)
    EQUAL       reduce using rule 52 (func_calling)
    NOT_EQ      reduce using rule 52 (func_calling)
    '+'         reduce using rule 52 (func_calling)
    '-'         reduce using rule 52 (func_calling)
    '*'         reduce using rule 52 (func_calling)
    '/'         reduce using rule 52 (func_calling)
    FILTER      reduce using rule 52 (func_calling)
    MAP         reduce using rule 52 (func_calling)
    ':'         reduce using rule 52 (func_calling)


State 159

   18 lst_calling_parameters: operation ',' lst_calling_parameters •

    ')'  reduce using rule 18 (lst_calling_parameters)


State 160

   37 conditional_stmt: IF_STMT '(' operation ')' command ELSE_STMT • command

    error           shift, and go to state 27
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 32
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 33
    FOR_STMT        shift, and go to state 34
    OUTPUT_WRITE    shift, and go to state 35
    OUTPUT_WRITELN  shift, and go to state 36
    INPUT_READ      shift, and go to state 37
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 29 ($@2)

    var_declaration   go to state 44
    unq_declaration   go to state 45
    command           go to state 162
    $@2               go to state 48
    init_variable     go to state 49
    init_stmt         go to state 50
    conditional_stmt  go to state 51
    return_stmt       go to state 52
    iteration         go to state 53
    output            go to state 54
    input             go to state 55
    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    type              go to state 165
    type_lst          go to state 11
    type_number       go to state 12
    operation         go to state 61
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 161

   40 loop_condition: update_stmt ';' stop_stmt ';' • update_stmt

    ID  shift, and go to state 107

    ')'  reduce using rule 42 (update_stmt)

    init_stmt    go to state 245
    update_stmt  go to state 163
    iden         go to state 246


State 162

   37 conditional_stmt: IF_STMT '(' operation ')' command ELSE_STMT command •

    error           reduce using rule 37 (conditional_stmt)
    NUM_INT         reduce using rule 37 (conditional_stmt)
    NUM_FLOAT       reduce using rule 37 (conditional_stmt)
    NIL_CNST        reduce using rule 37 (conditional_stmt)
    ID              reduce using rule 37 (conditional_stmt)
    RETURN_STM      reduce using rule 37 (conditional_stmt)
    T_INT           reduce using rule 37 (conditional_stmt)
    T_FLOAT         reduce using rule 37 (conditional_stmt)
    IF_STMT         reduce using rule 37 (conditional_stmt)
    FOR_STMT        reduce using rule 37 (conditional_stmt)
    OUTPUT_WRITE    reduce using rule 37 (conditional_stmt)
    OUTPUT_WRITELN  reduce using rule 37 (conditional_stmt)
    INPUT_READ      reduce using rule 37 (conditional_stmt)
    '('             reduce using rule 37 (conditional_stmt)
    '{'             reduce using rule 37 (conditional_stmt)
    '}'             reduce using rule 37 (conditional_stmt)
    '+'             reduce using rule 37 (conditional_stmt)
    '-'             reduce using rule 37 (conditional_stmt)
    '%'             reduce using rule 37 (conditional_stmt)
    '?'             reduce using rule 37 (conditional_stmt)
    '!'             reduce using rule 37 (conditional_stmt)


State 163

   40 loop_condition: update_stmt ';' stop_stmt ';' update_stmt •

    ')'  reduce using rule 40 (loop_condition)


State 164

   11 unq_declaration: type • ID

    ID  shift, and go to state 247


State 165

   11 unq_declaration: type • ID

    ID  shift, and go to state 248


State 166

   52 func_calling: ID • '(' $@3 calling_parameters $@4 ')'
   58 iden: ID •

    '('  shift, and go to state 69

    ';'         reduce using rule 58 (iden)
    AND         reduce using rule 58 (iden)
    OR          reduce using rule 58 (iden)
    GREATER     reduce using rule 58 (iden)
    GREATER_EQ  reduce using rule 58 (iden)
    LESS        reduce using rule 58 (iden)
    LESS_EQ     reduce using rule 58 (iden)
    EQUAL       reduce using rule 58 (iden)
    NOT_EQ      reduce using rule 58 (iden)
    '+'         reduce using rule 58 (iden)
    '-'         reduce using rule 58 (iden)
    '*'         reduce using rule 58 (iden)
    '/'         reduce using rule 58 (iden)
    FILTER      reduce using rule 58 (iden)
    MAP         reduce using rule 58 (iden)
    ':'         reduce using rule 58 (iden)


State 167

   61 number: NUM_INT •

    ')'         reduce using rule 61 (number)
    AND         reduce using rule 61 (number)
    OR          reduce using rule 61 (number)
    GREATER     reduce using rule 61 (number)
    GREATER_EQ  reduce using rule 61 (number)
    LESS        reduce using rule 61 (number)
    LESS_EQ     reduce using rule 61 (number)
    EQUAL       reduce using rule 61 (number)
    NOT_EQ      reduce using rule 61 (number)
    '+'         reduce using rule 61 (number)
    '-'         reduce using rule 61 (number)
    '*'         reduce using rule 61 (number)
    '/'         reduce using rule 61 (number)
    FILTER      reduce using rule 61 (number)
    MAP         reduce using rule 61 (number)
    ':'         reduce using rule 61 (number)


State 168

   62 number: NUM_FLOAT •

    ')'         reduce using rule 62 (number)
    AND         reduce using rule 62 (number)
    OR          reduce using rule 62 (number)
    GREATER     reduce using rule 62 (number)
    GREATER_EQ  reduce using rule 62 (number)
    LESS        reduce using rule 62 (number)
    LESS_EQ     reduce using rule 62 (number)
    EQUAL       reduce using rule 62 (number)
    NOT_EQ      reduce using rule 62 (number)
    '+'         reduce using rule 62 (number)
    '-'         reduce using rule 62 (number)
    '*'         reduce using rule 62 (number)
    '/'         reduce using rule 62 (number)
    FILTER      reduce using rule 62 (number)
    MAP         reduce using rule 62 (number)
    ':'         reduce using rule 62 (number)


State 169

   60 const: NIL_CNST •

    ')'         reduce using rule 60 (const)
    AND         reduce using rule 60 (const)
    OR          reduce using rule 60 (const)
    GREATER     reduce using rule 60 (const)
    GREATER_EQ  reduce using rule 60 (const)
    LESS        reduce using rule 60 (const)
    LESS_EQ     reduce using rule 60 (const)
    EQUAL       reduce using rule 60 (const)
    NOT_EQ      reduce using rule 60 (const)
    '+'         reduce using rule 60 (const)
    '-'         reduce using rule 60 (const)
    '*'         reduce using rule 60 (const)
    '/'         reduce using rule 60 (const)
    FILTER      reduce using rule 60 (const)
    MAP         reduce using rule 60 (const)
    ':'         reduce using rule 60 (const)


State 170

   52 func_calling: ID • '(' $@3 calling_parameters $@4 ')'
   58 iden: ID •

    '('  shift, and go to state 249

    ')'         reduce using rule 58 (iden)
    AND         reduce using rule 58 (iden)
    OR          reduce using rule 58 (iden)
    GREATER     reduce using rule 58 (iden)
    GREATER_EQ  reduce using rule 58 (iden)
    LESS        reduce using rule 58 (iden)
    LESS_EQ     reduce using rule 58 (iden)
    EQUAL       reduce using rule 58 (iden)
    NOT_EQ      reduce using rule 58 (iden)
    '+'         reduce using rule 58 (iden)
    '-'         reduce using rule 58 (iden)
    '*'         reduce using rule 58 (iden)
    '/'         reduce using rule 58 (iden)
    FILTER      reduce using rule 58 (iden)
    MAP         reduce using rule 58 (iden)
    ':'         reduce using rule 58 (iden)


State 171

   57 expression: '(' • operation ')'

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 178
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    operation         go to state 250
    single_operation  go to state 182
    arith_binary      go to state 183
    term              go to state 184
    arith_single      go to state 185
    lst_single        go to state 186
    lst_binary        go to state 187


State 172

   86 arith_single: '+' • expression

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 251
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    single_operation  go to state 182
    arith_single      go to state 185
    lst_single        go to state 186


State 173

   87 arith_single: '-' • expression

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 252
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    single_operation  go to state 182
    arith_single      go to state 185
    lst_single        go to state 186


State 174

   88 lst_single: '%' • expression

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 253
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    single_operation  go to state 182
    arith_single      go to state 185
    lst_single        go to state 186


State 175

   89 lst_single: '?' • expression

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 254
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    single_operation  go to state 182
    arith_single      go to state 185
    lst_single        go to state 186


State 176

   79 single_operation: '!' • expression

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 255
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    single_operation  go to state 182
    arith_single      go to state 185
    lst_single        go to state 186


State 177

   53 expression: func_calling •

    ')'         reduce using rule 53 (expression)
    AND         reduce using rule 53 (expression)
    OR          reduce using rule 53 (expression)
    GREATER     reduce using rule 53 (expression)
    GREATER_EQ  reduce using rule 53 (expression)
    LESS        reduce using rule 53 (expression)
    LESS_EQ     reduce using rule 53 (expression)
    EQUAL       reduce using rule 53 (expression)
    NOT_EQ      reduce using rule 53 (expression)
    '+'         reduce using rule 53 (expression)
    '-'         reduce using rule 53 (expression)
    '*'         reduce using rule 53 (expression)
    '/'         reduce using rule 53 (expression)
    FILTER      reduce using rule 53 (expression)
    MAP         reduce using rule 53 (expression)
    ':'         reduce using rule 53 (expression)


State 178

   85 term: expression •

    ')'         reduce using rule 85 (term)
    AND         reduce using rule 85 (term)
    OR          reduce using rule 85 (term)
    GREATER     reduce using rule 85 (term)
    GREATER_EQ  reduce using rule 85 (term)
    LESS        reduce using rule 85 (term)
    LESS_EQ     reduce using rule 85 (term)
    EQUAL       reduce using rule 85 (term)
    NOT_EQ      reduce using rule 85 (term)
    '+'         reduce using rule 85 (term)
    '-'         reduce using rule 85 (term)
    '*'         reduce using rule 85 (term)
    '/'         reduce using rule 85 (term)
    FILTER      reduce using rule 85 (term)
    MAP         reduce using rule 85 (term)
    ':'         reduce using rule 85 (term)


State 179

   56 expression: iden •

    ')'         reduce using rule 56 (expression)
    AND         reduce using rule 56 (expression)
    OR          reduce using rule 56 (expression)
    GREATER     reduce using rule 56 (expression)
    GREATER_EQ  reduce using rule 56 (expression)
    LESS        reduce using rule 56 (expression)
    LESS_EQ     reduce using rule 56 (expression)
    EQUAL       reduce using rule 56 (expression)
    NOT_EQ      reduce using rule 56 (expression)
    '+'         reduce using rule 56 (expression)
    '-'         reduce using rule 56 (expression)
    '*'         reduce using rule 56 (expression)
    '/'         reduce using rule 56 (expression)
    FILTER      reduce using rule 56 (expression)
    MAP         reduce using rule 56 (expression)
    ':'         reduce using rule 56 (expression)


State 180

   55 expression: const •

    ')'         reduce using rule 55 (expression)
    AND         reduce using rule 55 (expression)
    OR          reduce using rule 55 (expression)
    GREATER     reduce using rule 55 (expression)
    GREATER_EQ  reduce using rule 55 (expression)
    LESS        reduce using rule 55 (expression)
    LESS_EQ     reduce using rule 55 (expression)
    EQUAL       reduce using rule 55 (expression)
    NOT_EQ      reduce using rule 55 (expression)
    '+'         reduce using rule 55 (expression)
    '-'         reduce using rule 55 (expression)
    '*'         reduce using rule 55 (expression)
    '/'         reduce using rule 55 (expression)
    FILTER      reduce using rule 55 (expression)
    MAP         reduce using rule 55 (expression)
    ':'         reduce using rule 55 (expression)


State 181

   59 const: number •

    ')'         reduce using rule 59 (const)
    AND         reduce using rule 59 (const)
    OR          reduce using rule 59 (const)
    GREATER     reduce using rule 59 (const)
    GREATER_EQ  reduce using rule 59 (const)
    LESS        reduce using rule 59 (const)
    LESS_EQ     reduce using rule 59 (const)
    EQUAL       reduce using rule 59 (const)
    NOT_EQ      reduce using rule 59 (const)
    '+'         reduce using rule 59 (const)
    '-'         reduce using rule 59 (const)
    '*'         reduce using rule 59 (const)
    '/'         reduce using rule 59 (const)
    FILTER      reduce using rule 59 (const)
    MAP         reduce using rule 59 (const)
    ':'         reduce using rule 59 (const)


State 182

   54 expression: single_operation •

    ')'         reduce using rule 54 (expression)
    AND         reduce using rule 54 (expression)
    OR          reduce using rule 54 (expression)
    GREATER     reduce using rule 54 (expression)
    GREATER_EQ  reduce using rule 54 (expression)
    LESS        reduce using rule 54 (expression)
    LESS_EQ     reduce using rule 54 (expression)
    EQUAL       reduce using rule 54 (expression)
    NOT_EQ      reduce using rule 54 (expression)
    '+'         reduce using rule 54 (expression)
    '-'         reduce using rule 54 (expression)
    '*'         reduce using rule 54 (expression)
    '/'         reduce using rule 54 (expression)
    FILTER      reduce using rule 54 (expression)
    MAP         reduce using rule 54 (expression)
    ':'         reduce using rule 54 (expression)


State 183

   80 arith_binary: arith_binary • '+' term
   81             | arith_binary • '-' term
   93 lst_binary: arith_binary •

    '+'  shift, and go to state 256
    '-'  shift, and go to state 257

    ')'         reduce using rule 93 (lst_binary)
    AND         reduce using rule 93 (lst_binary)
    OR          reduce using rule 93 (lst_binary)
    GREATER     reduce using rule 93 (lst_binary)
    GREATER_EQ  reduce using rule 93 (lst_binary)
    LESS        reduce using rule 93 (lst_binary)
    LESS_EQ     reduce using rule 93 (lst_binary)
    EQUAL       reduce using rule 93 (lst_binary)
    NOT_EQ      reduce using rule 93 (lst_binary)
    FILTER      reduce using rule 93 (lst_binary)
    MAP         reduce using rule 93 (lst_binary)
    ':'         reduce using rule 93 (lst_binary)


State 184

   82 arith_binary: term •
   83 term: term • '*' expression
   84     | term • '/' expression

    '*'  shift, and go to state 258
    '/'  shift, and go to state 259

    ')'         reduce using rule 82 (arith_binary)
    AND         reduce using rule 82 (arith_binary)
    OR          reduce using rule 82 (arith_binary)
    GREATER     reduce using rule 82 (arith_binary)
    GREATER_EQ  reduce using rule 82 (arith_binary)
    LESS        reduce using rule 82 (arith_binary)
    LESS_EQ     reduce using rule 82 (arith_binary)
    EQUAL       reduce using rule 82 (arith_binary)
    NOT_EQ      reduce using rule 82 (arith_binary)
    '+'         reduce using rule 82 (arith_binary)
    '-'         reduce using rule 82 (arith_binary)
    FILTER      reduce using rule 82 (arith_binary)
    MAP         reduce using rule 82 (arith_binary)
    ':'         reduce using rule 82 (arith_binary)


State 185

   77 single_operation: arith_single •

    ')'         reduce using rule 77 (single_operation)
    AND         reduce using rule 77 (single_operation)
    OR          reduce using rule 77 (single_operation)
    GREATER     reduce using rule 77 (single_operation)
    GREATER_EQ  reduce using rule 77 (single_operation)
    LESS        reduce using rule 77 (single_operation)
    LESS_EQ     reduce using rule 77 (single_operation)
    EQUAL       reduce using rule 77 (single_operation)
    NOT_EQ      reduce using rule 77 (single_operation)
    '+'         reduce using rule 77 (single_operation)
    '-'         reduce using rule 77 (single_operation)
    '*'         reduce using rule 77 (single_operation)
    '/'         reduce using rule 77 (single_operation)
    FILTER      reduce using rule 77 (single_operation)
    MAP         reduce using rule 77 (single_operation)
    ':'         reduce using rule 77 (single_operation)


State 186

   78 single_operation: lst_single •

    ')'         reduce using rule 78 (single_operation)
    AND         reduce using rule 78 (single_operation)
    OR          reduce using rule 78 (single_operation)
    GREATER     reduce using rule 78 (single_operation)
    GREATER_EQ  reduce using rule 78 (single_operation)
    LESS        reduce using rule 78 (single_operation)
    LESS_EQ     reduce using rule 78 (single_operation)
    EQUAL       reduce using rule 78 (single_operation)
    NOT_EQ      reduce using rule 78 (single_operation)
    '+'         reduce using rule 78 (single_operation)
    '-'         reduce using rule 78 (single_operation)
    '*'         reduce using rule 78 (single_operation)
    '/'         reduce using rule 78 (single_operation)
    FILTER      reduce using rule 78 (single_operation)
    MAP         reduce using rule 78 (single_operation)
    ':'         reduce using rule 78 (single_operation)


State 187

   68 operation: lst_binary •
   90 lst_binary: lst_binary • FILTER lst_binary
   91           | lst_binary • MAP lst_binary
   92           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 260
    MAP     shift, and go to state 261
    ':'     shift, and go to state 262

    ')'         reduce using rule 68 (operation)
    AND         reduce using rule 68 (operation)
    OR          reduce using rule 68 (operation)
    GREATER     reduce using rule 68 (operation)
    GREATER_EQ  reduce using rule 68 (operation)
    LESS        reduce using rule 68 (operation)
    LESS_EQ     reduce using rule 68 (operation)
    EQUAL       reduce using rule 68 (operation)
    NOT_EQ      reduce using rule 68 (operation)


State 188

   10 var_declaration: unq_declaration ';' •

    error           reduce using rule 10 (var_declaration)
    NUM_INT         reduce using rule 10 (var_declaration)
    NUM_FLOAT       reduce using rule 10 (var_declaration)
    NIL_CNST        reduce using rule 10 (var_declaration)
    ID              reduce using rule 10 (var_declaration)
    RETURN_STM      reduce using rule 10 (var_declaration)
    T_INT           reduce using rule 10 (var_declaration)
    T_FLOAT         reduce using rule 10 (var_declaration)
    IF_STMT         reduce using rule 10 (var_declaration)
    FOR_STMT        reduce using rule 10 (var_declaration)
    OUTPUT_WRITE    reduce using rule 10 (var_declaration)
    OUTPUT_WRITELN  reduce using rule 10 (var_declaration)
    INPUT_READ      reduce using rule 10 (var_declaration)
    '('             reduce using rule 10 (var_declaration)
    '{'             reduce using rule 10 (var_declaration)
    '}'             reduce using rule 10 (var_declaration)
    '+'             reduce using rule 10 (var_declaration)
    '-'             reduce using rule 10 (var_declaration)
    '%'             reduce using rule 10 (var_declaration)
    '?'             reduce using rule 10 (var_declaration)
    '!'             reduce using rule 10 (var_declaration)


State 189

   58 iden: ID •

    ')'  reduce using rule 58 (iden)


State 190

   75 operation: operation AND • operation

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 178
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    operation         go to state 263
    single_operation  go to state 182
    arith_binary      go to state 183
    term              go to state 184
    arith_single      go to state 185
    lst_single        go to state 186
    lst_binary        go to state 187


State 191

   76 operation: operation OR • operation

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 178
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    operation         go to state 264
    single_operation  go to state 182
    arith_binary      go to state 183
    term              go to state 184
    arith_single      go to state 185
    lst_single        go to state 186
    lst_binary        go to state 187


State 192

   69 operation: operation GREATER • operation

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 178
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    operation         go to state 265
    single_operation  go to state 182
    arith_binary      go to state 183
    term              go to state 184
    arith_single      go to state 185
    lst_single        go to state 186
    lst_binary        go to state 187


State 193

   70 operation: operation GREATER_EQ • operation

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 178
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    operation         go to state 266
    single_operation  go to state 182
    arith_binary      go to state 183
    term              go to state 184
    arith_single      go to state 185
    lst_single        go to state 186
    lst_binary        go to state 187


State 194

   71 operation: operation LESS • operation

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 178
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    operation         go to state 267
    single_operation  go to state 182
    arith_binary      go to state 183
    term              go to state 184
    arith_single      go to state 185
    lst_single        go to state 186
    lst_binary        go to state 187


State 195

   72 operation: operation LESS_EQ • operation

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 178
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    operation         go to state 268
    single_operation  go to state 182
    arith_binary      go to state 183
    term              go to state 184
    arith_single      go to state 185
    lst_single        go to state 186
    lst_binary        go to state 187


State 196

   73 operation: operation EQUAL • operation

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 178
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    operation         go to state 269
    single_operation  go to state 182
    arith_binary      go to state 183
    term              go to state 184
    arith_single      go to state 185
    lst_single        go to state 186
    lst_binary        go to state 187


State 197

   74 operation: operation NOT_EQ • operation

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 178
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    operation         go to state 270
    single_operation  go to state 182
    arith_binary      go to state 183
    term              go to state 184
    arith_single      go to state 185
    lst_single        go to state 186
    lst_binary        go to state 187


State 198

   61 number: NUM_INT •

    ')'         reduce using rule 61 (number)
    ','         reduce using rule 61 (number)
    AND         reduce using rule 61 (number)
    OR          reduce using rule 61 (number)
    GREATER     reduce using rule 61 (number)
    GREATER_EQ  reduce using rule 61 (number)
    LESS        reduce using rule 61 (number)
    LESS_EQ     reduce using rule 61 (number)
    EQUAL       reduce using rule 61 (number)
    NOT_EQ      reduce using rule 61 (number)
    '+'         reduce using rule 61 (number)
    '-'         reduce using rule 61 (number)
    '*'         reduce using rule 61 (number)
    '/'         reduce using rule 61 (number)
    FILTER      reduce using rule 61 (number)
    MAP         reduce using rule 61 (number)
    ':'         reduce using rule 61 (number)


State 199

   62 number: NUM_FLOAT •

    ')'         reduce using rule 62 (number)
    ','         reduce using rule 62 (number)
    AND         reduce using rule 62 (number)
    OR          reduce using rule 62 (number)
    GREATER     reduce using rule 62 (number)
    GREATER_EQ  reduce using rule 62 (number)
    LESS        reduce using rule 62 (number)
    LESS_EQ     reduce using rule 62 (number)
    EQUAL       reduce using rule 62 (number)
    NOT_EQ      reduce using rule 62 (number)
    '+'         reduce using rule 62 (number)
    '-'         reduce using rule 62 (number)
    '*'         reduce using rule 62 (number)
    '/'         reduce using rule 62 (number)
    FILTER      reduce using rule 62 (number)
    MAP         reduce using rule 62 (number)
    ':'         reduce using rule 62 (number)


State 200

   60 const: NIL_CNST •

    ')'         reduce using rule 60 (const)
    ','         reduce using rule 60 (const)
    AND         reduce using rule 60 (const)
    OR          reduce using rule 60 (const)
    GREATER     reduce using rule 60 (const)
    GREATER_EQ  reduce using rule 60 (const)
    LESS        reduce using rule 60 (const)
    LESS_EQ     reduce using rule 60 (const)
    EQUAL       reduce using rule 60 (const)
    NOT_EQ      reduce using rule 60 (const)
    '+'         reduce using rule 60 (const)
    '-'         reduce using rule 60 (const)
    '*'         reduce using rule 60 (const)
    '/'         reduce using rule 60 (const)
    FILTER      reduce using rule 60 (const)
    MAP         reduce using rule 60 (const)
    ':'         reduce using rule 60 (const)


State 201

   52 func_calling: ID • '(' $@3 calling_parameters $@4 ')'
   58 iden: ID •

    '('  shift, and go to state 271

    ')'         reduce using rule 58 (iden)
    ','         reduce using rule 58 (iden)
    AND         reduce using rule 58 (iden)
    OR          reduce using rule 58 (iden)
    GREATER     reduce using rule 58 (iden)
    GREATER_EQ  reduce using rule 58 (iden)
    LESS        reduce using rule 58 (iden)
    LESS_EQ     reduce using rule 58 (iden)
    EQUAL       reduce using rule 58 (iden)
    NOT_EQ      reduce using rule 58 (iden)
    '+'         reduce using rule 58 (iden)
    '-'         reduce using rule 58 (iden)
    '*'         reduce using rule 58 (iden)
    '/'         reduce using rule 58 (iden)
    FILTER      reduce using rule 58 (iden)
    MAP         reduce using rule 58 (iden)
    ':'         reduce using rule 58 (iden)


State 202

   57 expression: '(' • operation ')'

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 178
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    operation         go to state 272
    single_operation  go to state 182
    arith_binary      go to state 183
    term              go to state 184
    arith_single      go to state 185
    lst_single        go to state 186
    lst_binary        go to state 187


State 203

   86 arith_single: '+' • expression

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    expression        go to state 273
    iden              go to state 210
    const             go to state 211
    number            go to state 212
    single_operation  go to state 213
    arith_single      go to state 216
    lst_single        go to state 217


State 204

   87 arith_single: '-' • expression

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    expression        go to state 274
    iden              go to state 210
    const             go to state 211
    number            go to state 212
    single_operation  go to state 213
    arith_single      go to state 216
    lst_single        go to state 217


State 205

   88 lst_single: '%' • expression

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    expression        go to state 275
    iden              go to state 210
    const             go to state 211
    number            go to state 212
    single_operation  go to state 213
    arith_single      go to state 216
    lst_single        go to state 217


State 206

   89 lst_single: '?' • expression

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    expression        go to state 276
    iden              go to state 210
    const             go to state 211
    number            go to state 212
    single_operation  go to state 213
    arith_single      go to state 216
    lst_single        go to state 217


State 207

   79 single_operation: '!' • expression

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    expression        go to state 277
    iden              go to state 210
    const             go to state 211
    number            go to state 212
    single_operation  go to state 213
    arith_single      go to state 216
    lst_single        go to state 217


State 208

   53 expression: func_calling •

    ')'         reduce using rule 53 (expression)
    ','         reduce using rule 53 (expression)
    AND         reduce using rule 53 (expression)
    OR          reduce using rule 53 (expression)
    GREATER     reduce using rule 53 (expression)
    GREATER_EQ  reduce using rule 53 (expression)
    LESS        reduce using rule 53 (expression)
    LESS_EQ     reduce using rule 53 (expression)
    EQUAL       reduce using rule 53 (expression)
    NOT_EQ      reduce using rule 53 (expression)
    '+'         reduce using rule 53 (expression)
    '-'         reduce using rule 53 (expression)
    '*'         reduce using rule 53 (expression)
    '/'         reduce using rule 53 (expression)
    FILTER      reduce using rule 53 (expression)
    MAP         reduce using rule 53 (expression)
    ':'         reduce using rule 53 (expression)


State 209

   85 term: expression •

    ')'         reduce using rule 85 (term)
    ','         reduce using rule 85 (term)
    AND         reduce using rule 85 (term)
    OR          reduce using rule 85 (term)
    GREATER     reduce using rule 85 (term)
    GREATER_EQ  reduce using rule 85 (term)
    LESS        reduce using rule 85 (term)
    LESS_EQ     reduce using rule 85 (term)
    EQUAL       reduce using rule 85 (term)
    NOT_EQ      reduce using rule 85 (term)
    '+'         reduce using rule 85 (term)
    '-'         reduce using rule 85 (term)
    '*'         reduce using rule 85 (term)
    '/'         reduce using rule 85 (term)
    FILTER      reduce using rule 85 (term)
    MAP         reduce using rule 85 (term)
    ':'         reduce using rule 85 (term)


State 210

   56 expression: iden •

    ')'         reduce using rule 56 (expression)
    ','         reduce using rule 56 (expression)
    AND         reduce using rule 56 (expression)
    OR          reduce using rule 56 (expression)
    GREATER     reduce using rule 56 (expression)
    GREATER_EQ  reduce using rule 56 (expression)
    LESS        reduce using rule 56 (expression)
    LESS_EQ     reduce using rule 56 (expression)
    EQUAL       reduce using rule 56 (expression)
    NOT_EQ      reduce using rule 56 (expression)
    '+'         reduce using rule 56 (expression)
    '-'         reduce using rule 56 (expression)
    '*'         reduce using rule 56 (expression)
    '/'         reduce using rule 56 (expression)
    FILTER      reduce using rule 56 (expression)
    MAP         reduce using rule 56 (expression)
    ':'         reduce using rule 56 (expression)


State 211

   55 expression: const •

    ')'         reduce using rule 55 (expression)
    ','         reduce using rule 55 (expression)
    AND         reduce using rule 55 (expression)
    OR          reduce using rule 55 (expression)
    GREATER     reduce using rule 55 (expression)
    GREATER_EQ  reduce using rule 55 (expression)
    LESS        reduce using rule 55 (expression)
    LESS_EQ     reduce using rule 55 (expression)
    EQUAL       reduce using rule 55 (expression)
    NOT_EQ      reduce using rule 55 (expression)
    '+'         reduce using rule 55 (expression)
    '-'         reduce using rule 55 (expression)
    '*'         reduce using rule 55 (expression)
    '/'         reduce using rule 55 (expression)
    FILTER      reduce using rule 55 (expression)
    MAP         reduce using rule 55 (expression)
    ':'         reduce using rule 55 (expression)


State 212

   59 const: number •

    ')'         reduce using rule 59 (const)
    ','         reduce using rule 59 (const)
    AND         reduce using rule 59 (const)
    OR          reduce using rule 59 (const)
    GREATER     reduce using rule 59 (const)
    GREATER_EQ  reduce using rule 59 (const)
    LESS        reduce using rule 59 (const)
    LESS_EQ     reduce using rule 59 (const)
    EQUAL       reduce using rule 59 (const)
    NOT_EQ      reduce using rule 59 (const)
    '+'         reduce using rule 59 (const)
    '-'         reduce using rule 59 (const)
    '*'         reduce using rule 59 (const)
    '/'         reduce using rule 59 (const)
    FILTER      reduce using rule 59 (const)
    MAP         reduce using rule 59 (const)
    ':'         reduce using rule 59 (const)


State 213

   54 expression: single_operation •

    ')'         reduce using rule 54 (expression)
    ','         reduce using rule 54 (expression)
    AND         reduce using rule 54 (expression)
    OR          reduce using rule 54 (expression)
    GREATER     reduce using rule 54 (expression)
    GREATER_EQ  reduce using rule 54 (expression)
    LESS        reduce using rule 54 (expression)
    LESS_EQ     reduce using rule 54 (expression)
    EQUAL       reduce using rule 54 (expression)
    NOT_EQ      reduce using rule 54 (expression)
    '+'         reduce using rule 54 (expression)
    '-'         reduce using rule 54 (expression)
    '*'         reduce using rule 54 (expression)
    '/'         reduce using rule 54 (expression)
    FILTER      reduce using rule 54 (expression)
    MAP         reduce using rule 54 (expression)
    ':'         reduce using rule 54 (expression)


State 214

   80 arith_binary: arith_binary • '+' term
   81             | arith_binary • '-' term
   93 lst_binary: arith_binary •

    '+'  shift, and go to state 278
    '-'  shift, and go to state 279

    ')'         reduce using rule 93 (lst_binary)
    ','         reduce using rule 93 (lst_binary)
    AND         reduce using rule 93 (lst_binary)
    OR          reduce using rule 93 (lst_binary)
    GREATER     reduce using rule 93 (lst_binary)
    GREATER_EQ  reduce using rule 93 (lst_binary)
    LESS        reduce using rule 93 (lst_binary)
    LESS_EQ     reduce using rule 93 (lst_binary)
    EQUAL       reduce using rule 93 (lst_binary)
    NOT_EQ      reduce using rule 93 (lst_binary)
    FILTER      reduce using rule 93 (lst_binary)
    MAP         reduce using rule 93 (lst_binary)
    ':'         reduce using rule 93 (lst_binary)


State 215

   82 arith_binary: term •
   83 term: term • '*' expression
   84     | term • '/' expression

    '*'  shift, and go to state 280
    '/'  shift, and go to state 281

    ')'         reduce using rule 82 (arith_binary)
    ','         reduce using rule 82 (arith_binary)
    AND         reduce using rule 82 (arith_binary)
    OR          reduce using rule 82 (arith_binary)
    GREATER     reduce using rule 82 (arith_binary)
    GREATER_EQ  reduce using rule 82 (arith_binary)
    LESS        reduce using rule 82 (arith_binary)
    LESS_EQ     reduce using rule 82 (arith_binary)
    EQUAL       reduce using rule 82 (arith_binary)
    NOT_EQ      reduce using rule 82 (arith_binary)
    '+'         reduce using rule 82 (arith_binary)
    '-'         reduce using rule 82 (arith_binary)
    FILTER      reduce using rule 82 (arith_binary)
    MAP         reduce using rule 82 (arith_binary)
    ':'         reduce using rule 82 (arith_binary)


State 216

   77 single_operation: arith_single •

    ')'         reduce using rule 77 (single_operation)
    ','         reduce using rule 77 (single_operation)
    AND         reduce using rule 77 (single_operation)
    OR          reduce using rule 77 (single_operation)
    GREATER     reduce using rule 77 (single_operation)
    GREATER_EQ  reduce using rule 77 (single_operation)
    LESS        reduce using rule 77 (single_operation)
    LESS_EQ     reduce using rule 77 (single_operation)
    EQUAL       reduce using rule 77 (single_operation)
    NOT_EQ      reduce using rule 77 (single_operation)
    '+'         reduce using rule 77 (single_operation)
    '-'         reduce using rule 77 (single_operation)
    '*'         reduce using rule 77 (single_operation)
    '/'         reduce using rule 77 (single_operation)
    FILTER      reduce using rule 77 (single_operation)
    MAP         reduce using rule 77 (single_operation)
    ':'         reduce using rule 77 (single_operation)


State 217

   78 single_operation: lst_single •

    ')'         reduce using rule 78 (single_operation)
    ','         reduce using rule 78 (single_operation)
    AND         reduce using rule 78 (single_operation)
    OR          reduce using rule 78 (single_operation)
    GREATER     reduce using rule 78 (single_operation)
    GREATER_EQ  reduce using rule 78 (single_operation)
    LESS        reduce using rule 78 (single_operation)
    LESS_EQ     reduce using rule 78 (single_operation)
    EQUAL       reduce using rule 78 (single_operation)
    NOT_EQ      reduce using rule 78 (single_operation)
    '+'         reduce using rule 78 (single_operation)
    '-'         reduce using rule 78 (single_operation)
    '*'         reduce using rule 78 (single_operation)
    '/'         reduce using rule 78 (single_operation)
    FILTER      reduce using rule 78 (single_operation)
    MAP         reduce using rule 78 (single_operation)
    ':'         reduce using rule 78 (single_operation)


State 218

   68 operation: lst_binary •
   90 lst_binary: lst_binary • FILTER lst_binary
   91           | lst_binary • MAP lst_binary
   92           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 282
    MAP     shift, and go to state 283
    ':'     shift, and go to state 284

    ')'         reduce using rule 68 (operation)
    ','         reduce using rule 68 (operation)
    AND         reduce using rule 68 (operation)
    OR          reduce using rule 68 (operation)
    GREATER     reduce using rule 68 (operation)
    GREATER_EQ  reduce using rule 68 (operation)
    LESS        reduce using rule 68 (operation)
    LESS_EQ     reduce using rule 68 (operation)
    EQUAL       reduce using rule 68 (operation)
    NOT_EQ      reduce using rule 68 (operation)


State 219

   75 operation: operation AND • operation

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    expression        go to state 209
    iden              go to state 210
    const             go to state 211
    number            go to state 212
    operation         go to state 285
    single_operation  go to state 213
    arith_binary      go to state 214
    term              go to state 215
    arith_single      go to state 216
    lst_single        go to state 217
    lst_binary        go to state 218


State 220

   76 operation: operation OR • operation

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    expression        go to state 209
    iden              go to state 210
    const             go to state 211
    number            go to state 212
    operation         go to state 286
    single_operation  go to state 213
    arith_binary      go to state 214
    term              go to state 215
    arith_single      go to state 216
    lst_single        go to state 217
    lst_binary        go to state 218


State 221

   69 operation: operation GREATER • operation

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    expression        go to state 209
    iden              go to state 210
    const             go to state 211
    number            go to state 212
    operation         go to state 287
    single_operation  go to state 213
    arith_binary      go to state 214
    term              go to state 215
    arith_single      go to state 216
    lst_single        go to state 217
    lst_binary        go to state 218


State 222

   70 operation: operation GREATER_EQ • operation

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    expression        go to state 209
    iden              go to state 210
    const             go to state 211
    number            go to state 212
    operation         go to state 288
    single_operation  go to state 213
    arith_binary      go to state 214
    term              go to state 215
    arith_single      go to state 216
    lst_single        go to state 217
    lst_binary        go to state 218


State 223

   71 operation: operation LESS • operation

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    expression        go to state 209
    iden              go to state 210
    const             go to state 211
    number            go to state 212
    operation         go to state 289
    single_operation  go to state 213
    arith_binary      go to state 214
    term              go to state 215
    arith_single      go to state 216
    lst_single        go to state 217
    lst_binary        go to state 218


State 224

   72 operation: operation LESS_EQ • operation

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    expression        go to state 209
    iden              go to state 210
    const             go to state 211
    number            go to state 212
    operation         go to state 290
    single_operation  go to state 213
    arith_binary      go to state 214
    term              go to state 215
    arith_single      go to state 216
    lst_single        go to state 217
    lst_binary        go to state 218


State 225

   73 operation: operation EQUAL • operation

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    expression        go to state 209
    iden              go to state 210
    const             go to state 211
    number            go to state 212
    operation         go to state 291
    single_operation  go to state 213
    arith_binary      go to state 214
    term              go to state 215
    arith_single      go to state 216
    lst_single        go to state 217
    lst_binary        go to state 218


State 226

   74 operation: operation NOT_EQ • operation

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    expression        go to state 209
    iden              go to state 210
    const             go to state 211
    number            go to state 212
    operation         go to state 292
    single_operation  go to state 213
    arith_binary      go to state 214
    term              go to state 215
    arith_single      go to state 216
    lst_single        go to state 217
    lst_binary        go to state 218


State 227

   32 command: error • ';'
   33        | error •

    ';'  shift, and go to state 293

    error           reduce using rule 33 (command)
    NUM_INT         reduce using rule 33 (command)
    NUM_FLOAT       reduce using rule 33 (command)
    NIL_CNST        reduce using rule 33 (command)
    ID              reduce using rule 33 (command)
    RETURN_STM      reduce using rule 33 (command)
    T_INT           reduce using rule 33 (command)
    T_FLOAT         reduce using rule 33 (command)
    IF_STMT         reduce using rule 33 (command)
    ELSE_STMT       reduce using rule 33 (command)
    FOR_STMT        reduce using rule 33 (command)
    OUTPUT_WRITE    reduce using rule 33 (command)
    OUTPUT_WRITELN  reduce using rule 33 (command)
    INPUT_READ      reduce using rule 33 (command)
    '('             reduce using rule 33 (command)
    '{'             reduce using rule 33 (command)
    '}'             reduce using rule 33 (command)
    '+'             reduce using rule 33 (command)
    '-'             reduce using rule 33 (command)
    '%'             reduce using rule 33 (command)
    '?'             reduce using rule 33 (command)
    '!'             reduce using rule 33 (command)


State 228

   38 return_stmt: RETURN_STM • operation ';'

    NUM_INT    shift, and go to state 28
    NUM_FLOAT  shift, and go to state 29
    NIL_CNST   shift, and go to state 30
    ID         shift, and go to state 166
    '('        shift, and go to state 38
    '+'        shift, and go to state 39
    '-'        shift, and go to state 40
    '%'        shift, and go to state 41
    '?'        shift, and go to state 42
    '!'        shift, and go to state 43

    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 70
    const             go to state 59
    number            go to state 60
    operation         go to state 294
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 229

   36 conditional_stmt: IF_STMT • '(' operation ')' command
   37                 | IF_STMT • '(' operation ')' command ELSE_STMT command

    '('  shift, and go to state 295


State 230

   39 iteration: FOR_STMT • '(' loop_condition ')' command

    '('  shift, and go to state 296


State 231

   45 output: OUTPUT_WRITE • '(' operation ')' ';'
   47       | OUTPUT_WRITE • '(' STRING ')' ';'

    '('  shift, and go to state 297


State 232

   46 output: OUTPUT_WRITELN • '(' operation ')' ';'
   48       | OUTPUT_WRITELN • '(' STRING ')' ';'

    '('  shift, and go to state 298


State 233

   49 input: INPUT_READ • '(' iden ')' ';'

    '('  shift, and go to state 299


State 234

   22 command: var_declaration •

    error           reduce using rule 22 (command)
    NUM_INT         reduce using rule 22 (command)
    NUM_FLOAT       reduce using rule 22 (command)
    NIL_CNST        reduce using rule 22 (command)
    ID              reduce using rule 22 (command)
    RETURN_STM      reduce using rule 22 (command)
    T_INT           reduce using rule 22 (command)
    T_FLOAT         reduce using rule 22 (command)
    IF_STMT         reduce using rule 22 (command)
    ELSE_STMT       reduce using rule 22 (command)
    FOR_STMT        reduce using rule 22 (command)
    OUTPUT_WRITE    reduce using rule 22 (command)
    OUTPUT_WRITELN  reduce using rule 22 (command)
    INPUT_READ      reduce using rule 22 (command)
    '('             reduce using rule 22 (command)
    '{'             reduce using rule 22 (command)
    '}'             reduce using rule 22 (command)
    '+'             reduce using rule 22 (command)
    '-'             reduce using rule 22 (command)
    '%'             reduce using rule 22 (command)
    '?'             reduce using rule 22 (command)
    '!'             reduce using rule 22 (command)


State 235

   10 var_declaration: unq_declaration • ';'

    ';'  shift, and go to state 300


State 236

   30 command: $@2 • '{' block_commands '}'

    '{'  shift, and go to state 301


State 237

   23 command: init_variable •

    error           reduce using rule 23 (command)
    NUM_INT         reduce using rule 23 (command)
    NUM_FLOAT       reduce using rule 23 (command)
    NIL_CNST        reduce using rule 23 (command)
    ID              reduce using rule 23 (command)
    RETURN_STM      reduce using rule 23 (command)
    T_INT           reduce using rule 23 (command)
    T_FLOAT         reduce using rule 23 (command)
    IF_STMT         reduce using rule 23 (command)
    ELSE_STMT       reduce using rule 23 (command)
    FOR_STMT        reduce using rule 23 (command)
    OUTPUT_WRITE    reduce using rule 23 (command)
    OUTPUT_WRITELN  reduce using rule 23 (command)
    INPUT_READ      reduce using rule 23 (command)
    '('             reduce using rule 23 (command)
    '{'             reduce using rule 23 (command)
    '}'             reduce using rule 23 (command)
    '+'             reduce using rule 23 (command)
    '-'             reduce using rule 23 (command)
    '%'             reduce using rule 23 (command)
    '?'             reduce using rule 23 (command)
    '!'             reduce using rule 23 (command)


State 238

   34 init_variable: init_stmt • ';'

    ';'  shift, and go to state 302


State 239

   24 command: conditional_stmt •

    error           reduce using rule 24 (command)
    NUM_INT         reduce using rule 24 (command)
    NUM_FLOAT       reduce using rule 24 (command)
    NIL_CNST        reduce using rule 24 (command)
    ID              reduce using rule 24 (command)
    RETURN_STM      reduce using rule 24 (command)
    T_INT           reduce using rule 24 (command)
    T_FLOAT         reduce using rule 24 (command)
    IF_STMT         reduce using rule 24 (command)
    ELSE_STMT       reduce using rule 24 (command)
    FOR_STMT        reduce using rule 24 (command)
    OUTPUT_WRITE    reduce using rule 24 (command)
    OUTPUT_WRITELN  reduce using rule 24 (command)
    INPUT_READ      reduce using rule 24 (command)
    '('             reduce using rule 24 (command)
    '{'             reduce using rule 24 (command)
    '}'             reduce using rule 24 (command)
    '+'             reduce using rule 24 (command)
    '-'             reduce using rule 24 (command)
    '%'             reduce using rule 24 (command)
    '?'             reduce using rule 24 (command)
    '!'             reduce using rule 24 (command)


State 240

   25 command: return_stmt •

    error           reduce using rule 25 (command)
    NUM_INT         reduce using rule 25 (command)
    NUM_FLOAT       reduce using rule 25 (command)
    NIL_CNST        reduce using rule 25 (command)
    ID              reduce using rule 25 (command)
    RETURN_STM      reduce using rule 25 (command)
    T_INT           reduce using rule 25 (command)
    T_FLOAT         reduce using rule 25 (command)
    IF_STMT         reduce using rule 25 (command)
    ELSE_STMT       reduce using rule 25 (command)
    FOR_STMT        reduce using rule 25 (command)
    OUTPUT_WRITE    reduce using rule 25 (command)
    OUTPUT_WRITELN  reduce using rule 25 (command)
    INPUT_READ      reduce using rule 25 (command)
    '('             reduce using rule 25 (command)
    '{'             reduce using rule 25 (command)
    '}'             reduce using rule 25 (command)
    '+'             reduce using rule 25 (command)
    '-'             reduce using rule 25 (command)
    '%'             reduce using rule 25 (command)
    '?'             reduce using rule 25 (command)
    '!'             reduce using rule 25 (command)


State 241

   26 command: iteration •

    error           reduce using rule 26 (command)
    NUM_INT         reduce using rule 26 (command)
    NUM_FLOAT       reduce using rule 26 (command)
    NIL_CNST        reduce using rule 26 (command)
    ID              reduce using rule 26 (command)
    RETURN_STM      reduce using rule 26 (command)
    T_INT           reduce using rule 26 (command)
    T_FLOAT         reduce using rule 26 (command)
    IF_STMT         reduce using rule 26 (command)
    ELSE_STMT       reduce using rule 26 (command)
    FOR_STMT        reduce using rule 26 (command)
    OUTPUT_WRITE    reduce using rule 26 (command)
    OUTPUT_WRITELN  reduce using rule 26 (command)
    INPUT_READ      reduce using rule 26 (command)
    '('             reduce using rule 26 (command)
    '{'             reduce using rule 26 (command)
    '}'             reduce using rule 26 (command)
    '+'             reduce using rule 26 (command)
    '-'             reduce using rule 26 (command)
    '%'             reduce using rule 26 (command)
    '?'             reduce using rule 26 (command)
    '!'             reduce using rule 26 (command)


State 242

   28 command: output •

    error           reduce using rule 28 (command)
    NUM_INT         reduce using rule 28 (command)
    NUM_FLOAT       reduce using rule 28 (command)
    NIL_CNST        reduce using rule 28 (command)
    ID              reduce using rule 28 (command)
    RETURN_STM      reduce using rule 28 (command)
    T_INT           reduce using rule 28 (command)
    T_FLOAT         reduce using rule 28 (command)
    IF_STMT         reduce using rule 28 (command)
    ELSE_STMT       reduce using rule 28 (command)
    FOR_STMT        reduce using rule 28 (command)
    OUTPUT_WRITE    reduce using rule 28 (command)
    OUTPUT_WRITELN  reduce using rule 28 (command)
    INPUT_READ      reduce using rule 28 (command)
    '('             reduce using rule 28 (command)
    '{'             reduce using rule 28 (command)
    '}'             reduce using rule 28 (command)
    '+'             reduce using rule 28 (command)
    '-'             reduce using rule 28 (command)
    '%'             reduce using rule 28 (command)
    '?'             reduce using rule 28 (command)
    '!'             reduce using rule 28 (command)


State 243

   27 command: input •

    error           reduce using rule 27 (command)
    NUM_INT         reduce using rule 27 (command)
    NUM_FLOAT       reduce using rule 27 (command)
    NIL_CNST        reduce using rule 27 (command)
    ID              reduce using rule 27 (command)
    RETURN_STM      reduce using rule 27 (command)
    T_INT           reduce using rule 27 (command)
    T_FLOAT         reduce using rule 27 (command)
    IF_STMT         reduce using rule 27 (command)
    ELSE_STMT       reduce using rule 27 (command)
    FOR_STMT        reduce using rule 27 (command)
    OUTPUT_WRITE    reduce using rule 27 (command)
    OUTPUT_WRITELN  reduce using rule 27 (command)
    INPUT_READ      reduce using rule 27 (command)
    '('             reduce using rule 27 (command)
    '{'             reduce using rule 27 (command)
    '}'             reduce using rule 27 (command)
    '+'             reduce using rule 27 (command)
    '-'             reduce using rule 27 (command)
    '%'             reduce using rule 27 (command)
    '?'             reduce using rule 27 (command)
    '!'             reduce using rule 27 (command)


State 244

   31 command: operation • ';'
   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    ';'         shift, and go to state 303
    AND         shift, and go to state 89
    OR          shift, and go to state 90
    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94
    EQUAL       shift, and go to state 95
    NOT_EQ      shift, and go to state 96


State 245

   41 update_stmt: init_stmt •

    ')'  reduce using rule 41 (update_stmt)


State 246

   35 init_stmt: iden • '=' operation

    '='  shift, and go to state 304


State 247

   11 unq_declaration: type ID •

    ')'  reduce using rule 11 (unq_declaration)
    ','  reduce using rule 11 (unq_declaration)


State 248

   11 unq_declaration: type ID •

    ';'  reduce using rule 11 (unq_declaration)


State 249

   52 func_calling: ID '(' • $@3 calling_parameters $@4 ')'

    NUM_INT    reduce using rule 50 ($@3)
    NUM_FLOAT  reduce using rule 50 ($@3)
    NIL_CNST   reduce using rule 50 ($@3)
    ID         reduce using rule 50 ($@3)
    '('        reduce using rule 50 ($@3)
    ')'        reduce using rule 50 ($@3)
    '+'        reduce using rule 50 ($@3)
    '-'        reduce using rule 50 ($@3)
    '%'        reduce using rule 50 ($@3)
    '?'        reduce using rule 50 ($@3)
    '!'        reduce using rule 50 ($@3)

    $@3  go to state 305


State 250

   57 expression: '(' operation • ')'
   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    ')'         shift, and go to state 306
    AND         shift, and go to state 190
    OR          shift, and go to state 191
    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195
    EQUAL       shift, and go to state 196
    NOT_EQ      shift, and go to state 197


State 251

   86 arith_single: '+' expression •

    ')'         reduce using rule 86 (arith_single)
    AND         reduce using rule 86 (arith_single)
    OR          reduce using rule 86 (arith_single)
    GREATER     reduce using rule 86 (arith_single)
    GREATER_EQ  reduce using rule 86 (arith_single)
    LESS        reduce using rule 86 (arith_single)
    LESS_EQ     reduce using rule 86 (arith_single)
    EQUAL       reduce using rule 86 (arith_single)
    NOT_EQ      reduce using rule 86 (arith_single)
    '+'         reduce using rule 86 (arith_single)
    '-'         reduce using rule 86 (arith_single)
    '*'         reduce using rule 86 (arith_single)
    '/'         reduce using rule 86 (arith_single)
    FILTER      reduce using rule 86 (arith_single)
    MAP         reduce using rule 86 (arith_single)
    ':'         reduce using rule 86 (arith_single)


State 252

   87 arith_single: '-' expression •

    ')'         reduce using rule 87 (arith_single)
    AND         reduce using rule 87 (arith_single)
    OR          reduce using rule 87 (arith_single)
    GREATER     reduce using rule 87 (arith_single)
    GREATER_EQ  reduce using rule 87 (arith_single)
    LESS        reduce using rule 87 (arith_single)
    LESS_EQ     reduce using rule 87 (arith_single)
    EQUAL       reduce using rule 87 (arith_single)
    NOT_EQ      reduce using rule 87 (arith_single)
    '+'         reduce using rule 87 (arith_single)
    '-'         reduce using rule 87 (arith_single)
    '*'         reduce using rule 87 (arith_single)
    '/'         reduce using rule 87 (arith_single)
    FILTER      reduce using rule 87 (arith_single)
    MAP         reduce using rule 87 (arith_single)
    ':'         reduce using rule 87 (arith_single)


State 253

   88 lst_single: '%' expression •

    ')'         reduce using rule 88 (lst_single)
    AND         reduce using rule 88 (lst_single)
    OR          reduce using rule 88 (lst_single)
    GREATER     reduce using rule 88 (lst_single)
    GREATER_EQ  reduce using rule 88 (lst_single)
    LESS        reduce using rule 88 (lst_single)
    LESS_EQ     reduce using rule 88 (lst_single)
    EQUAL       reduce using rule 88 (lst_single)
    NOT_EQ      reduce using rule 88 (lst_single)
    '+'         reduce using rule 88 (lst_single)
    '-'         reduce using rule 88 (lst_single)
    '*'         reduce using rule 88 (lst_single)
    '/'         reduce using rule 88 (lst_single)
    FILTER      reduce using rule 88 (lst_single)
    MAP         reduce using rule 88 (lst_single)
    ':'         reduce using rule 88 (lst_single)


State 254

   89 lst_single: '?' expression •

    ')'         reduce using rule 89 (lst_single)
    AND         reduce using rule 89 (lst_single)
    OR          reduce using rule 89 (lst_single)
    GREATER     reduce using rule 89 (lst_single)
    GREATER_EQ  reduce using rule 89 (lst_single)
    LESS        reduce using rule 89 (lst_single)
    LESS_EQ     reduce using rule 89 (lst_single)
    EQUAL       reduce using rule 89 (lst_single)
    NOT_EQ      reduce using rule 89 (lst_single)
    '+'         reduce using rule 89 (lst_single)
    '-'         reduce using rule 89 (lst_single)
    '*'         reduce using rule 89 (lst_single)
    '/'         reduce using rule 89 (lst_single)
    FILTER      reduce using rule 89 (lst_single)
    MAP         reduce using rule 89 (lst_single)
    ':'         reduce using rule 89 (lst_single)


State 255

   79 single_operation: '!' expression •

    ')'         reduce using rule 79 (single_operation)
    AND         reduce using rule 79 (single_operation)
    OR          reduce using rule 79 (single_operation)
    GREATER     reduce using rule 79 (single_operation)
    GREATER_EQ  reduce using rule 79 (single_operation)
    LESS        reduce using rule 79 (single_operation)
    LESS_EQ     reduce using rule 79 (single_operation)
    EQUAL       reduce using rule 79 (single_operation)
    NOT_EQ      reduce using rule 79 (single_operation)
    '+'         reduce using rule 79 (single_operation)
    '-'         reduce using rule 79 (single_operation)
    '*'         reduce using rule 79 (single_operation)
    '/'         reduce using rule 79 (single_operation)
    FILTER      reduce using rule 79 (single_operation)
    MAP         reduce using rule 79 (single_operation)
    ':'         reduce using rule 79 (single_operation)


State 256

   80 arith_binary: arith_binary '+' • term

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 178
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    single_operation  go to state 182
    term              go to state 307
    arith_single      go to state 185
    lst_single        go to state 186


State 257

   81 arith_binary: arith_binary '-' • term

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 178
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    single_operation  go to state 182
    term              go to state 308
    arith_single      go to state 185
    lst_single        go to state 186


State 258

   83 term: term '*' • expression

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 309
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    single_operation  go to state 182
    arith_single      go to state 185
    lst_single        go to state 186


State 259

   84 term: term '/' • expression

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 310
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    single_operation  go to state 182
    arith_single      go to state 185
    lst_single        go to state 186


State 260

   90 lst_binary: lst_binary FILTER • lst_binary

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 178
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    single_operation  go to state 182
    arith_binary      go to state 183
    term              go to state 184
    arith_single      go to state 185
    lst_single        go to state 186
    lst_binary        go to state 311


State 261

   91 lst_binary: lst_binary MAP • lst_binary

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 178
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    single_operation  go to state 182
    arith_binary      go to state 183
    term              go to state 184
    arith_single      go to state 185
    lst_single        go to state 186
    lst_binary        go to state 312


State 262

   92 lst_binary: lst_binary ':' • lst_binary

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 178
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    single_operation  go to state 182
    arith_binary      go to state 183
    term              go to state 184
    arith_single      go to state 185
    lst_single        go to state 186
    lst_binary        go to state 313


State 263

   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   75          | operation AND operation •
   76          | operation • OR operation

    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195
    EQUAL       shift, and go to state 196
    NOT_EQ      shift, and go to state 197

    ')'  reduce using rule 75 (operation)
    AND  reduce using rule 75 (operation)
    OR   reduce using rule 75 (operation)


State 264

   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation
   76          | operation OR operation •

    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195
    EQUAL       shift, and go to state 196
    NOT_EQ      shift, and go to state 197

    ')'  reduce using rule 76 (operation)
    AND  reduce using rule 76 (operation)
    OR   reduce using rule 76 (operation)


State 265

   69 operation: operation • GREATER operation
   69          | operation GREATER operation •
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    ')'         reduce using rule 69 (operation)
    AND         reduce using rule 69 (operation)
    OR          reduce using rule 69 (operation)
    GREATER     reduce using rule 69 (operation)
    GREATER_EQ  reduce using rule 69 (operation)
    LESS        reduce using rule 69 (operation)
    LESS_EQ     reduce using rule 69 (operation)
    EQUAL       reduce using rule 69 (operation)
    NOT_EQ      reduce using rule 69 (operation)


State 266

   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   70          | operation GREATER_EQ operation •
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    ')'         reduce using rule 70 (operation)
    AND         reduce using rule 70 (operation)
    OR          reduce using rule 70 (operation)
    GREATER     reduce using rule 70 (operation)
    GREATER_EQ  reduce using rule 70 (operation)
    LESS        reduce using rule 70 (operation)
    LESS_EQ     reduce using rule 70 (operation)
    EQUAL       reduce using rule 70 (operation)
    NOT_EQ      reduce using rule 70 (operation)


State 267

   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   71          | operation LESS operation •
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    ')'         reduce using rule 71 (operation)
    AND         reduce using rule 71 (operation)
    OR          reduce using rule 71 (operation)
    GREATER     reduce using rule 71 (operation)
    GREATER_EQ  reduce using rule 71 (operation)
    LESS        reduce using rule 71 (operation)
    LESS_EQ     reduce using rule 71 (operation)
    EQUAL       reduce using rule 71 (operation)
    NOT_EQ      reduce using rule 71 (operation)


State 268

   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   72          | operation LESS_EQ operation •
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    ')'         reduce using rule 72 (operation)
    AND         reduce using rule 72 (operation)
    OR          reduce using rule 72 (operation)
    GREATER     reduce using rule 72 (operation)
    GREATER_EQ  reduce using rule 72 (operation)
    LESS        reduce using rule 72 (operation)
    LESS_EQ     reduce using rule 72 (operation)
    EQUAL       reduce using rule 72 (operation)
    NOT_EQ      reduce using rule 72 (operation)


State 269

   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   73          | operation EQUAL operation •
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195

    ')'     reduce using rule 73 (operation)
    AND     reduce using rule 73 (operation)
    OR      reduce using rule 73 (operation)
    EQUAL   reduce using rule 73 (operation)
    NOT_EQ  reduce using rule 73 (operation)


State 270

   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   74          | operation NOT_EQ operation •
   75          | operation • AND operation
   76          | operation • OR operation

    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195

    ')'     reduce using rule 74 (operation)
    AND     reduce using rule 74 (operation)
    OR      reduce using rule 74 (operation)
    EQUAL   reduce using rule 74 (operation)
    NOT_EQ  reduce using rule 74 (operation)


State 271

   52 func_calling: ID '(' • $@3 calling_parameters $@4 ')'

    NUM_INT    reduce using rule 50 ($@3)
    NUM_FLOAT  reduce using rule 50 ($@3)
    NIL_CNST   reduce using rule 50 ($@3)
    ID         reduce using rule 50 ($@3)
    '('        reduce using rule 50 ($@3)
    ')'        reduce using rule 50 ($@3)
    '+'        reduce using rule 50 ($@3)
    '-'        reduce using rule 50 ($@3)
    '%'        reduce using rule 50 ($@3)
    '?'        reduce using rule 50 ($@3)
    '!'        reduce using rule 50 ($@3)

    $@3  go to state 314


State 272

   57 expression: '(' operation • ')'
   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    ')'         shift, and go to state 315
    AND         shift, and go to state 190
    OR          shift, and go to state 191
    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195
    EQUAL       shift, and go to state 196
    NOT_EQ      shift, and go to state 197


State 273

   86 arith_single: '+' expression •

    ')'         reduce using rule 86 (arith_single)
    ','         reduce using rule 86 (arith_single)
    AND         reduce using rule 86 (arith_single)
    OR          reduce using rule 86 (arith_single)
    GREATER     reduce using rule 86 (arith_single)
    GREATER_EQ  reduce using rule 86 (arith_single)
    LESS        reduce using rule 86 (arith_single)
    LESS_EQ     reduce using rule 86 (arith_single)
    EQUAL       reduce using rule 86 (arith_single)
    NOT_EQ      reduce using rule 86 (arith_single)
    '+'         reduce using rule 86 (arith_single)
    '-'         reduce using rule 86 (arith_single)
    '*'         reduce using rule 86 (arith_single)
    '/'         reduce using rule 86 (arith_single)
    FILTER      reduce using rule 86 (arith_single)
    MAP         reduce using rule 86 (arith_single)
    ':'         reduce using rule 86 (arith_single)


State 274

   87 arith_single: '-' expression •

    ')'         reduce using rule 87 (arith_single)
    ','         reduce using rule 87 (arith_single)
    AND         reduce using rule 87 (arith_single)
    OR          reduce using rule 87 (arith_single)
    GREATER     reduce using rule 87 (arith_single)
    GREATER_EQ  reduce using rule 87 (arith_single)
    LESS        reduce using rule 87 (arith_single)
    LESS_EQ     reduce using rule 87 (arith_single)
    EQUAL       reduce using rule 87 (arith_single)
    NOT_EQ      reduce using rule 87 (arith_single)
    '+'         reduce using rule 87 (arith_single)
    '-'         reduce using rule 87 (arith_single)
    '*'         reduce using rule 87 (arith_single)
    '/'         reduce using rule 87 (arith_single)
    FILTER      reduce using rule 87 (arith_single)
    MAP         reduce using rule 87 (arith_single)
    ':'         reduce using rule 87 (arith_single)


State 275

   88 lst_single: '%' expression •

    ')'         reduce using rule 88 (lst_single)
    ','         reduce using rule 88 (lst_single)
    AND         reduce using rule 88 (lst_single)
    OR          reduce using rule 88 (lst_single)
    GREATER     reduce using rule 88 (lst_single)
    GREATER_EQ  reduce using rule 88 (lst_single)
    LESS        reduce using rule 88 (lst_single)
    LESS_EQ     reduce using rule 88 (lst_single)
    EQUAL       reduce using rule 88 (lst_single)
    NOT_EQ      reduce using rule 88 (lst_single)
    '+'         reduce using rule 88 (lst_single)
    '-'         reduce using rule 88 (lst_single)
    '*'         reduce using rule 88 (lst_single)
    '/'         reduce using rule 88 (lst_single)
    FILTER      reduce using rule 88 (lst_single)
    MAP         reduce using rule 88 (lst_single)
    ':'         reduce using rule 88 (lst_single)


State 276

   89 lst_single: '?' expression •

    ')'         reduce using rule 89 (lst_single)
    ','         reduce using rule 89 (lst_single)
    AND         reduce using rule 89 (lst_single)
    OR          reduce using rule 89 (lst_single)
    GREATER     reduce using rule 89 (lst_single)
    GREATER_EQ  reduce using rule 89 (lst_single)
    LESS        reduce using rule 89 (lst_single)
    LESS_EQ     reduce using rule 89 (lst_single)
    EQUAL       reduce using rule 89 (lst_single)
    NOT_EQ      reduce using rule 89 (lst_single)
    '+'         reduce using rule 89 (lst_single)
    '-'         reduce using rule 89 (lst_single)
    '*'         reduce using rule 89 (lst_single)
    '/'         reduce using rule 89 (lst_single)
    FILTER      reduce using rule 89 (lst_single)
    MAP         reduce using rule 89 (lst_single)
    ':'         reduce using rule 89 (lst_single)


State 277

   79 single_operation: '!' expression •

    ')'         reduce using rule 79 (single_operation)
    ','         reduce using rule 79 (single_operation)
    AND         reduce using rule 79 (single_operation)
    OR          reduce using rule 79 (single_operation)
    GREATER     reduce using rule 79 (single_operation)
    GREATER_EQ  reduce using rule 79 (single_operation)
    LESS        reduce using rule 79 (single_operation)
    LESS_EQ     reduce using rule 79 (single_operation)
    EQUAL       reduce using rule 79 (single_operation)
    NOT_EQ      reduce using rule 79 (single_operation)
    '+'         reduce using rule 79 (single_operation)
    '-'         reduce using rule 79 (single_operation)
    '*'         reduce using rule 79 (single_operation)
    '/'         reduce using rule 79 (single_operation)
    FILTER      reduce using rule 79 (single_operation)
    MAP         reduce using rule 79 (single_operation)
    ':'         reduce using rule 79 (single_operation)


State 278

   80 arith_binary: arith_binary '+' • term

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    expression        go to state 209
    iden              go to state 210
    const             go to state 211
    number            go to state 212
    single_operation  go to state 213
    term              go to state 316
    arith_single      go to state 216
    lst_single        go to state 217


State 279

   81 arith_binary: arith_binary '-' • term

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    expression        go to state 209
    iden              go to state 210
    const             go to state 211
    number            go to state 212
    single_operation  go to state 213
    term              go to state 317
    arith_single      go to state 216
    lst_single        go to state 217


State 280

   83 term: term '*' • expression

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    expression        go to state 318
    iden              go to state 210
    const             go to state 211
    number            go to state 212
    single_operation  go to state 213
    arith_single      go to state 216
    lst_single        go to state 217


State 281

   84 term: term '/' • expression

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    expression        go to state 319
    iden              go to state 210
    const             go to state 211
    number            go to state 212
    single_operation  go to state 213
    arith_single      go to state 216
    lst_single        go to state 217


State 282

   90 lst_binary: lst_binary FILTER • lst_binary

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    expression        go to state 209
    iden              go to state 210
    const             go to state 211
    number            go to state 212
    single_operation  go to state 213
    arith_binary      go to state 214
    term              go to state 215
    arith_single      go to state 216
    lst_single        go to state 217
    lst_binary        go to state 320


State 283

   91 lst_binary: lst_binary MAP • lst_binary

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    expression        go to state 209
    iden              go to state 210
    const             go to state 211
    number            go to state 212
    single_operation  go to state 213
    arith_binary      go to state 214
    term              go to state 215
    arith_single      go to state 216
    lst_single        go to state 217
    lst_binary        go to state 321


State 284

   92 lst_binary: lst_binary ':' • lst_binary

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    func_calling      go to state 208
    expression        go to state 209
    iden              go to state 210
    const             go to state 211
    number            go to state 212
    single_operation  go to state 213
    arith_binary      go to state 214
    term              go to state 215
    arith_single      go to state 216
    lst_single        go to state 217
    lst_binary        go to state 322


State 285

   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   75          | operation AND operation •
   76          | operation • OR operation

    GREATER     shift, and go to state 221
    GREATER_EQ  shift, and go to state 222
    LESS        shift, and go to state 223
    LESS_EQ     shift, and go to state 224
    EQUAL       shift, and go to state 225
    NOT_EQ      shift, and go to state 226

    ')'  reduce using rule 75 (operation)
    ','  reduce using rule 75 (operation)
    AND  reduce using rule 75 (operation)
    OR   reduce using rule 75 (operation)


State 286

   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation
   76          | operation OR operation •

    GREATER     shift, and go to state 221
    GREATER_EQ  shift, and go to state 222
    LESS        shift, and go to state 223
    LESS_EQ     shift, and go to state 224
    EQUAL       shift, and go to state 225
    NOT_EQ      shift, and go to state 226

    ')'  reduce using rule 76 (operation)
    ','  reduce using rule 76 (operation)
    AND  reduce using rule 76 (operation)
    OR   reduce using rule 76 (operation)


State 287

   69 operation: operation • GREATER operation
   69          | operation GREATER operation •
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    ')'         reduce using rule 69 (operation)
    ','         reduce using rule 69 (operation)
    AND         reduce using rule 69 (operation)
    OR          reduce using rule 69 (operation)
    GREATER     reduce using rule 69 (operation)
    GREATER_EQ  reduce using rule 69 (operation)
    LESS        reduce using rule 69 (operation)
    LESS_EQ     reduce using rule 69 (operation)
    EQUAL       reduce using rule 69 (operation)
    NOT_EQ      reduce using rule 69 (operation)


State 288

   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   70          | operation GREATER_EQ operation •
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    ')'         reduce using rule 70 (operation)
    ','         reduce using rule 70 (operation)
    AND         reduce using rule 70 (operation)
    OR          reduce using rule 70 (operation)
    GREATER     reduce using rule 70 (operation)
    GREATER_EQ  reduce using rule 70 (operation)
    LESS        reduce using rule 70 (operation)
    LESS_EQ     reduce using rule 70 (operation)
    EQUAL       reduce using rule 70 (operation)
    NOT_EQ      reduce using rule 70 (operation)


State 289

   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   71          | operation LESS operation •
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    ')'         reduce using rule 71 (operation)
    ','         reduce using rule 71 (operation)
    AND         reduce using rule 71 (operation)
    OR          reduce using rule 71 (operation)
    GREATER     reduce using rule 71 (operation)
    GREATER_EQ  reduce using rule 71 (operation)
    LESS        reduce using rule 71 (operation)
    LESS_EQ     reduce using rule 71 (operation)
    EQUAL       reduce using rule 71 (operation)
    NOT_EQ      reduce using rule 71 (operation)


State 290

   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   72          | operation LESS_EQ operation •
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    ')'         reduce using rule 72 (operation)
    ','         reduce using rule 72 (operation)
    AND         reduce using rule 72 (operation)
    OR          reduce using rule 72 (operation)
    GREATER     reduce using rule 72 (operation)
    GREATER_EQ  reduce using rule 72 (operation)
    LESS        reduce using rule 72 (operation)
    LESS_EQ     reduce using rule 72 (operation)
    EQUAL       reduce using rule 72 (operation)
    NOT_EQ      reduce using rule 72 (operation)


State 291

   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   73          | operation EQUAL operation •
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    GREATER     shift, and go to state 221
    GREATER_EQ  shift, and go to state 222
    LESS        shift, and go to state 223
    LESS_EQ     shift, and go to state 224

    ')'     reduce using rule 73 (operation)
    ','     reduce using rule 73 (operation)
    AND     reduce using rule 73 (operation)
    OR      reduce using rule 73 (operation)
    EQUAL   reduce using rule 73 (operation)
    NOT_EQ  reduce using rule 73 (operation)


State 292

   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   74          | operation NOT_EQ operation •
   75          | operation • AND operation
   76          | operation • OR operation

    GREATER     shift, and go to state 221
    GREATER_EQ  shift, and go to state 222
    LESS        shift, and go to state 223
    LESS_EQ     shift, and go to state 224

    ')'     reduce using rule 74 (operation)
    ','     reduce using rule 74 (operation)
    AND     reduce using rule 74 (operation)
    OR      reduce using rule 74 (operation)
    EQUAL   reduce using rule 74 (operation)
    NOT_EQ  reduce using rule 74 (operation)


State 293

   32 command: error ';' •

    error           reduce using rule 32 (command)
    NUM_INT         reduce using rule 32 (command)
    NUM_FLOAT       reduce using rule 32 (command)
    NIL_CNST        reduce using rule 32 (command)
    ID              reduce using rule 32 (command)
    RETURN_STM      reduce using rule 32 (command)
    T_INT           reduce using rule 32 (command)
    T_FLOAT         reduce using rule 32 (command)
    IF_STMT         reduce using rule 32 (command)
    ELSE_STMT       reduce using rule 32 (command)
    FOR_STMT        reduce using rule 32 (command)
    OUTPUT_WRITE    reduce using rule 32 (command)
    OUTPUT_WRITELN  reduce using rule 32 (command)
    INPUT_READ      reduce using rule 32 (command)
    '('             reduce using rule 32 (command)
    '{'             reduce using rule 32 (command)
    '}'             reduce using rule 32 (command)
    '+'             reduce using rule 32 (command)
    '-'             reduce using rule 32 (command)
    '%'             reduce using rule 32 (command)
    '?'             reduce using rule 32 (command)
    '!'             reduce using rule 32 (command)


State 294

   38 return_stmt: RETURN_STM operation • ';'
   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    ';'         shift, and go to state 323
    AND         shift, and go to state 89
    OR          shift, and go to state 90
    GREATER     shift, and go to state 91
    GREATER_EQ  shift, and go to state 92
    LESS        shift, and go to state 93
    LESS_EQ     shift, and go to state 94
    EQUAL       shift, and go to state 95
    NOT_EQ      shift, and go to state 96


State 295

   36 conditional_stmt: IF_STMT '(' • operation ')' command
   37                 | IF_STMT '(' • operation ')' command ELSE_STMT command

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 178
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    operation         go to state 324
    single_operation  go to state 182
    arith_binary      go to state 183
    term              go to state 184
    arith_single      go to state 185
    lst_single        go to state 186
    lst_binary        go to state 187


State 296

   39 iteration: FOR_STMT '(' • loop_condition ')' command

    ID  shift, and go to state 107

    ';'  reduce using rule 42 (update_stmt)

    init_stmt       go to state 108
    loop_condition  go to state 325
    update_stmt     go to state 110
    iden            go to state 111


State 297

   45 output: OUTPUT_WRITE '(' • operation ')' ';'
   47       | OUTPUT_WRITE '(' • STRING ')' ';'

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    STRING     shift, and go to state 326
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 178
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    operation         go to state 327
    single_operation  go to state 182
    arith_binary      go to state 183
    term              go to state 184
    arith_single      go to state 185
    lst_single        go to state 186
    lst_binary        go to state 187


State 298

   46 output: OUTPUT_WRITELN '(' • operation ')' ';'
   48       | OUTPUT_WRITELN '(' • STRING ')' ';'

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    STRING     shift, and go to state 328
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 178
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    operation         go to state 329
    single_operation  go to state 182
    arith_binary      go to state 183
    term              go to state 184
    arith_single      go to state 185
    lst_single        go to state 186
    lst_binary        go to state 187


State 299

   49 input: INPUT_READ '(' • iden ')' ';'

    ID  shift, and go to state 189

    iden  go to state 330


State 300

   10 var_declaration: unq_declaration ';' •

    error           reduce using rule 10 (var_declaration)
    NUM_INT         reduce using rule 10 (var_declaration)
    NUM_FLOAT       reduce using rule 10 (var_declaration)
    NIL_CNST        reduce using rule 10 (var_declaration)
    ID              reduce using rule 10 (var_declaration)
    RETURN_STM      reduce using rule 10 (var_declaration)
    T_INT           reduce using rule 10 (var_declaration)
    T_FLOAT         reduce using rule 10 (var_declaration)
    IF_STMT         reduce using rule 10 (var_declaration)
    ELSE_STMT       reduce using rule 10 (var_declaration)
    FOR_STMT        reduce using rule 10 (var_declaration)
    OUTPUT_WRITE    reduce using rule 10 (var_declaration)
    OUTPUT_WRITELN  reduce using rule 10 (var_declaration)
    INPUT_READ      reduce using rule 10 (var_declaration)
    '('             reduce using rule 10 (var_declaration)
    '{'             reduce using rule 10 (var_declaration)
    '}'             reduce using rule 10 (var_declaration)
    '+'             reduce using rule 10 (var_declaration)
    '-'             reduce using rule 10 (var_declaration)
    '%'             reduce using rule 10 (var_declaration)
    '?'             reduce using rule 10 (var_declaration)
    '!'             reduce using rule 10 (var_declaration)


State 301

   30 command: $@2 '{' • block_commands '}'

    error           shift, and go to state 27
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 32
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 33
    FOR_STMT        shift, and go to state 34
    OUTPUT_WRITE    shift, and go to state 35
    OUTPUT_WRITELN  shift, and go to state 36
    INPUT_READ      shift, and go to state 37
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 29 ($@2)

    var_declaration   go to state 44
    unq_declaration   go to state 45
    block_commands    go to state 331
    command           go to state 47
    $@2               go to state 48
    init_variable     go to state 49
    init_stmt         go to state 50
    conditional_stmt  go to state 51
    return_stmt       go to state 52
    iteration         go to state 53
    output            go to state 54
    input             go to state 55
    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    type              go to state 165
    type_lst          go to state 11
    type_number       go to state 12
    operation         go to state 61
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 302

   34 init_variable: init_stmt ';' •

    error           reduce using rule 34 (init_variable)
    NUM_INT         reduce using rule 34 (init_variable)
    NUM_FLOAT       reduce using rule 34 (init_variable)
    NIL_CNST        reduce using rule 34 (init_variable)
    ID              reduce using rule 34 (init_variable)
    RETURN_STM      reduce using rule 34 (init_variable)
    T_INT           reduce using rule 34 (init_variable)
    T_FLOAT         reduce using rule 34 (init_variable)
    IF_STMT         reduce using rule 34 (init_variable)
    ELSE_STMT       reduce using rule 34 (init_variable)
    FOR_STMT        reduce using rule 34 (init_variable)
    OUTPUT_WRITE    reduce using rule 34 (init_variable)
    OUTPUT_WRITELN  reduce using rule 34 (init_variable)
    INPUT_READ      reduce using rule 34 (init_variable)
    '('             reduce using rule 34 (init_variable)
    '{'             reduce using rule 34 (init_variable)
    '}'             reduce using rule 34 (init_variable)
    '+'             reduce using rule 34 (init_variable)
    '-'             reduce using rule 34 (init_variable)
    '%'             reduce using rule 34 (init_variable)
    '?'             reduce using rule 34 (init_variable)
    '!'             reduce using rule 34 (init_variable)


State 303

   31 command: operation ';' •

    error           reduce using rule 31 (command)
    NUM_INT         reduce using rule 31 (command)
    NUM_FLOAT       reduce using rule 31 (command)
    NIL_CNST        reduce using rule 31 (command)
    ID              reduce using rule 31 (command)
    RETURN_STM      reduce using rule 31 (command)
    T_INT           reduce using rule 31 (command)
    T_FLOAT         reduce using rule 31 (command)
    IF_STMT         reduce using rule 31 (command)
    ELSE_STMT       reduce using rule 31 (command)
    FOR_STMT        reduce using rule 31 (command)
    OUTPUT_WRITE    reduce using rule 31 (command)
    OUTPUT_WRITELN  reduce using rule 31 (command)
    INPUT_READ      reduce using rule 31 (command)
    '('             reduce using rule 31 (command)
    '{'             reduce using rule 31 (command)
    '}'             reduce using rule 31 (command)
    '+'             reduce using rule 31 (command)
    '-'             reduce using rule 31 (command)
    '%'             reduce using rule 31 (command)
    '?'             reduce using rule 31 (command)
    '!'             reduce using rule 31 (command)


State 304

   35 init_stmt: iden '=' • operation

    NUM_INT    shift, and go to state 167
    NUM_FLOAT  shift, and go to state 168
    NIL_CNST   shift, and go to state 169
    ID         shift, and go to state 170
    '('        shift, and go to state 171
    '+'        shift, and go to state 172
    '-'        shift, and go to state 173
    '%'        shift, and go to state 174
    '?'        shift, and go to state 175
    '!'        shift, and go to state 176

    func_calling      go to state 177
    expression        go to state 178
    iden              go to state 179
    const             go to state 180
    number            go to state 181
    operation         go to state 332
    single_operation  go to state 182
    arith_binary      go to state 183
    term              go to state 184
    arith_single      go to state 185
    lst_single        go to state 186
    lst_binary        go to state 187


State 305

   52 func_calling: ID '(' $@3 • calling_parameters $@4 ')'

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    ')'  reduce using rule 17 (calling_parameters)

    calling_parameters      go to state 333
    lst_calling_parameters  go to state 136
    func_calling            go to state 208
    expression              go to state 209
    iden                    go to state 210
    const                   go to state 211
    number                  go to state 212
    operation               go to state 137
    single_operation        go to state 213
    arith_binary            go to state 214
    term                    go to state 215
    arith_single            go to state 216
    lst_single              go to state 217
    lst_binary              go to state 218


State 306

   57 expression: '(' operation ')' •

    ')'         reduce using rule 57 (expression)
    AND         reduce using rule 57 (expression)
    OR          reduce using rule 57 (expression)
    GREATER     reduce using rule 57 (expression)
    GREATER_EQ  reduce using rule 57 (expression)
    LESS        reduce using rule 57 (expression)
    LESS_EQ     reduce using rule 57 (expression)
    EQUAL       reduce using rule 57 (expression)
    NOT_EQ      reduce using rule 57 (expression)
    '+'         reduce using rule 57 (expression)
    '-'         reduce using rule 57 (expression)
    '*'         reduce using rule 57 (expression)
    '/'         reduce using rule 57 (expression)
    FILTER      reduce using rule 57 (expression)
    MAP         reduce using rule 57 (expression)
    ':'         reduce using rule 57 (expression)


State 307

   80 arith_binary: arith_binary '+' term •
   83 term: term • '*' expression
   84     | term • '/' expression

    '*'  shift, and go to state 258
    '/'  shift, and go to state 259

    ')'         reduce using rule 80 (arith_binary)
    AND         reduce using rule 80 (arith_binary)
    OR          reduce using rule 80 (arith_binary)
    GREATER     reduce using rule 80 (arith_binary)
    GREATER_EQ  reduce using rule 80 (arith_binary)
    LESS        reduce using rule 80 (arith_binary)
    LESS_EQ     reduce using rule 80 (arith_binary)
    EQUAL       reduce using rule 80 (arith_binary)
    NOT_EQ      reduce using rule 80 (arith_binary)
    '+'         reduce using rule 80 (arith_binary)
    '-'         reduce using rule 80 (arith_binary)
    FILTER      reduce using rule 80 (arith_binary)
    MAP         reduce using rule 80 (arith_binary)
    ':'         reduce using rule 80 (arith_binary)


State 308

   81 arith_binary: arith_binary '-' term •
   83 term: term • '*' expression
   84     | term • '/' expression

    '*'  shift, and go to state 258
    '/'  shift, and go to state 259

    ')'         reduce using rule 81 (arith_binary)
    AND         reduce using rule 81 (arith_binary)
    OR          reduce using rule 81 (arith_binary)
    GREATER     reduce using rule 81 (arith_binary)
    GREATER_EQ  reduce using rule 81 (arith_binary)
    LESS        reduce using rule 81 (arith_binary)
    LESS_EQ     reduce using rule 81 (arith_binary)
    EQUAL       reduce using rule 81 (arith_binary)
    NOT_EQ      reduce using rule 81 (arith_binary)
    '+'         reduce using rule 81 (arith_binary)
    '-'         reduce using rule 81 (arith_binary)
    FILTER      reduce using rule 81 (arith_binary)
    MAP         reduce using rule 81 (arith_binary)
    ':'         reduce using rule 81 (arith_binary)


State 309

   83 term: term '*' expression •

    ')'         reduce using rule 83 (term)
    AND         reduce using rule 83 (term)
    OR          reduce using rule 83 (term)
    GREATER     reduce using rule 83 (term)
    GREATER_EQ  reduce using rule 83 (term)
    LESS        reduce using rule 83 (term)
    LESS_EQ     reduce using rule 83 (term)
    EQUAL       reduce using rule 83 (term)
    NOT_EQ      reduce using rule 83 (term)
    '+'         reduce using rule 83 (term)
    '-'         reduce using rule 83 (term)
    '*'         reduce using rule 83 (term)
    '/'         reduce using rule 83 (term)
    FILTER      reduce using rule 83 (term)
    MAP         reduce using rule 83 (term)
    ':'         reduce using rule 83 (term)


State 310

   84 term: term '/' expression •

    ')'         reduce using rule 84 (term)
    AND         reduce using rule 84 (term)
    OR          reduce using rule 84 (term)
    GREATER     reduce using rule 84 (term)
    GREATER_EQ  reduce using rule 84 (term)
    LESS        reduce using rule 84 (term)
    LESS_EQ     reduce using rule 84 (term)
    EQUAL       reduce using rule 84 (term)
    NOT_EQ      reduce using rule 84 (term)
    '+'         reduce using rule 84 (term)
    '-'         reduce using rule 84 (term)
    '*'         reduce using rule 84 (term)
    '/'         reduce using rule 84 (term)
    FILTER      reduce using rule 84 (term)
    MAP         reduce using rule 84 (term)
    ':'         reduce using rule 84 (term)


State 311

   90 lst_binary: lst_binary • FILTER lst_binary
   90           | lst_binary FILTER lst_binary •
   91           | lst_binary • MAP lst_binary
   92           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 260
    MAP     shift, and go to state 261
    ':'     shift, and go to state 262

    ')'         reduce using rule 90 (lst_binary)
    AND         reduce using rule 90 (lst_binary)
    OR          reduce using rule 90 (lst_binary)
    GREATER     reduce using rule 90 (lst_binary)
    GREATER_EQ  reduce using rule 90 (lst_binary)
    LESS        reduce using rule 90 (lst_binary)
    LESS_EQ     reduce using rule 90 (lst_binary)
    EQUAL       reduce using rule 90 (lst_binary)
    NOT_EQ      reduce using rule 90 (lst_binary)


State 312

   90 lst_binary: lst_binary • FILTER lst_binary
   91           | lst_binary • MAP lst_binary
   91           | lst_binary MAP lst_binary •
   92           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 260
    MAP     shift, and go to state 261
    ':'     shift, and go to state 262

    ')'         reduce using rule 91 (lst_binary)
    AND         reduce using rule 91 (lst_binary)
    OR          reduce using rule 91 (lst_binary)
    GREATER     reduce using rule 91 (lst_binary)
    GREATER_EQ  reduce using rule 91 (lst_binary)
    LESS        reduce using rule 91 (lst_binary)
    LESS_EQ     reduce using rule 91 (lst_binary)
    EQUAL       reduce using rule 91 (lst_binary)
    NOT_EQ      reduce using rule 91 (lst_binary)


State 313

   90 lst_binary: lst_binary • FILTER lst_binary
   91           | lst_binary • MAP lst_binary
   92           | lst_binary • ':' lst_binary
   92           | lst_binary ':' lst_binary •

    FILTER  shift, and go to state 260
    MAP     shift, and go to state 261
    ':'     shift, and go to state 262

    ')'         reduce using rule 92 (lst_binary)
    AND         reduce using rule 92 (lst_binary)
    OR          reduce using rule 92 (lst_binary)
    GREATER     reduce using rule 92 (lst_binary)
    GREATER_EQ  reduce using rule 92 (lst_binary)
    LESS        reduce using rule 92 (lst_binary)
    LESS_EQ     reduce using rule 92 (lst_binary)
    EQUAL       reduce using rule 92 (lst_binary)
    NOT_EQ      reduce using rule 92 (lst_binary)


State 314

   52 func_calling: ID '(' $@3 • calling_parameters $@4 ')'

    NUM_INT    shift, and go to state 198
    NUM_FLOAT  shift, and go to state 199
    NIL_CNST   shift, and go to state 200
    ID         shift, and go to state 201
    '('        shift, and go to state 202
    '+'        shift, and go to state 203
    '-'        shift, and go to state 204
    '%'        shift, and go to state 205
    '?'        shift, and go to state 206
    '!'        shift, and go to state 207

    ')'  reduce using rule 17 (calling_parameters)

    calling_parameters      go to state 334
    lst_calling_parameters  go to state 136
    func_calling            go to state 208
    expression              go to state 209
    iden                    go to state 210
    const                   go to state 211
    number                  go to state 212
    operation               go to state 137
    single_operation        go to state 213
    arith_binary            go to state 214
    term                    go to state 215
    arith_single            go to state 216
    lst_single              go to state 217
    lst_binary              go to state 218


State 315

   57 expression: '(' operation ')' •

    ')'         reduce using rule 57 (expression)
    ','         reduce using rule 57 (expression)
    AND         reduce using rule 57 (expression)
    OR          reduce using rule 57 (expression)
    GREATER     reduce using rule 57 (expression)
    GREATER_EQ  reduce using rule 57 (expression)
    LESS        reduce using rule 57 (expression)
    LESS_EQ     reduce using rule 57 (expression)
    EQUAL       reduce using rule 57 (expression)
    NOT_EQ      reduce using rule 57 (expression)
    '+'         reduce using rule 57 (expression)
    '-'         reduce using rule 57 (expression)
    '*'         reduce using rule 57 (expression)
    '/'         reduce using rule 57 (expression)
    FILTER      reduce using rule 57 (expression)
    MAP         reduce using rule 57 (expression)
    ':'         reduce using rule 57 (expression)


State 316

   80 arith_binary: arith_binary '+' term •
   83 term: term • '*' expression
   84     | term • '/' expression

    '*'  shift, and go to state 280
    '/'  shift, and go to state 281

    ')'         reduce using rule 80 (arith_binary)
    ','         reduce using rule 80 (arith_binary)
    AND         reduce using rule 80 (arith_binary)
    OR          reduce using rule 80 (arith_binary)
    GREATER     reduce using rule 80 (arith_binary)
    GREATER_EQ  reduce using rule 80 (arith_binary)
    LESS        reduce using rule 80 (arith_binary)
    LESS_EQ     reduce using rule 80 (arith_binary)
    EQUAL       reduce using rule 80 (arith_binary)
    NOT_EQ      reduce using rule 80 (arith_binary)
    '+'         reduce using rule 80 (arith_binary)
    '-'         reduce using rule 80 (arith_binary)
    FILTER      reduce using rule 80 (arith_binary)
    MAP         reduce using rule 80 (arith_binary)
    ':'         reduce using rule 80 (arith_binary)


State 317

   81 arith_binary: arith_binary '-' term •
   83 term: term • '*' expression
   84     | term • '/' expression

    '*'  shift, and go to state 280
    '/'  shift, and go to state 281

    ')'         reduce using rule 81 (arith_binary)
    ','         reduce using rule 81 (arith_binary)
    AND         reduce using rule 81 (arith_binary)
    OR          reduce using rule 81 (arith_binary)
    GREATER     reduce using rule 81 (arith_binary)
    GREATER_EQ  reduce using rule 81 (arith_binary)
    LESS        reduce using rule 81 (arith_binary)
    LESS_EQ     reduce using rule 81 (arith_binary)
    EQUAL       reduce using rule 81 (arith_binary)
    NOT_EQ      reduce using rule 81 (arith_binary)
    '+'         reduce using rule 81 (arith_binary)
    '-'         reduce using rule 81 (arith_binary)
    FILTER      reduce using rule 81 (arith_binary)
    MAP         reduce using rule 81 (arith_binary)
    ':'         reduce using rule 81 (arith_binary)


State 318

   83 term: term '*' expression •

    ')'         reduce using rule 83 (term)
    ','         reduce using rule 83 (term)
    AND         reduce using rule 83 (term)
    OR          reduce using rule 83 (term)
    GREATER     reduce using rule 83 (term)
    GREATER_EQ  reduce using rule 83 (term)
    LESS        reduce using rule 83 (term)
    LESS_EQ     reduce using rule 83 (term)
    EQUAL       reduce using rule 83 (term)
    NOT_EQ      reduce using rule 83 (term)
    '+'         reduce using rule 83 (term)
    '-'         reduce using rule 83 (term)
    '*'         reduce using rule 83 (term)
    '/'         reduce using rule 83 (term)
    FILTER      reduce using rule 83 (term)
    MAP         reduce using rule 83 (term)
    ':'         reduce using rule 83 (term)


State 319

   84 term: term '/' expression •

    ')'         reduce using rule 84 (term)
    ','         reduce using rule 84 (term)
    AND         reduce using rule 84 (term)
    OR          reduce using rule 84 (term)
    GREATER     reduce using rule 84 (term)
    GREATER_EQ  reduce using rule 84 (term)
    LESS        reduce using rule 84 (term)
    LESS_EQ     reduce using rule 84 (term)
    EQUAL       reduce using rule 84 (term)
    NOT_EQ      reduce using rule 84 (term)
    '+'         reduce using rule 84 (term)
    '-'         reduce using rule 84 (term)
    '*'         reduce using rule 84 (term)
    '/'         reduce using rule 84 (term)
    FILTER      reduce using rule 84 (term)
    MAP         reduce using rule 84 (term)
    ':'         reduce using rule 84 (term)


State 320

   90 lst_binary: lst_binary • FILTER lst_binary
   90           | lst_binary FILTER lst_binary •
   91           | lst_binary • MAP lst_binary
   92           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 282
    MAP     shift, and go to state 283
    ':'     shift, and go to state 284

    ')'         reduce using rule 90 (lst_binary)
    ','         reduce using rule 90 (lst_binary)
    AND         reduce using rule 90 (lst_binary)
    OR          reduce using rule 90 (lst_binary)
    GREATER     reduce using rule 90 (lst_binary)
    GREATER_EQ  reduce using rule 90 (lst_binary)
    LESS        reduce using rule 90 (lst_binary)
    LESS_EQ     reduce using rule 90 (lst_binary)
    EQUAL       reduce using rule 90 (lst_binary)
    NOT_EQ      reduce using rule 90 (lst_binary)


State 321

   90 lst_binary: lst_binary • FILTER lst_binary
   91           | lst_binary • MAP lst_binary
   91           | lst_binary MAP lst_binary •
   92           | lst_binary • ':' lst_binary

    FILTER  shift, and go to state 282
    MAP     shift, and go to state 283
    ':'     shift, and go to state 284

    ')'         reduce using rule 91 (lst_binary)
    ','         reduce using rule 91 (lst_binary)
    AND         reduce using rule 91 (lst_binary)
    OR          reduce using rule 91 (lst_binary)
    GREATER     reduce using rule 91 (lst_binary)
    GREATER_EQ  reduce using rule 91 (lst_binary)
    LESS        reduce using rule 91 (lst_binary)
    LESS_EQ     reduce using rule 91 (lst_binary)
    EQUAL       reduce using rule 91 (lst_binary)
    NOT_EQ      reduce using rule 91 (lst_binary)


State 322

   90 lst_binary: lst_binary • FILTER lst_binary
   91           | lst_binary • MAP lst_binary
   92           | lst_binary • ':' lst_binary
   92           | lst_binary ':' lst_binary •

    FILTER  shift, and go to state 282
    MAP     shift, and go to state 283
    ':'     shift, and go to state 284

    ')'         reduce using rule 92 (lst_binary)
    ','         reduce using rule 92 (lst_binary)
    AND         reduce using rule 92 (lst_binary)
    OR          reduce using rule 92 (lst_binary)
    GREATER     reduce using rule 92 (lst_binary)
    GREATER_EQ  reduce using rule 92 (lst_binary)
    LESS        reduce using rule 92 (lst_binary)
    LESS_EQ     reduce using rule 92 (lst_binary)
    EQUAL       reduce using rule 92 (lst_binary)
    NOT_EQ      reduce using rule 92 (lst_binary)


State 323

   38 return_stmt: RETURN_STM operation ';' •

    error           reduce using rule 38 (return_stmt)
    NUM_INT         reduce using rule 38 (return_stmt)
    NUM_FLOAT       reduce using rule 38 (return_stmt)
    NIL_CNST        reduce using rule 38 (return_stmt)
    ID              reduce using rule 38 (return_stmt)
    RETURN_STM      reduce using rule 38 (return_stmt)
    T_INT           reduce using rule 38 (return_stmt)
    T_FLOAT         reduce using rule 38 (return_stmt)
    IF_STMT         reduce using rule 38 (return_stmt)
    ELSE_STMT       reduce using rule 38 (return_stmt)
    FOR_STMT        reduce using rule 38 (return_stmt)
    OUTPUT_WRITE    reduce using rule 38 (return_stmt)
    OUTPUT_WRITELN  reduce using rule 38 (return_stmt)
    INPUT_READ      reduce using rule 38 (return_stmt)
    '('             reduce using rule 38 (return_stmt)
    '{'             reduce using rule 38 (return_stmt)
    '}'             reduce using rule 38 (return_stmt)
    '+'             reduce using rule 38 (return_stmt)
    '-'             reduce using rule 38 (return_stmt)
    '%'             reduce using rule 38 (return_stmt)
    '?'             reduce using rule 38 (return_stmt)
    '!'             reduce using rule 38 (return_stmt)


State 324

   36 conditional_stmt: IF_STMT '(' operation • ')' command
   37                 | IF_STMT '(' operation • ')' command ELSE_STMT command
   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    ')'         shift, and go to state 335
    AND         shift, and go to state 190
    OR          shift, and go to state 191
    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195
    EQUAL       shift, and go to state 196
    NOT_EQ      shift, and go to state 197


State 325

   39 iteration: FOR_STMT '(' loop_condition • ')' command

    ')'  shift, and go to state 336


State 326

   47 output: OUTPUT_WRITE '(' STRING • ')' ';'

    ')'  shift, and go to state 337


State 327

   45 output: OUTPUT_WRITE '(' operation • ')' ';'
   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    ')'         shift, and go to state 338
    AND         shift, and go to state 190
    OR          shift, and go to state 191
    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195
    EQUAL       shift, and go to state 196
    NOT_EQ      shift, and go to state 197


State 328

   48 output: OUTPUT_WRITELN '(' STRING • ')' ';'

    ')'  shift, and go to state 339


State 329

   46 output: OUTPUT_WRITELN '(' operation • ')' ';'
   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    ')'         shift, and go to state 340
    AND         shift, and go to state 190
    OR          shift, and go to state 191
    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195
    EQUAL       shift, and go to state 196
    NOT_EQ      shift, and go to state 197


State 330

   49 input: INPUT_READ '(' iden • ')' ';'

    ')'  shift, and go to state 341


State 331

   30 command: $@2 '{' block_commands • '}'

    '}'  shift, and go to state 342


State 332

   35 init_stmt: iden '=' operation •
   69 operation: operation • GREATER operation
   70          | operation • GREATER_EQ operation
   71          | operation • LESS operation
   72          | operation • LESS_EQ operation
   73          | operation • EQUAL operation
   74          | operation • NOT_EQ operation
   75          | operation • AND operation
   76          | operation • OR operation

    AND         shift, and go to state 190
    OR          shift, and go to state 191
    GREATER     shift, and go to state 192
    GREATER_EQ  shift, and go to state 193
    LESS        shift, and go to state 194
    LESS_EQ     shift, and go to state 195
    EQUAL       shift, and go to state 196
    NOT_EQ      shift, and go to state 197

    ')'  reduce using rule 35 (init_stmt)


State 333

   52 func_calling: ID '(' $@3 calling_parameters • $@4 ')'

    ')'  reduce using rule 51 ($@4)

    $@4  go to state 343


State 334

   52 func_calling: ID '(' $@3 calling_parameters • $@4 ')'

    ')'  reduce using rule 51 ($@4)

    $@4  go to state 344


State 335

   36 conditional_stmt: IF_STMT '(' operation ')' • command
   37                 | IF_STMT '(' operation ')' • command ELSE_STMT command

    error           shift, and go to state 227
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 228
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 229
    FOR_STMT        shift, and go to state 230
    OUTPUT_WRITE    shift, and go to state 231
    OUTPUT_WRITELN  shift, and go to state 232
    INPUT_READ      shift, and go to state 233
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 29 ($@2)

    var_declaration   go to state 234
    unq_declaration   go to state 235
    command           go to state 345
    $@2               go to state 236
    init_variable     go to state 237
    init_stmt         go to state 238
    conditional_stmt  go to state 239
    return_stmt       go to state 240
    iteration         go to state 241
    output            go to state 242
    input             go to state 243
    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    type              go to state 165
    type_lst          go to state 11
    type_number       go to state 12
    operation         go to state 244
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 336

   39 iteration: FOR_STMT '(' loop_condition ')' • command

    error           shift, and go to state 227
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 228
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 229
    FOR_STMT        shift, and go to state 230
    OUTPUT_WRITE    shift, and go to state 231
    OUTPUT_WRITELN  shift, and go to state 232
    INPUT_READ      shift, and go to state 233
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 29 ($@2)

    var_declaration   go to state 234
    unq_declaration   go to state 235
    command           go to state 346
    $@2               go to state 236
    init_variable     go to state 237
    init_stmt         go to state 238
    conditional_stmt  go to state 239
    return_stmt       go to state 240
    iteration         go to state 241
    output            go to state 242
    input             go to state 243
    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    type              go to state 165
    type_lst          go to state 11
    type_number       go to state 12
    operation         go to state 244
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 337

   47 output: OUTPUT_WRITE '(' STRING ')' • ';'

    ';'  shift, and go to state 347


State 338

   45 output: OUTPUT_WRITE '(' operation ')' • ';'

    ';'  shift, and go to state 348


State 339

   48 output: OUTPUT_WRITELN '(' STRING ')' • ';'

    ';'  shift, and go to state 349


State 340

   46 output: OUTPUT_WRITELN '(' operation ')' • ';'

    ';'  shift, and go to state 350


State 341

   49 input: INPUT_READ '(' iden ')' • ';'

    ';'  shift, and go to state 351


State 342

   30 command: $@2 '{' block_commands '}' •

    error           reduce using rule 30 (command)
    NUM_INT         reduce using rule 30 (command)
    NUM_FLOAT       reduce using rule 30 (command)
    NIL_CNST        reduce using rule 30 (command)
    ID              reduce using rule 30 (command)
    RETURN_STM      reduce using rule 30 (command)
    T_INT           reduce using rule 30 (command)
    T_FLOAT         reduce using rule 30 (command)
    IF_STMT         reduce using rule 30 (command)
    ELSE_STMT       reduce using rule 30 (command)
    FOR_STMT        reduce using rule 30 (command)
    OUTPUT_WRITE    reduce using rule 30 (command)
    OUTPUT_WRITELN  reduce using rule 30 (command)
    INPUT_READ      reduce using rule 30 (command)
    '('             reduce using rule 30 (command)
    '{'             reduce using rule 30 (command)
    '}'             reduce using rule 30 (command)
    '+'             reduce using rule 30 (command)
    '-'             reduce using rule 30 (command)
    '%'             reduce using rule 30 (command)
    '?'             reduce using rule 30 (command)
    '!'             reduce using rule 30 (command)


State 343

   52 func_calling: ID '(' $@3 calling_parameters $@4 • ')'

    ')'  shift, and go to state 352


State 344

   52 func_calling: ID '(' $@3 calling_parameters $@4 • ')'

    ')'  shift, and go to state 353


State 345

   36 conditional_stmt: IF_STMT '(' operation ')' command •
   37                 | IF_STMT '(' operation ')' command • ELSE_STMT command

    ELSE_STMT  shift, and go to state 354

    error           reduce using rule 36 (conditional_stmt)
    NUM_INT         reduce using rule 36 (conditional_stmt)
    NUM_FLOAT       reduce using rule 36 (conditional_stmt)
    NIL_CNST        reduce using rule 36 (conditional_stmt)
    ID              reduce using rule 36 (conditional_stmt)
    RETURN_STM      reduce using rule 36 (conditional_stmt)
    T_INT           reduce using rule 36 (conditional_stmt)
    T_FLOAT         reduce using rule 36 (conditional_stmt)
    IF_STMT         reduce using rule 36 (conditional_stmt)
    FOR_STMT        reduce using rule 36 (conditional_stmt)
    OUTPUT_WRITE    reduce using rule 36 (conditional_stmt)
    OUTPUT_WRITELN  reduce using rule 36 (conditional_stmt)
    INPUT_READ      reduce using rule 36 (conditional_stmt)
    '('             reduce using rule 36 (conditional_stmt)
    '{'             reduce using rule 36 (conditional_stmt)
    '}'             reduce using rule 36 (conditional_stmt)
    '+'             reduce using rule 36 (conditional_stmt)
    '-'             reduce using rule 36 (conditional_stmt)
    '%'             reduce using rule 36 (conditional_stmt)
    '?'             reduce using rule 36 (conditional_stmt)
    '!'             reduce using rule 36 (conditional_stmt)


State 346

   39 iteration: FOR_STMT '(' loop_condition ')' command •

    error           reduce using rule 39 (iteration)
    NUM_INT         reduce using rule 39 (iteration)
    NUM_FLOAT       reduce using rule 39 (iteration)
    NIL_CNST        reduce using rule 39 (iteration)
    ID              reduce using rule 39 (iteration)
    RETURN_STM      reduce using rule 39 (iteration)
    T_INT           reduce using rule 39 (iteration)
    T_FLOAT         reduce using rule 39 (iteration)
    IF_STMT         reduce using rule 39 (iteration)
    ELSE_STMT       reduce using rule 39 (iteration)
    FOR_STMT        reduce using rule 39 (iteration)
    OUTPUT_WRITE    reduce using rule 39 (iteration)
    OUTPUT_WRITELN  reduce using rule 39 (iteration)
    INPUT_READ      reduce using rule 39 (iteration)
    '('             reduce using rule 39 (iteration)
    '{'             reduce using rule 39 (iteration)
    '}'             reduce using rule 39 (iteration)
    '+'             reduce using rule 39 (iteration)
    '-'             reduce using rule 39 (iteration)
    '%'             reduce using rule 39 (iteration)
    '?'             reduce using rule 39 (iteration)
    '!'             reduce using rule 39 (iteration)


State 347

   47 output: OUTPUT_WRITE '(' STRING ')' ';' •

    error           reduce using rule 47 (output)
    NUM_INT         reduce using rule 47 (output)
    NUM_FLOAT       reduce using rule 47 (output)
    NIL_CNST        reduce using rule 47 (output)
    ID              reduce using rule 47 (output)
    RETURN_STM      reduce using rule 47 (output)
    T_INT           reduce using rule 47 (output)
    T_FLOAT         reduce using rule 47 (output)
    IF_STMT         reduce using rule 47 (output)
    ELSE_STMT       reduce using rule 47 (output)
    FOR_STMT        reduce using rule 47 (output)
    OUTPUT_WRITE    reduce using rule 47 (output)
    OUTPUT_WRITELN  reduce using rule 47 (output)
    INPUT_READ      reduce using rule 47 (output)
    '('             reduce using rule 47 (output)
    '{'             reduce using rule 47 (output)
    '}'             reduce using rule 47 (output)
    '+'             reduce using rule 47 (output)
    '-'             reduce using rule 47 (output)
    '%'             reduce using rule 47 (output)
    '?'             reduce using rule 47 (output)
    '!'             reduce using rule 47 (output)


State 348

   45 output: OUTPUT_WRITE '(' operation ')' ';' •

    error           reduce using rule 45 (output)
    NUM_INT         reduce using rule 45 (output)
    NUM_FLOAT       reduce using rule 45 (output)
    NIL_CNST        reduce using rule 45 (output)
    ID              reduce using rule 45 (output)
    RETURN_STM      reduce using rule 45 (output)
    T_INT           reduce using rule 45 (output)
    T_FLOAT         reduce using rule 45 (output)
    IF_STMT         reduce using rule 45 (output)
    ELSE_STMT       reduce using rule 45 (output)
    FOR_STMT        reduce using rule 45 (output)
    OUTPUT_WRITE    reduce using rule 45 (output)
    OUTPUT_WRITELN  reduce using rule 45 (output)
    INPUT_READ      reduce using rule 45 (output)
    '('             reduce using rule 45 (output)
    '{'             reduce using rule 45 (output)
    '}'             reduce using rule 45 (output)
    '+'             reduce using rule 45 (output)
    '-'             reduce using rule 45 (output)
    '%'             reduce using rule 45 (output)
    '?'             reduce using rule 45 (output)
    '!'             reduce using rule 45 (output)


State 349

   48 output: OUTPUT_WRITELN '(' STRING ')' ';' •

    error           reduce using rule 48 (output)
    NUM_INT         reduce using rule 48 (output)
    NUM_FLOAT       reduce using rule 48 (output)
    NIL_CNST        reduce using rule 48 (output)
    ID              reduce using rule 48 (output)
    RETURN_STM      reduce using rule 48 (output)
    T_INT           reduce using rule 48 (output)
    T_FLOAT         reduce using rule 48 (output)
    IF_STMT         reduce using rule 48 (output)
    ELSE_STMT       reduce using rule 48 (output)
    FOR_STMT        reduce using rule 48 (output)
    OUTPUT_WRITE    reduce using rule 48 (output)
    OUTPUT_WRITELN  reduce using rule 48 (output)
    INPUT_READ      reduce using rule 48 (output)
    '('             reduce using rule 48 (output)
    '{'             reduce using rule 48 (output)
    '}'             reduce using rule 48 (output)
    '+'             reduce using rule 48 (output)
    '-'             reduce using rule 48 (output)
    '%'             reduce using rule 48 (output)
    '?'             reduce using rule 48 (output)
    '!'             reduce using rule 48 (output)


State 350

   46 output: OUTPUT_WRITELN '(' operation ')' ';' •

    error           reduce using rule 46 (output)
    NUM_INT         reduce using rule 46 (output)
    NUM_FLOAT       reduce using rule 46 (output)
    NIL_CNST        reduce using rule 46 (output)
    ID              reduce using rule 46 (output)
    RETURN_STM      reduce using rule 46 (output)
    T_INT           reduce using rule 46 (output)
    T_FLOAT         reduce using rule 46 (output)
    IF_STMT         reduce using rule 46 (output)
    ELSE_STMT       reduce using rule 46 (output)
    FOR_STMT        reduce using rule 46 (output)
    OUTPUT_WRITE    reduce using rule 46 (output)
    OUTPUT_WRITELN  reduce using rule 46 (output)
    INPUT_READ      reduce using rule 46 (output)
    '('             reduce using rule 46 (output)
    '{'             reduce using rule 46 (output)
    '}'             reduce using rule 46 (output)
    '+'             reduce using rule 46 (output)
    '-'             reduce using rule 46 (output)
    '%'             reduce using rule 46 (output)
    '?'             reduce using rule 46 (output)
    '!'             reduce using rule 46 (output)


State 351

   49 input: INPUT_READ '(' iden ')' ';' •

    error           reduce using rule 49 (input)
    NUM_INT         reduce using rule 49 (input)
    NUM_FLOAT       reduce using rule 49 (input)
    NIL_CNST        reduce using rule 49 (input)
    ID              reduce using rule 49 (input)
    RETURN_STM      reduce using rule 49 (input)
    T_INT           reduce using rule 49 (input)
    T_FLOAT         reduce using rule 49 (input)
    IF_STMT         reduce using rule 49 (input)
    ELSE_STMT       reduce using rule 49 (input)
    FOR_STMT        reduce using rule 49 (input)
    OUTPUT_WRITE    reduce using rule 49 (input)
    OUTPUT_WRITELN  reduce using rule 49 (input)
    INPUT_READ      reduce using rule 49 (input)
    '('             reduce using rule 49 (input)
    '{'             reduce using rule 49 (input)
    '}'             reduce using rule 49 (input)
    '+'             reduce using rule 49 (input)
    '-'             reduce using rule 49 (input)
    '%'             reduce using rule 49 (input)
    '?'             reduce using rule 49 (input)
    '!'             reduce using rule 49 (input)


State 352

   52 func_calling: ID '(' $@3 calling_parameters $@4 ')' •

    ')'         reduce using rule 52 (func_calling)
    AND         reduce using rule 52 (func_calling)
    OR          reduce using rule 52 (func_calling)
    GREATER     reduce using rule 52 (func_calling)
    GREATER_EQ  reduce using rule 52 (func_calling)
    LESS        reduce using rule 52 (func_calling)
    LESS_EQ     reduce using rule 52 (func_calling)
    EQUAL       reduce using rule 52 (func_calling)
    NOT_EQ      reduce using rule 52 (func_calling)
    '+'         reduce using rule 52 (func_calling)
    '-'         reduce using rule 52 (func_calling)
    '*'         reduce using rule 52 (func_calling)
    '/'         reduce using rule 52 (func_calling)
    FILTER      reduce using rule 52 (func_calling)
    MAP         reduce using rule 52 (func_calling)
    ':'         reduce using rule 52 (func_calling)


State 353

   52 func_calling: ID '(' $@3 calling_parameters $@4 ')' •

    ')'         reduce using rule 52 (func_calling)
    ','         reduce using rule 52 (func_calling)
    AND         reduce using rule 52 (func_calling)
    OR          reduce using rule 52 (func_calling)
    GREATER     reduce using rule 52 (func_calling)
    GREATER_EQ  reduce using rule 52 (func_calling)
    LESS        reduce using rule 52 (func_calling)
    LESS_EQ     reduce using rule 52 (func_calling)
    EQUAL       reduce using rule 52 (func_calling)
    NOT_EQ      reduce using rule 52 (func_calling)
    '+'         reduce using rule 52 (func_calling)
    '-'         reduce using rule 52 (func_calling)
    '*'         reduce using rule 52 (func_calling)
    '/'         reduce using rule 52 (func_calling)
    FILTER      reduce using rule 52 (func_calling)
    MAP         reduce using rule 52 (func_calling)
    ':'         reduce using rule 52 (func_calling)


State 354

   37 conditional_stmt: IF_STMT '(' operation ')' command ELSE_STMT • command

    error           shift, and go to state 227
    NUM_INT         shift, and go to state 28
    NUM_FLOAT       shift, and go to state 29
    NIL_CNST        shift, and go to state 30
    ID              shift, and go to state 31
    RETURN_STM      shift, and go to state 228
    T_INT           shift, and go to state 2
    T_FLOAT         shift, and go to state 3
    IF_STMT         shift, and go to state 229
    FOR_STMT        shift, and go to state 230
    OUTPUT_WRITE    shift, and go to state 231
    OUTPUT_WRITELN  shift, and go to state 232
    INPUT_READ      shift, and go to state 233
    '('             shift, and go to state 38
    '+'             shift, and go to state 39
    '-'             shift, and go to state 40
    '%'             shift, and go to state 41
    '?'             shift, and go to state 42
    '!'             shift, and go to state 43

    '{'  reduce using rule 29 ($@2)

    var_declaration   go to state 234
    unq_declaration   go to state 235
    command           go to state 355
    $@2               go to state 236
    init_variable     go to state 237
    init_stmt         go to state 238
    conditional_stmt  go to state 239
    return_stmt       go to state 240
    iteration         go to state 241
    output            go to state 242
    input             go to state 243
    func_calling      go to state 56
    expression        go to state 57
    iden              go to state 58
    const             go to state 59
    number            go to state 60
    type              go to state 165
    type_lst          go to state 11
    type_number       go to state 12
    operation         go to state 244
    single_operation  go to state 62
    arith_binary      go to state 63
    term              go to state 64
    arith_single      go to state 65
    lst_single        go to state 66
    lst_binary        go to state 67


State 355

   37 conditional_stmt: IF_STMT '(' operation ')' command ELSE_STMT command •

    error           reduce using rule 37 (conditional_stmt)
    NUM_INT         reduce using rule 37 (conditional_stmt)
    NUM_FLOAT       reduce using rule 37 (conditional_stmt)
    NIL_CNST        reduce using rule 37 (conditional_stmt)
    ID              reduce using rule 37 (conditional_stmt)
    RETURN_STM      reduce using rule 37 (conditional_stmt)
    T_INT           reduce using rule 37 (conditional_stmt)
    T_FLOAT         reduce using rule 37 (conditional_stmt)
    IF_STMT         reduce using rule 37 (conditional_stmt)
    ELSE_STMT       reduce using rule 37 (conditional_stmt)
    FOR_STMT        reduce using rule 37 (conditional_stmt)
    OUTPUT_WRITE    reduce using rule 37 (conditional_stmt)
    OUTPUT_WRITELN  reduce using rule 37 (conditional_stmt)
    INPUT_READ      reduce using rule 37 (conditional_stmt)
    '('             reduce using rule 37 (conditional_stmt)
    '{'             reduce using rule 37 (conditional_stmt)
    '}'             reduce using rule 37 (conditional_stmt)
    '+'             reduce using rule 37 (conditional_stmt)
    '-'             reduce using rule 37 (conditional_stmt)
    '%'             reduce using rule 37 (conditional_stmt)
    '?'             reduce using rule 37 (conditional_stmt)
    '!'             reduce using rule 37 (conditional_stmt)
